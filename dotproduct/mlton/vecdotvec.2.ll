; MLton 20180207
;   created this file on Fri Nov 30 15:12:38 2018.
; Do not edit this file.
; Flag settings: 
;    align: 8
;    atMLtons: (@MLton, --)
;    chunk: coalesce 4096
;    closureConvertGlobalize: true
;    closureConvertShrink: true
;    codegen: llvm
;    contifyIntoMain: false
;    debug: false
;    defaultChar: char8
;    defaultWideChar: widechar32
;    defaultInt: int32
;    defaultReal: real64
;    defaultWord: word32
;    diag passes: []
;    execute passes: []
;    elaborate allowConstant (default): false
;    elaborate allowConstant (enabled): true
;    elaborate allowFFI (default): false
;    elaborate allowFFI (enabled): true
;    elaborate allowPrim (default): false
;    elaborate allowPrim (enabled): true
;    elaborate allowOverload (default): false
;    elaborate allowOverload (enabled): true
;    elaborate allowRedefineSpecialIds (default): false
;    elaborate allowRedefineSpecialIds (enabled): true
;    elaborate allowSpecifySpecialIds (default): false
;    elaborate allowSpecifySpecialIds (enabled): true
;    elaborate deadCode (default): false
;    elaborate deadCode (enabled): true
;    elaborate forceUsed (default): false
;    elaborate forceUsed (enabled): true
;    elaborate ffiStr (default): 
;    elaborate ffiStr (enabled): true
;    elaborate nonexhaustiveBind (default): warn
;    elaborate nonexhaustiveBind (enabled): true
;    elaborate nonexhaustiveExnBind (default): default
;    elaborate nonexhaustiveExnBind (enabled): true
;    elaborate redundantBind (default): warn
;    elaborate redundantBind (enabled): true
;    elaborate nonexhaustiveMatch (default): warn
;    elaborate nonexhaustiveMatch (enabled): true
;    elaborate nonexhaustiveExnMatch (default): default
;    elaborate nonexhaustiveExnMatch (enabled): true
;    elaborate redundantMatch (default): warn
;    elaborate redundantMatch (enabled): true
;    elaborate nonexhaustiveRaise (default): ignore
;    elaborate nonexhaustiveRaise (enabled): true
;    elaborate nonexhaustiveExnRaise (default): ignore
;    elaborate nonexhaustiveExnRaise (enabled): true
;    elaborate redundantRaise (default): warn
;    elaborate redundantRaise (enabled): true
;    elaborate resolveScope (default): strdec
;    elaborate resolveScope (enabled): true
;    elaborate sequenceNonUnit (default): ignore
;    elaborate sequenceNonUnit (enabled): true
;    elaborate valrecConstr (default): warn
;    elaborate valrecConstr (enabled): true
;    elaborate warnUnused (default): false
;    elaborate warnUnused (enabled): true
;    elaborate allowDoDecls (default): false
;    elaborate allowDoDecls (enabled): true
;    elaborate allowExtendedNumConsts (default): false
;    elaborate allowExtendedNumConsts (enabled): true
;    elaborate allowExtendedTextConsts (default): false
;    elaborate allowExtendedTextConsts (enabled): true
;    elaborate allowLineComments (default): false
;    elaborate allowLineComments (enabled): true
;    elaborate allowOptBar (default): false
;    elaborate allowOptBar (enabled): true
;    elaborate allowOptSemicolon (default): false
;    elaborate allowOptSemicolon (enabled): true
;    elaborate allowOrPats (default): false
;    elaborate allowOrPats (enabled): true
;    elaborate allowRecordPunExps (default): false
;    elaborate allowRecordPunExps (enabled): true
;    elaborate allowSigWithtype (default): false
;    elaborate allowSigWithtype (enabled): true
;    elaborate allowVectorExps (default): false
;    elaborate allowVectorExps (enabled): true
;    elaborate allowVectorPats (default): false
;    elaborate allowVectorPats (enabled): true
;    elaborate only: false
;    emit main: true
;    export header: None
;    exn history: false
;    generated output format: executable
;    gc check: Limit
;    indentation: 3
;    inlineIntoMain: true
;    inlineLeafA: {loops = true, repeat = true, size = Some 20}
;    inlineLeafB: {loops = true, repeat = true, size = Some 40}
;    inlineNonRec: {small = 60, product = 320}
;    input file: vecdotvec
;    keep AST: false
;    keep CoreML: false
;    keep def use: true
;    keep dot: false
;    keep Machine: false
;    keep passes: []
;    keep RSSA: false
;    keep SSA: false
;    keep SSA2: false
;    keep SXML: false
;    keep XML: false
;    extra_: false
;    lib dir: /usr/local/lib/mlton
;    lib target dir: /usr/local/lib/mlton/targets/self
;    loop ssa passes: 1
;    loop ssa2 passes: 1
;    loop unrolling limit: 150
;    loop unswitching limit: 300
;    mark cards: true
;    max function size: 10000
;    mlb path vars: [{var = SML_LIB, path = $(LIB_MLTON_DIR)/sml}]
;    native commented: 0
;    native live stack: false
;    native optimize: 1
;    native move hoist: true
;    native copy prop: true
;    native copy prop cutoff: 1000
;    native cutoff: 100
;    native live transfer: 8
;    native shuffle: true
;    native ieee fp: false
;    native split: Some 20000
;    optFuel: None
;    optimizationPasses: [<ssa2::default>, <ssa::default>, <sxml::default>, <xml::default>]
;    polyvariance: Some {hofo = true, rounds = 2, small = 30, product = 300}
;    prefer abs paths: false
;    prof passes: []
;    profile: None
;    profile branch: false
;    profile C: []
;    profile IL: ProfileSource
;    profile include/exclude: [(Seq [Star [.], Or [Seq [Seq [[$], [(], [S], [M], [L], [_], [L], [I], [B], [)]]]], Star [.]], false)]
;    profile raise: false
;    profile stack: false
;    profile val: false
;    show basis: None
;    show basis compact: false
;    show basis def: true
;    show basis flat: true
;    show def-use: None
;    show types: true
;    target: self
;    target arch: AMD64
;    target OS: Linux
;    type check: false
;    verbosity: Silent
;    warn unrecognized annotation: true
;    warn deprecated features: true
;    zone cut depth: 100
declare float @llvm.sqrt.f32(float %Val)
declare double @llvm.sqrt.f64(double %Val)
declare float @llvm.sin.f32(float %Val)
declare double @llvm.sin.f64(double %Val)
declare float @llvm.cos.f32(float %Val)
declare double @llvm.cos.f64(double %Val)
declare float @llvm.exp.f32(float %Val)
declare double @llvm.exp.f64(double %Val)
declare float @llvm.log.f32(float %Val)
declare double @llvm.log.f64(double %Val)
declare float @llvm.log10.f32(float %Val)
declare double @llvm.log10.f64(double %Val)
declare float @llvm.fma.f32(float %a, float %b, float %c)
declare double @llvm.fma.f64(double %a, double %b, double %c)
declare float @llvm.fabs.f32(float %Val) ; requires LLVM 3.2
declare double @llvm.fabs.f64(double %Val) ; requires LLVM 3.2
declare float @llvm.rint.f32(float %Val) ; requires LLVM 3.3
declare double @llvm.rint.f64(double %Val) ; requires LLVM 3.3
declare {i8, i1} @llvm.sadd.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.sadd.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.sadd.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.sadd.with.overflow.i64(i64 %a, i64 %b)
declare {i8, i1} @llvm.uadd.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.uadd.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.uadd.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.uadd.with.overflow.i64(i64 %a, i64 %b)
declare {i8, i1} @llvm.ssub.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.ssub.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.ssub.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.ssub.with.overflow.i64(i64 %a, i64 %b)
declare {i8, i1} @llvm.usub.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.usub.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.usub.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.usub.with.overflow.i64(i64 %a, i64 %b)
declare {i8, i1} @llvm.smul.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.smul.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.smul.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.smul.with.overflow.i64(i64 %a, i64 %b)
declare {i8, i1} @llvm.umul.with.overflow.i8(i8 %a, i8 %b)
declare {i16, i1} @llvm.umul.with.overflow.i16(i16 %a, i16 %b)
declare {i32, i1} @llvm.umul.with.overflow.i32(i32 %a, i32 %b)
declare {i64, i1} @llvm.umul.with.overflow.i64(i64 %a, i64 %b)

; ML types
%Pointer = type i8*
%Int8 = type i8
%Int16 = type i16
%Int32 = type i32
%Int64 = type i64
%Real32 = type float
%Real64 = type double
%Word8 = type i8
%Word16 = type i16
%Word32 = type i32
%Word64 = type i64
%CPointer = type i8*
%Objptr = type i8*

%uintptr_t = type i64

@globalCPointer = external hidden global [0 x %CPointer]
@CReturnQ = external hidden global %CPointer
@globalInt8 = external hidden global [0 x %Int8]
@CReturnI8 = external hidden global %Int8
@globalInt16 = external hidden global [0 x %Int16]
@CReturnI16 = external hidden global %Int16
@globalInt32 = external hidden global [0 x %Int32]
@CReturnI32 = external hidden global %Int32
@globalInt64 = external hidden global [0 x %Int64]
@CReturnI64 = external hidden global %Int64
@globalObjptr = external hidden global [153 x %Objptr]
@CReturnP = external hidden global %Objptr
@globalReal32 = external hidden global [0 x %Real32]
@CReturnR32 = external hidden global %Real32
@globalReal64 = external hidden global [6 x %Real64]
@CReturnR64 = external hidden global %Real64
@globalWord8 = external hidden global [0 x %Word8]
@CReturnW8 = external hidden global %Word8
@globalWord16 = external hidden global [0 x %Word16]
@CReturnW16 = external hidden global %Word16
@globalWord32 = external hidden global [0 x %Word32]
@CReturnW32 = external hidden global %Word32
@globalWord64 = external hidden global [0 x %Word64]
@CReturnW64 = external hidden global %Word64
@globalObjptrNonRoot = external hidden global [1 x %Pointer]

%struct.cont = type { i8* }
%struct.GC_state = type opaque
@nextFun = external hidden global %uintptr_t
@returnToC = external hidden global i32
@nextChunks = external hidden global [0 x void (%struct.cont*)*]
@gcState = external hidden global %struct.GC_state


define hidden %struct.cont @Chunk0() {
entry:
	%cont = alloca %struct.cont
	%frontier = alloca %Pointer
	%l_nextFun = alloca %uintptr_t
	%r16160 = load %uintptr_t, %uintptr_t* @nextFun
	store %uintptr_t %r16160, %uintptr_t* %l_nextFun
	%stackTop = alloca %Pointer
	; CacheFrontier
	%r16161 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16162 = getelementptr inbounds i8, %Pointer %r16161, i32 0
	%r16163 = bitcast %Pointer %r16162 to %Pointer*
	%r16164 = load %Pointer, %Pointer* %r16163
	store %Pointer %r16164, %Pointer* %frontier
	; CacheStackTop
	%r16165 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16166 = getelementptr inbounds i8, %Pointer %r16165, i32 16
	%r16167 = bitcast %Pointer %r16166 to %Pointer*
	%r16168 = load %Pointer, %Pointer* %r16167
	store %Pointer %r16168, %Pointer* %stackTop
	%regQ_0 = alloca %CPointer
	%regQ_1 = alloca %CPointer
	%regQ_2 = alloca %CPointer
	%regQ_3 = alloca %CPointer
	%regQ_4 = alloca %CPointer
	%regQ_5 = alloca %CPointer
	%regQ_6 = alloca %CPointer
	%regQ_7 = alloca %CPointer
	%regQ_8 = alloca %CPointer
	%regQ_9 = alloca %CPointer
	%regQ_10 = alloca %CPointer
	%regQ_11 = alloca %CPointer
	%regQ_12 = alloca %CPointer
	%regQ_13 = alloca %CPointer
	%regQ_14 = alloca %CPointer
	%regQ_15 = alloca %CPointer
	%regQ_16 = alloca %CPointer
	%regQ_17 = alloca %CPointer
	%regQ_18 = alloca %CPointer
	%regQ_19 = alloca %CPointer
	%regQ_20 = alloca %CPointer
	%regQ_21 = alloca %CPointer
	%regQ_22 = alloca %CPointer
	%regQ_23 = alloca %CPointer
	%regQ_24 = alloca %CPointer
	%regQ_25 = alloca %CPointer
	%regQ_26 = alloca %CPointer
	%regQ_27 = alloca %CPointer
	%regQ_28 = alloca %CPointer
	%regQ_29 = alloca %CPointer
	%regQ_30 = alloca %CPointer
	%regQ_31 = alloca %CPointer
	%regQ_32 = alloca %CPointer
	%regQ_33 = alloca %CPointer
	%regQ_34 = alloca %CPointer
	%regQ_35 = alloca %CPointer
	%regQ_36 = alloca %CPointer
	%regQ_37 = alloca %CPointer
	%regQ_38 = alloca %CPointer
	%regQ_39 = alloca %CPointer
	%regQ_40 = alloca %CPointer
	%regQ_41 = alloca %CPointer
	%regQ_42 = alloca %CPointer
	%regQ_43 = alloca %CPointer
	%regQ_44 = alloca %CPointer
	%regQ_45 = alloca %CPointer
	%regQ_46 = alloca %CPointer
	%regQ_47 = alloca %CPointer
	%regQ_48 = alloca %CPointer
	%regQ_49 = alloca %CPointer
	%regQ_50 = alloca %CPointer
	%regQ_51 = alloca %CPointer
	%regQ_52 = alloca %CPointer
	%regQ_53 = alloca %CPointer
	%regQ_54 = alloca %CPointer
	%regQ_55 = alloca %CPointer
	%regQ_56 = alloca %CPointer
	%regQ_57 = alloca %CPointer
	%regQ_58 = alloca %CPointer
	%regQ_59 = alloca %CPointer
	%regQ_60 = alloca %CPointer
	%regQ_61 = alloca %CPointer
	%regQ_62 = alloca %CPointer
	%regQ_63 = alloca %CPointer
	%regQ_64 = alloca %CPointer
	%regQ_65 = alloca %CPointer
	%regQ_66 = alloca %CPointer
	%regQ_67 = alloca %CPointer
	%regQ_68 = alloca %CPointer
	%regQ_69 = alloca %CPointer
	%regQ_70 = alloca %CPointer
	%regQ_71 = alloca %CPointer
	%regQ_72 = alloca %CPointer
	%regQ_73 = alloca %CPointer
	%regQ_74 = alloca %CPointer
	%regQ_75 = alloca %CPointer
	%regQ_76 = alloca %CPointer
	%regQ_77 = alloca %CPointer
	%regQ_78 = alloca %CPointer
	%regQ_79 = alloca %CPointer
	%regQ_80 = alloca %CPointer
	%regQ_81 = alloca %CPointer
	%regQ_82 = alloca %CPointer
	%regQ_83 = alloca %CPointer
	%regQ_84 = alloca %CPointer
	%regQ_85 = alloca %CPointer
	%regQ_86 = alloca %CPointer
	%regQ_87 = alloca %CPointer
	%regQ_88 = alloca %CPointer
	%regQ_89 = alloca %CPointer
	%regQ_90 = alloca %CPointer
	%regQ_91 = alloca %CPointer
	%regQ_92 = alloca %CPointer
	%regQ_93 = alloca %CPointer
	%regQ_94 = alloca %CPointer
	%regQ_95 = alloca %CPointer
	%regQ_96 = alloca %CPointer
	%regQ_97 = alloca %CPointer
	%regQ_98 = alloca %CPointer
	%regQ_99 = alloca %CPointer
	%regQ_100 = alloca %CPointer
	%regQ_101 = alloca %CPointer
	%regQ_102 = alloca %CPointer
	%regQ_103 = alloca %CPointer
	%regQ_104 = alloca %CPointer
	%regQ_105 = alloca %CPointer
	%regQ_106 = alloca %CPointer
	%regQ_107 = alloca %CPointer
	%regQ_108 = alloca %CPointer
	%regQ_109 = alloca %CPointer
	%regQ_110 = alloca %CPointer
	%regQ_111 = alloca %CPointer
	%regQ_112 = alloca %CPointer
	%regQ_113 = alloca %CPointer
	%regQ_114 = alloca %CPointer
	%regQ_115 = alloca %CPointer
	%regQ_116 = alloca %CPointer
	%regQ_117 = alloca %CPointer
	%regQ_118 = alloca %CPointer
	%regQ_119 = alloca %CPointer
	%regQ_120 = alloca %CPointer
	%regQ_121 = alloca %CPointer
	%regQ_122 = alloca %CPointer
	%regQ_123 = alloca %CPointer
	%regQ_124 = alloca %CPointer
	%regQ_125 = alloca %CPointer
	%regQ_126 = alloca %CPointer
	%regQ_127 = alloca %CPointer
	%regQ_128 = alloca %CPointer
	%regQ_129 = alloca %CPointer
	%regQ_130 = alloca %CPointer
	%regQ_131 = alloca %CPointer
	%regQ_132 = alloca %CPointer
	%regQ_133 = alloca %CPointer
	%regQ_134 = alloca %CPointer
	%regQ_135 = alloca %CPointer
	%regQ_136 = alloca %CPointer
	%regQ_137 = alloca %CPointer
	%regQ_138 = alloca %CPointer
	%regQ_139 = alloca %CPointer
	%regQ_140 = alloca %CPointer
	%regQ_141 = alloca %CPointer
	%regQ_142 = alloca %CPointer
	%regQ_143 = alloca %CPointer
	%regQ_144 = alloca %CPointer
	%regQ_145 = alloca %CPointer
	%regQ_146 = alloca %CPointer
	%regQ_147 = alloca %CPointer
	%regQ_148 = alloca %CPointer
	%regQ_149 = alloca %CPointer
	%regQ_150 = alloca %CPointer
	%regQ_151 = alloca %CPointer
	%regQ_152 = alloca %CPointer
	%regQ_153 = alloca %CPointer
	%regQ_154 = alloca %CPointer
	%regQ_155 = alloca %CPointer
	%regQ_156 = alloca %CPointer
	%regQ_157 = alloca %CPointer
	%regQ_158 = alloca %CPointer
	%regQ_159 = alloca %CPointer
	%regQ_160 = alloca %CPointer
	%regQ_161 = alloca %CPointer
	%regQ_162 = alloca %CPointer
	%regQ_163 = alloca %CPointer
	%regQ_164 = alloca %CPointer
	%regQ_165 = alloca %CPointer
	%regQ_166 = alloca %CPointer
	%regQ_167 = alloca %CPointer
	%regQ_168 = alloca %CPointer
	%regQ_169 = alloca %CPointer
	%regQ_170 = alloca %CPointer
	%regQ_171 = alloca %CPointer
	%regQ_172 = alloca %CPointer
	%regQ_173 = alloca %CPointer
	%regQ_174 = alloca %CPointer
	%regQ_175 = alloca %CPointer
	%regQ_176 = alloca %CPointer
	%regQ_177 = alloca %CPointer
	%regQ_178 = alloca %CPointer
	%regQ_179 = alloca %CPointer
	%regQ_180 = alloca %CPointer
	%regQ_181 = alloca %CPointer
	%regQ_182 = alloca %CPointer
	%regQ_183 = alloca %CPointer
	%regQ_184 = alloca %CPointer
	%regQ_185 = alloca %CPointer
	%regQ_186 = alloca %CPointer
	%regQ_187 = alloca %CPointer
	%regQ_188 = alloca %CPointer
	%regP_0 = alloca %Objptr
	%regP_1 = alloca %Objptr
	%regP_2 = alloca %Objptr
	%regP_3 = alloca %Objptr
	%regP_4 = alloca %Objptr
	%regP_5 = alloca %Objptr
	%regP_6 = alloca %Objptr
	%regP_7 = alloca %Objptr
	%regP_8 = alloca %Objptr
	%regP_9 = alloca %Objptr
	%regP_10 = alloca %Objptr
	%regP_11 = alloca %Objptr
	%regP_12 = alloca %Objptr
	%regP_13 = alloca %Objptr
	%regP_14 = alloca %Objptr
	%regP_15 = alloca %Objptr
	%regP_16 = alloca %Objptr
	%regP_17 = alloca %Objptr
	%regP_18 = alloca %Objptr
	%regP_19 = alloca %Objptr
	%regP_20 = alloca %Objptr
	%regP_21 = alloca %Objptr
	%regP_22 = alloca %Objptr
	%regP_23 = alloca %Objptr
	%regP_24 = alloca %Objptr
	%regP_25 = alloca %Objptr
	%regP_26 = alloca %Objptr
	%regP_27 = alloca %Objptr
	%regP_28 = alloca %Objptr
	%regP_29 = alloca %Objptr
	%regP_30 = alloca %Objptr
	%regP_31 = alloca %Objptr
	%regP_32 = alloca %Objptr
	%regP_33 = alloca %Objptr
	%regP_34 = alloca %Objptr
	%regP_35 = alloca %Objptr
	%regP_36 = alloca %Objptr
	%regP_37 = alloca %Objptr
	%regP_38 = alloca %Objptr
	%regP_39 = alloca %Objptr
	%regP_40 = alloca %Objptr
	%regP_41 = alloca %Objptr
	%regP_42 = alloca %Objptr
	%regP_43 = alloca %Objptr
	%regP_44 = alloca %Objptr
	%regP_45 = alloca %Objptr
	%regP_46 = alloca %Objptr
	%regP_47 = alloca %Objptr
	%regP_48 = alloca %Objptr
	%regP_49 = alloca %Objptr
	%regP_50 = alloca %Objptr
	%regP_51 = alloca %Objptr
	%regP_52 = alloca %Objptr
	%regP_53 = alloca %Objptr
	%regP_54 = alloca %Objptr
	%regP_55 = alloca %Objptr
	%regP_56 = alloca %Objptr
	%regP_57 = alloca %Objptr
	%regP_58 = alloca %Objptr
	%regP_59 = alloca %Objptr
	%regP_60 = alloca %Objptr
	%regP_61 = alloca %Objptr
	%regP_62 = alloca %Objptr
	%regP_63 = alloca %Objptr
	%regP_64 = alloca %Objptr
	%regP_65 = alloca %Objptr
	%regP_66 = alloca %Objptr
	%regP_67 = alloca %Objptr
	%regP_68 = alloca %Objptr
	%regP_69 = alloca %Objptr
	%regP_70 = alloca %Objptr
	%regP_71 = alloca %Objptr
	%regP_72 = alloca %Objptr
	%regP_73 = alloca %Objptr
	%regP_74 = alloca %Objptr
	%regP_75 = alloca %Objptr
	%regP_76 = alloca %Objptr
	%regP_77 = alloca %Objptr
	%regP_78 = alloca %Objptr
	%regP_79 = alloca %Objptr
	%regP_80 = alloca %Objptr
	%regP_81 = alloca %Objptr
	%regP_82 = alloca %Objptr
	%regP_83 = alloca %Objptr
	%regP_84 = alloca %Objptr
	%regP_85 = alloca %Objptr
	%regP_86 = alloca %Objptr
	%regP_87 = alloca %Objptr
	%regP_88 = alloca %Objptr
	%regP_89 = alloca %Objptr
	%regP_90 = alloca %Objptr
	%regP_91 = alloca %Objptr
	%regP_92 = alloca %Objptr
	%regP_93 = alloca %Objptr
	%regP_94 = alloca %Objptr
	%regP_95 = alloca %Objptr
	%regP_96 = alloca %Objptr
	%regP_97 = alloca %Objptr
	%regP_98 = alloca %Objptr
	%regP_99 = alloca %Objptr
	%regP_100 = alloca %Objptr
	%regP_101 = alloca %Objptr
	%regP_102 = alloca %Objptr
	%regP_103 = alloca %Objptr
	%regP_104 = alloca %Objptr
	%regP_105 = alloca %Objptr
	%regP_106 = alloca %Objptr
	%regP_107 = alloca %Objptr
	%regP_108 = alloca %Objptr
	%regP_109 = alloca %Objptr
	%regP_110 = alloca %Objptr
	%regP_111 = alloca %Objptr
	%regP_112 = alloca %Objptr
	%regP_113 = alloca %Objptr
	%regP_114 = alloca %Objptr
	%regP_115 = alloca %Objptr
	%regP_116 = alloca %Objptr
	%regP_117 = alloca %Objptr
	%regP_118 = alloca %Objptr
	%regP_119 = alloca %Objptr
	%regP_120 = alloca %Objptr
	%regP_121 = alloca %Objptr
	%regP_122 = alloca %Objptr
	%regP_123 = alloca %Objptr
	%regP_124 = alloca %Objptr
	%regP_125 = alloca %Objptr
	%regP_126 = alloca %Objptr
	%regP_127 = alloca %Objptr
	%regP_128 = alloca %Objptr
	%regP_129 = alloca %Objptr
	%regP_130 = alloca %Objptr
	%regP_131 = alloca %Objptr
	%regP_132 = alloca %Objptr
	%regP_133 = alloca %Objptr
	%regP_134 = alloca %Objptr
	%regP_135 = alloca %Objptr
	%regP_136 = alloca %Objptr
	%regP_137 = alloca %Objptr
	%regP_138 = alloca %Objptr
	%regP_139 = alloca %Objptr
	%regP_140 = alloca %Objptr
	%regP_141 = alloca %Objptr
	%regP_142 = alloca %Objptr
	%regP_143 = alloca %Objptr
	%regP_144 = alloca %Objptr
	%regP_145 = alloca %Objptr
	%regP_146 = alloca %Objptr
	%regP_147 = alloca %Objptr
	%regP_148 = alloca %Objptr
	%regP_149 = alloca %Objptr
	%regP_150 = alloca %Objptr
	%regP_151 = alloca %Objptr
	%regP_152 = alloca %Objptr
	%regP_153 = alloca %Objptr
	%regP_154 = alloca %Objptr
	%regP_155 = alloca %Objptr
	%regP_156 = alloca %Objptr
	%regP_157 = alloca %Objptr
	%regP_158 = alloca %Objptr
	%regP_159 = alloca %Objptr
	%regP_160 = alloca %Objptr
	%regP_161 = alloca %Objptr
	%regP_162 = alloca %Objptr
	%regP_163 = alloca %Objptr
	%regP_164 = alloca %Objptr
	%regP_165 = alloca %Objptr
	%regP_166 = alloca %Objptr
	%regP_167 = alloca %Objptr
	%regW32_0 = alloca %Word32
	%regW64_0 = alloca %Word64
	br label %top
top:
	%r16169 = load %uintptr_t, %uintptr_t* %l_nextFun
	switch %uintptr_t %r16169, label %default [
		%uintptr_t 0, label %L_3
		%uintptr_t 1, label %L_4
		%uintptr_t 3, label %L_7
		%uintptr_t 193, label %F_0
	]
L_7:
	; Push(-8)
	%r16170 = load %Pointer, %Pointer* %stackTop
	%r16171 = getelementptr inbounds i8, %Pointer %r16170, i32 -8
	store %Pointer %r16171, %Pointer* %stackTop
	; Goto L_2
	br label %L_2

L_6:
	; CCall {args = (<GCState>, 0x1170, 0x0), frameInfo = Some {frameLayoutsIndex = 3}, func = {args = (GCState, Word64, Word32), convention = cdecl, kind = Runtime {bytesNeeded = None, ensuresBytesFree = true, mayGC = true, maySwitchThreads = false, modifiesFrontier = true, readsStackTop = true, writesStackTop = true}, prototype = {args = (CPointer, Word64, Int32), res = None}, return = Bits0, symbolScope = private, target = GC_collect}, return = Some L_7}
	; GetOperands
	%r16172 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16173 = load %Pointer, %Pointer* %stackTop
	%r16174 = getelementptr inbounds i8, %Pointer %r16173, i32 0
	%r16175 = bitcast %Pointer %r16174 to %uintptr_t*
	store %uintptr_t 3, %uintptr_t* %r16175
	; Push(8)
	%r16176 = load %Pointer, %Pointer* %stackTop
	%r16177 = getelementptr inbounds i8, %Pointer %r16176, i32 8
	store %Pointer %r16177, %Pointer* %stackTop
	; FlushFrontier
	%r16178 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16179 = getelementptr inbounds i8, %Pointer %r16178, i32 0
	%r16180 = bitcast %Pointer %r16179 to %Pointer*
	%r16181 = load %Pointer, %Pointer* %frontier
	store %Pointer %r16181, %Pointer* %r16180
	; FlushStackTop
	%r16182 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16183 = getelementptr inbounds i8, %Pointer %r16182, i32 16
	%r16184 = bitcast %Pointer %r16183 to %Pointer*
	%r16185 = load %Pointer, %Pointer* %stackTop
	store %Pointer %r16185, %Pointer* %r16184
	; Call
	call void @GC_collect(%Pointer %r16172, %Word64 4464, %Word32 0)
	; CacheFrontier
	%r16186 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16187 = getelementptr inbounds i8, %Pointer %r16186, i32 0
	%r16188 = bitcast %Pointer %r16187 to %Pointer*
	%r16189 = load %Pointer, %Pointer* %r16188
	store %Pointer %r16189, %Pointer* %frontier
	; CacheStackTop
	%r16190 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16191 = getelementptr inbounds i8, %Pointer %r16190, i32 16
	%r16192 = bitcast %Pointer %r16191 to %Pointer*
	%r16193 = load %Pointer, %Pointer* %r16192
	store %Pointer %r16193, %Pointer* %stackTop
	br label %L_7

L_4:
	; Push(-8)
	%r16194 = load %Pointer, %Pointer* %stackTop
	%r16195 = getelementptr inbounds i8, %Pointer %r16194, i32 -8
	store %Pointer %r16195, %Pointer* %stackTop
	%r16197 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 22
	%r16196 = load %Objptr, %Objptr* @CReturnP
	store %Objptr %r16196, %Objptr* %r16197
	%r16198 = load %Pointer, %Pointer* %stackTop
	%r16199 = getelementptr inbounds i8, %Pointer %r16198, i32 0
	%r16200 = bitcast %Pointer %r16199 to %uintptr_t*
	store %uintptr_t 2, %uintptr_t* %r16200
	; Push(8)
	%r16201 = load %Pointer, %Pointer* %stackTop
	%r16202 = getelementptr inbounds i8, %Pointer %r16201, i32 8
	store %Pointer %r16202, %Pointer* %stackTop
	; FarJump
	%r16203 = bitcast %struct.cont ()* @Chunk1 to i8*
	%r16204 = getelementptr inbounds %struct.cont, %struct.cont* %cont, i32 0, i32 0
	store i8* %r16203, i8** %r16204
	store %uintptr_t 192, %uintptr_t* @nextFun
	br label %leaveChunk

L_3:
	; Push(-8)
	%r16205 = load %Pointer, %Pointer* %stackTop
	%r16206 = getelementptr inbounds i8, %Pointer %r16205, i32 -8
	store %Pointer %r16206, %Pointer* %stackTop
	%r16208 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 21
	%r16207 = load %Objptr, %Objptr* @CReturnP
	store %Objptr %r16207, %Objptr* %r16208
	; CCall {args = (<GCState>, 0x0, 0x0, 0x17), frameInfo = Some {frameLayoutsIndex = 1}, func = {args = (GCState, Word64, Word64, Word64), convention = cdecl, kind = Runtime {bytesNeeded = None, ensuresBytesFree = true, mayGC = true, maySwitchThreads = false, modifiesFrontier = true, readsStackTop = true, writesStackTop = true}, prototype = {args = (CPointer, Word64, Int64, Word64), res = Some Objptr}, return = Objptr (opt_11), symbolScope = private, target = GC_arrayAllocate}, return = Some L_4}
	; GetOperands
	%r16209 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16210 = load %Pointer, %Pointer* %stackTop
	%r16211 = getelementptr inbounds i8, %Pointer %r16210, i32 0
	%r16212 = bitcast %Pointer %r16211 to %uintptr_t*
	store %uintptr_t 1, %uintptr_t* %r16212
	; Push(8)
	%r16213 = load %Pointer, %Pointer* %stackTop
	%r16214 = getelementptr inbounds i8, %Pointer %r16213, i32 8
	store %Pointer %r16214, %Pointer* %stackTop
	; FlushFrontier
	%r16215 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16216 = getelementptr inbounds i8, %Pointer %r16215, i32 0
	%r16217 = bitcast %Pointer %r16216 to %Pointer*
	%r16218 = load %Pointer, %Pointer* %frontier
	store %Pointer %r16218, %Pointer* %r16217
	; FlushStackTop
	%r16219 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16220 = getelementptr inbounds i8, %Pointer %r16219, i32 16
	%r16221 = bitcast %Pointer %r16220 to %Pointer*
	%r16222 = load %Pointer, %Pointer* %stackTop
	store %Pointer %r16222, %Pointer* %r16221
	; Call
	%r16223 = call %Objptr @GC_arrayAllocate(%Pointer %r16209, %Word64 0, %Word64 0, %Word64 23)
	store %Objptr %r16223, %Objptr* @CReturnP
	; CacheFrontier
	%r16224 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16225 = getelementptr inbounds i8, %Pointer %r16224, i32 0
	%r16226 = bitcast %Pointer %r16225 to %Pointer*
	%r16227 = load %Pointer, %Pointer* %r16226
	store %Pointer %r16227, %Pointer* %frontier
	; CacheStackTop
	%r16228 = bitcast %struct.GC_state* @gcState to %Pointer
	%r16229 = getelementptr inbounds i8, %Pointer %r16228, i32 16
	%r16230 = bitcast %Pointer %r16229 to %Pointer*
	%r16231 = load %Pointer, %Pointer* %r16230
	store %Pointer %r16231, %Pointer* %stackTop
	br label %L_4

L_2:
	; CW64 (<Frontier>)  = 0x11
	%r16232 = load %Pointer, %Pointer* %frontier
	%r16233 = bitcast %Pointer %r16232 to %Word64*
	store %Word64 17, %Word64* %r16233
	; RQ(188): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16234 = load %Pointer, %Pointer* %frontier
	%r16236 = ptrtoint %Pointer %r16234 to %uintptr_t
	%r16237 = add %uintptr_t %r16236, 8
	%r16235 = inttoptr %uintptr_t %r16237 to %Pointer
	store %CPointer %r16235, %CPointer* %regQ_188
	; RP(0): Objptr (opt_8)  = Cast (RQ(188): CPointer, Objptr (opt_8))
	%r16238 = load %CPointer, %CPointer* %regQ_188
	%r16239 = bitcast %CPointer %r16238 to %Objptr
	store %Objptr %r16239, %Objptr* %regP_0
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16240 = load %Pointer, %Pointer* %frontier
	%r16242 = ptrtoint %Pointer %r16240 to %uintptr_t
	%r16243 = add %uintptr_t %r16242, 24
	%r16241 = inttoptr %uintptr_t %r16243 to %Pointer
	store %Pointer %r16241, %Pointer* %frontier
	; OW64 (RP(0): Objptr (opt_8), 0): Word64  = 0x0
	%r16244 = load %Objptr, %Objptr* %regP_0
	%r16245 = getelementptr inbounds i8, %Objptr %r16244, i32 0
	%r16246 = bitcast %Objptr %r16245 to %Word64*
	store %Word64 0, %Word64* %r16246
	; OW64 (RP(0): Objptr (opt_8), 8): Word64  = 0x0
	%r16247 = load %Objptr, %Objptr* %regP_0
	%r16248 = getelementptr inbounds i8, %Objptr %r16247, i32 8
	%r16249 = bitcast %Objptr %r16248 to %Word64*
	store %Word64 0, %Word64* %r16249
	; CW64 (<Frontier>)  = 0x5D
	%r16250 = load %Pointer, %Pointer* %frontier
	%r16251 = bitcast %Pointer %r16250 to %Word64*
	store %Word64 93, %Word64* %r16251
	; RQ(187): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16252 = load %Pointer, %Pointer* %frontier
	%r16254 = ptrtoint %Pointer %r16252 to %uintptr_t
	%r16255 = add %uintptr_t %r16254, 8
	%r16253 = inttoptr %uintptr_t %r16255 to %Pointer
	store %CPointer %r16253, %CPointer* %regQ_187
	; glob {index = 0, isRoot = true, ty = Objptr (opt_46)}  = Cast (RQ(187): CPointer, Objptr (opt_46))
	%r16256 = load %CPointer, %CPointer* %regQ_187
	%r16257 = bitcast %CPointer %r16256 to %Objptr
	%r16258 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 0
	store %Objptr %r16257, %Objptr* %r16258
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16259 = load %Pointer, %Pointer* %frontier
	%r16261 = ptrtoint %Pointer %r16259 to %uintptr_t
	%r16262 = add %uintptr_t %r16261, 24
	%r16260 = inttoptr %uintptr_t %r16262 to %Pointer
	store %Pointer %r16260, %Pointer* %frontier
	; OP (glob {index = 0, isRoot = true, ty = Objptr (opt_46)}, 0): Objptr (opt_8)  = RP(0): Objptr (opt_8)
	%r16263 = load %Objptr, %Objptr* %regP_0
	%r16264 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 0
	%r16265 = load %Objptr, %Objptr* %r16264
	%r16266 = getelementptr inbounds i8, %Objptr %r16265, i32 0
	%r16267 = bitcast %Objptr %r16266 to %Objptr*
	store %Objptr %r16263, %Objptr* %r16267
	; OP (glob {index = 0, isRoot = true, ty = Objptr (opt_46)}, 8): Objptr (opt_46)  = Cast (0x1, Objptr (opt_46))
	%r16268 = inttoptr %Word64 1 to %Objptr
	%r16269 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 0
	%r16270 = load %Objptr, %Objptr* %r16269
	%r16271 = getelementptr inbounds i8, %Objptr %r16270, i32 8
	%r16272 = bitcast %Objptr %r16271 to %Objptr*
	store %Objptr %r16268, %Objptr* %r16272
	; CW64 (<Frontier>)  = 0x11
	%r16273 = load %Pointer, %Pointer* %frontier
	%r16274 = bitcast %Pointer %r16273 to %Word64*
	store %Word64 17, %Word64* %r16274
	; RQ(186): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16275 = load %Pointer, %Pointer* %frontier
	%r16277 = ptrtoint %Pointer %r16275 to %uintptr_t
	%r16278 = add %uintptr_t %r16277, 8
	%r16276 = inttoptr %uintptr_t %r16278 to %Pointer
	store %CPointer %r16276, %CPointer* %regQ_186
	; RP(1): Objptr (opt_8)  = Cast (RQ(186): CPointer, Objptr (opt_8))
	%r16279 = load %CPointer, %CPointer* %regQ_186
	%r16280 = bitcast %CPointer %r16279 to %Objptr
	store %Objptr %r16280, %Objptr* %regP_1
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16281 = load %Pointer, %Pointer* %frontier
	%r16283 = ptrtoint %Pointer %r16281 to %uintptr_t
	%r16284 = add %uintptr_t %r16283, 24
	%r16282 = inttoptr %uintptr_t %r16284 to %Pointer
	store %Pointer %r16282, %Pointer* %frontier
	; OW64 (RP(1): Objptr (opt_8), 0): Word64  = 0x1
	%r16285 = load %Objptr, %Objptr* %regP_1
	%r16286 = getelementptr inbounds i8, %Objptr %r16285, i32 0
	%r16287 = bitcast %Objptr %r16286 to %Word64*
	store %Word64 1, %Word64* %r16287
	; OW64 (RP(1): Objptr (opt_8), 8): Word64  = 0x0
	%r16288 = load %Objptr, %Objptr* %regP_1
	%r16289 = getelementptr inbounds i8, %Objptr %r16288, i32 8
	%r16290 = bitcast %Objptr %r16289 to %Word64*
	store %Word64 0, %Word64* %r16290
	; CW64 (<Frontier>)  = 0x5D
	%r16291 = load %Pointer, %Pointer* %frontier
	%r16292 = bitcast %Pointer %r16291 to %Word64*
	store %Word64 93, %Word64* %r16292
	; RQ(185): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16293 = load %Pointer, %Pointer* %frontier
	%r16295 = ptrtoint %Pointer %r16293 to %uintptr_t
	%r16296 = add %uintptr_t %r16295, 8
	%r16294 = inttoptr %uintptr_t %r16296 to %Pointer
	store %CPointer %r16294, %CPointer* %regQ_185
	; glob {index = 1, isRoot = true, ty = Objptr (opt_46)}  = Cast (RQ(185): CPointer, Objptr (opt_46))
	%r16297 = load %CPointer, %CPointer* %regQ_185
	%r16298 = bitcast %CPointer %r16297 to %Objptr
	%r16299 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 1
	store %Objptr %r16298, %Objptr* %r16299
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16300 = load %Pointer, %Pointer* %frontier
	%r16302 = ptrtoint %Pointer %r16300 to %uintptr_t
	%r16303 = add %uintptr_t %r16302, 24
	%r16301 = inttoptr %uintptr_t %r16303 to %Pointer
	store %Pointer %r16301, %Pointer* %frontier
	; OP (glob {index = 1, isRoot = true, ty = Objptr (opt_46)}, 0): Objptr (opt_8)  = RP(1): Objptr (opt_8)
	%r16304 = load %Objptr, %Objptr* %regP_1
	%r16305 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 1
	%r16306 = load %Objptr, %Objptr* %r16305
	%r16307 = getelementptr inbounds i8, %Objptr %r16306, i32 0
	%r16308 = bitcast %Objptr %r16307 to %Objptr*
	store %Objptr %r16304, %Objptr* %r16308
	; OP (glob {index = 1, isRoot = true, ty = Objptr (opt_46)}, 8): Objptr (opt_46)  = Cast (0x1, Objptr (opt_46))
	%r16309 = inttoptr %Word64 1 to %Objptr
	%r16310 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 1
	%r16311 = load %Objptr, %Objptr* %r16310
	%r16312 = getelementptr inbounds i8, %Objptr %r16311, i32 8
	%r16313 = bitcast %Objptr %r16312 to %Objptr*
	store %Objptr %r16309, %Objptr* %r16313
	; CW64 (<Frontier>)  = 0x27
	%r16314 = load %Pointer, %Pointer* %frontier
	%r16315 = bitcast %Pointer %r16314 to %Word64*
	store %Word64 39, %Word64* %r16315
	; RQ(184): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16316 = load %Pointer, %Pointer* %frontier
	%r16318 = ptrtoint %Pointer %r16316 to %uintptr_t
	%r16319 = add %uintptr_t %r16318, 8
	%r16317 = inttoptr %uintptr_t %r16319 to %Pointer
	store %CPointer %r16317, %CPointer* %regQ_184
	; glob {index = 2, isRoot = true, ty = Objptr (opt_19)}  = Cast (RQ(184): CPointer, Objptr (opt_19))
	%r16320 = load %CPointer, %CPointer* %regQ_184
	%r16321 = bitcast %CPointer %r16320 to %Objptr
	%r16322 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 2
	store %Objptr %r16321, %Objptr* %r16322
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16323 = load %Pointer, %Pointer* %frontier
	%r16325 = ptrtoint %Pointer %r16323 to %uintptr_t
	%r16326 = add %uintptr_t %r16325, 24
	%r16324 = inttoptr %uintptr_t %r16326 to %Pointer
	store %Pointer %r16324, %Pointer* %frontier
	; OW32 (glob {index = 2, isRoot = true, ty = Objptr (opt_19)}, 0): Word32  = 0xD
	%r16327 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 2
	%r16328 = load %Objptr, %Objptr* %r16327
	%r16329 = getelementptr inbounds i8, %Objptr %r16328, i32 0
	%r16330 = bitcast %Objptr %r16329 to %Word32*
	store %Word32 13, %Word32* %r16330
	; OP (glob {index = 2, isRoot = true, ty = Objptr (opt_19)}, 8): Objptr (opt_3)  = glob {index = 23, isRoot = true, ty = Objptr (opt_3)}
	%r16331 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 23
	%r16332 = load %Objptr, %Objptr* %r16331
	%r16333 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 2
	%r16334 = load %Objptr, %Objptr* %r16333
	%r16335 = getelementptr inbounds i8, %Objptr %r16334, i32 8
	%r16336 = bitcast %Objptr %r16335 to %Objptr*
	store %Objptr %r16332, %Objptr* %r16336
	; CW64 (<Frontier>)  = 0x27
	%r16337 = load %Pointer, %Pointer* %frontier
	%r16338 = bitcast %Pointer %r16337 to %Word64*
	store %Word64 39, %Word64* %r16338
	; RQ(183): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16339 = load %Pointer, %Pointer* %frontier
	%r16341 = ptrtoint %Pointer %r16339 to %uintptr_t
	%r16342 = add %uintptr_t %r16341, 8
	%r16340 = inttoptr %uintptr_t %r16342 to %Pointer
	store %CPointer %r16340, %CPointer* %regQ_183
	; RP(2): Objptr (opt_19)  = Cast (RQ(183): CPointer, Objptr (opt_19))
	%r16343 = load %CPointer, %CPointer* %regQ_183
	%r16344 = bitcast %CPointer %r16343 to %Objptr
	store %Objptr %r16344, %Objptr* %regP_2
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16345 = load %Pointer, %Pointer* %frontier
	%r16347 = ptrtoint %Pointer %r16345 to %uintptr_t
	%r16348 = add %uintptr_t %r16347, 24
	%r16346 = inttoptr %uintptr_t %r16348 to %Pointer
	store %Pointer %r16346, %Pointer* %frontier
	; OW32 (RP(2): Objptr (opt_19), 0): Word32  = 0x62
	%r16349 = load %Objptr, %Objptr* %regP_2
	%r16350 = getelementptr inbounds i8, %Objptr %r16349, i32 0
	%r16351 = bitcast %Objptr %r16350 to %Word32*
	store %Word32 98, %Word32* %r16351
	; OP (RP(2): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 24, isRoot = true, ty = Objptr (opt_3)}
	%r16352 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 24
	%r16353 = load %Objptr, %Objptr* %r16352
	%r16354 = load %Objptr, %Objptr* %regP_2
	%r16355 = getelementptr inbounds i8, %Objptr %r16354, i32 8
	%r16356 = bitcast %Objptr %r16355 to %Objptr*
	store %Objptr %r16353, %Objptr* %r16356
	; CW64 (<Frontier>)  = 0x27
	%r16357 = load %Pointer, %Pointer* %frontier
	%r16358 = bitcast %Pointer %r16357 to %Word64*
	store %Word64 39, %Word64* %r16358
	; RQ(182): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16359 = load %Pointer, %Pointer* %frontier
	%r16361 = ptrtoint %Pointer %r16359 to %uintptr_t
	%r16362 = add %uintptr_t %r16361, 8
	%r16360 = inttoptr %uintptr_t %r16362 to %Pointer
	store %CPointer %r16360, %CPointer* %regQ_182
	; RP(3): Objptr (opt_19)  = Cast (RQ(182): CPointer, Objptr (opt_19))
	%r16363 = load %CPointer, %CPointer* %regQ_182
	%r16364 = bitcast %CPointer %r16363 to %Objptr
	store %Objptr %r16364, %Objptr* %regP_3
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16365 = load %Pointer, %Pointer* %frontier
	%r16367 = ptrtoint %Pointer %r16365 to %uintptr_t
	%r16368 = add %uintptr_t %r16367, 24
	%r16366 = inttoptr %uintptr_t %r16368 to %Pointer
	store %Pointer %r16366, %Pointer* %frontier
	; OW32 (RP(3): Objptr (opt_19), 0): Word32  = 0x63
	%r16369 = load %Objptr, %Objptr* %regP_3
	%r16370 = getelementptr inbounds i8, %Objptr %r16369, i32 0
	%r16371 = bitcast %Objptr %r16370 to %Word32*
	store %Word32 99, %Word32* %r16371
	; OP (RP(3): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 25, isRoot = true, ty = Objptr (opt_3)}
	%r16372 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 25
	%r16373 = load %Objptr, %Objptr* %r16372
	%r16374 = load %Objptr, %Objptr* %regP_3
	%r16375 = getelementptr inbounds i8, %Objptr %r16374, i32 8
	%r16376 = bitcast %Objptr %r16375 to %Objptr*
	store %Objptr %r16373, %Objptr* %r16376
	; CW64 (<Frontier>)  = 0x27
	%r16377 = load %Pointer, %Pointer* %frontier
	%r16378 = bitcast %Pointer %r16377 to %Word64*
	store %Word64 39, %Word64* %r16378
	; RQ(181): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16379 = load %Pointer, %Pointer* %frontier
	%r16381 = ptrtoint %Pointer %r16379 to %uintptr_t
	%r16382 = add %uintptr_t %r16381, 8
	%r16380 = inttoptr %uintptr_t %r16382 to %Pointer
	store %CPointer %r16380, %CPointer* %regQ_181
	; RP(4): Objptr (opt_19)  = Cast (RQ(181): CPointer, Objptr (opt_19))
	%r16383 = load %CPointer, %CPointer* %regQ_181
	%r16384 = bitcast %CPointer %r16383 to %Objptr
	store %Objptr %r16384, %Objptr* %regP_4
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16385 = load %Pointer, %Pointer* %frontier
	%r16387 = ptrtoint %Pointer %r16385 to %uintptr_t
	%r16388 = add %uintptr_t %r16387, 24
	%r16386 = inttoptr %uintptr_t %r16388 to %Pointer
	store %Pointer %r16386, %Pointer* %frontier
	; OW32 (RP(4): Objptr (opt_19), 0): Word32  = 0x61
	%r16389 = load %Objptr, %Objptr* %regP_4
	%r16390 = getelementptr inbounds i8, %Objptr %r16389, i32 0
	%r16391 = bitcast %Objptr %r16390 to %Word32*
	store %Word32 97, %Word32* %r16391
	; OP (RP(4): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 26, isRoot = true, ty = Objptr (opt_3)}
	%r16392 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 26
	%r16393 = load %Objptr, %Objptr* %r16392
	%r16394 = load %Objptr, %Objptr* %regP_4
	%r16395 = getelementptr inbounds i8, %Objptr %r16394, i32 8
	%r16396 = bitcast %Objptr %r16395 to %Objptr*
	store %Objptr %r16393, %Objptr* %r16396
	; CW64 (<Frontier>)  = 0x27
	%r16397 = load %Pointer, %Pointer* %frontier
	%r16398 = bitcast %Pointer %r16397 to %Word64*
	store %Word64 39, %Word64* %r16398
	; RQ(180): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16399 = load %Pointer, %Pointer* %frontier
	%r16401 = ptrtoint %Pointer %r16399 to %uintptr_t
	%r16402 = add %uintptr_t %r16401, 8
	%r16400 = inttoptr %uintptr_t %r16402 to %Pointer
	store %CPointer %r16400, %CPointer* %regQ_180
	; RP(5): Objptr (opt_19)  = Cast (RQ(180): CPointer, Objptr (opt_19))
	%r16403 = load %CPointer, %CPointer* %regQ_180
	%r16404 = bitcast %CPointer %r16403 to %Objptr
	store %Objptr %r16404, %Objptr* %regP_5
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16405 = load %Pointer, %Pointer* %frontier
	%r16407 = ptrtoint %Pointer %r16405 to %uintptr_t
	%r16408 = add %uintptr_t %r16407, 24
	%r16406 = inttoptr %uintptr_t %r16408 to %Pointer
	store %Pointer %r16406, %Pointer* %frontier
	; OW32 (RP(5): Objptr (opt_19), 0): Word32  = 0xB
	%r16409 = load %Objptr, %Objptr* %regP_5
	%r16410 = getelementptr inbounds i8, %Objptr %r16409, i32 0
	%r16411 = bitcast %Objptr %r16410 to %Word32*
	store %Word32 11, %Word32* %r16411
	; OP (RP(5): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 27, isRoot = true, ty = Objptr (opt_3)}
	%r16412 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 27
	%r16413 = load %Objptr, %Objptr* %r16412
	%r16414 = load %Objptr, %Objptr* %regP_5
	%r16415 = getelementptr inbounds i8, %Objptr %r16414, i32 8
	%r16416 = bitcast %Objptr %r16415 to %Objptr*
	store %Objptr %r16413, %Objptr* %r16416
	; CW64 (<Frontier>)  = 0x27
	%r16417 = load %Pointer, %Pointer* %frontier
	%r16418 = bitcast %Pointer %r16417 to %Word64*
	store %Word64 39, %Word64* %r16418
	; RQ(179): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16419 = load %Pointer, %Pointer* %frontier
	%r16421 = ptrtoint %Pointer %r16419 to %uintptr_t
	%r16422 = add %uintptr_t %r16421, 8
	%r16420 = inttoptr %uintptr_t %r16422 to %Pointer
	store %CPointer %r16420, %CPointer* %regQ_179
	; RP(6): Objptr (opt_19)  = Cast (RQ(179): CPointer, Objptr (opt_19))
	%r16423 = load %CPointer, %CPointer* %regQ_179
	%r16424 = bitcast %CPointer %r16423 to %Objptr
	store %Objptr %r16424, %Objptr* %regP_6
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16425 = load %Pointer, %Pointer* %frontier
	%r16427 = ptrtoint %Pointer %r16425 to %uintptr_t
	%r16428 = add %uintptr_t %r16427, 24
	%r16426 = inttoptr %uintptr_t %r16428 to %Pointer
	store %Pointer %r16426, %Pointer* %frontier
	; OW32 (RP(6): Objptr (opt_19), 0): Word32  = 0x72
	%r16429 = load %Objptr, %Objptr* %regP_6
	%r16430 = getelementptr inbounds i8, %Objptr %r16429, i32 0
	%r16431 = bitcast %Objptr %r16430 to %Word32*
	store %Word32 114, %Word32* %r16431
	; OP (RP(6): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 28, isRoot = true, ty = Objptr (opt_3)}
	%r16432 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 28
	%r16433 = load %Objptr, %Objptr* %r16432
	%r16434 = load %Objptr, %Objptr* %regP_6
	%r16435 = getelementptr inbounds i8, %Objptr %r16434, i32 8
	%r16436 = bitcast %Objptr %r16435 to %Objptr*
	store %Objptr %r16433, %Objptr* %r16436
	; CW64 (<Frontier>)  = 0x27
	%r16437 = load %Pointer, %Pointer* %frontier
	%r16438 = bitcast %Pointer %r16437 to %Word64*
	store %Word64 39, %Word64* %r16438
	; RQ(178): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16439 = load %Pointer, %Pointer* %frontier
	%r16441 = ptrtoint %Pointer %r16439 to %uintptr_t
	%r16442 = add %uintptr_t %r16441, 8
	%r16440 = inttoptr %uintptr_t %r16442 to %Pointer
	store %CPointer %r16440, %CPointer* %regQ_178
	; RP(7): Objptr (opt_19)  = Cast (RQ(178): CPointer, Objptr (opt_19))
	%r16443 = load %CPointer, %CPointer* %regQ_178
	%r16444 = bitcast %CPointer %r16443 to %Objptr
	store %Objptr %r16444, %Objptr* %regP_7
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16445 = load %Pointer, %Pointer* %frontier
	%r16447 = ptrtoint %Pointer %r16445 to %uintptr_t
	%r16448 = add %uintptr_t %r16447, 24
	%r16446 = inttoptr %uintptr_t %r16448 to %Pointer
	store %Pointer %r16446, %Pointer* %frontier
	; OW32 (RP(7): Objptr (opt_19), 0): Word32  = 0x9
	%r16449 = load %Objptr, %Objptr* %regP_7
	%r16450 = getelementptr inbounds i8, %Objptr %r16449, i32 0
	%r16451 = bitcast %Objptr %r16450 to %Word32*
	store %Word32 9, %Word32* %r16451
	; OP (RP(7): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 29, isRoot = true, ty = Objptr (opt_3)}
	%r16452 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 29
	%r16453 = load %Objptr, %Objptr* %r16452
	%r16454 = load %Objptr, %Objptr* %regP_7
	%r16455 = getelementptr inbounds i8, %Objptr %r16454, i32 8
	%r16456 = bitcast %Objptr %r16455 to %Objptr*
	store %Objptr %r16453, %Objptr* %r16456
	; CW64 (<Frontier>)  = 0x27
	%r16457 = load %Pointer, %Pointer* %frontier
	%r16458 = bitcast %Pointer %r16457 to %Word64*
	store %Word64 39, %Word64* %r16458
	; RQ(177): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16459 = load %Pointer, %Pointer* %frontier
	%r16461 = ptrtoint %Pointer %r16459 to %uintptr_t
	%r16462 = add %uintptr_t %r16461, 8
	%r16460 = inttoptr %uintptr_t %r16462 to %Pointer
	store %CPointer %r16460, %CPointer* %regQ_177
	; RP(8): Objptr (opt_19)  = Cast (RQ(177): CPointer, Objptr (opt_19))
	%r16463 = load %CPointer, %CPointer* %regQ_177
	%r16464 = bitcast %CPointer %r16463 to %Objptr
	store %Objptr %r16464, %Objptr* %regP_8
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16465 = load %Pointer, %Pointer* %frontier
	%r16467 = ptrtoint %Pointer %r16465 to %uintptr_t
	%r16468 = add %uintptr_t %r16467, 24
	%r16466 = inttoptr %uintptr_t %r16468 to %Pointer
	store %Pointer %r16466, %Pointer* %frontier
	; OW32 (RP(8): Objptr (opt_19), 0): Word32  = 0x4A
	%r16469 = load %Objptr, %Objptr* %regP_8
	%r16470 = getelementptr inbounds i8, %Objptr %r16469, i32 0
	%r16471 = bitcast %Objptr %r16470 to %Word32*
	store %Word32 74, %Word32* %r16471
	; OP (RP(8): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 30, isRoot = true, ty = Objptr (opt_3)}
	%r16472 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 30
	%r16473 = load %Objptr, %Objptr* %r16472
	%r16474 = load %Objptr, %Objptr* %regP_8
	%r16475 = getelementptr inbounds i8, %Objptr %r16474, i32 8
	%r16476 = bitcast %Objptr %r16475 to %Objptr*
	store %Objptr %r16473, %Objptr* %r16476
	; CW64 (<Frontier>)  = 0x27
	%r16477 = load %Pointer, %Pointer* %frontier
	%r16478 = bitcast %Pointer %r16477 to %Word64*
	store %Word64 39, %Word64* %r16478
	; RQ(176): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16479 = load %Pointer, %Pointer* %frontier
	%r16481 = ptrtoint %Pointer %r16479 to %uintptr_t
	%r16482 = add %uintptr_t %r16481, 8
	%r16480 = inttoptr %uintptr_t %r16482 to %Pointer
	store %CPointer %r16480, %CPointer* %regQ_176
	; RP(9): Objptr (opt_19)  = Cast (RQ(176): CPointer, Objptr (opt_19))
	%r16483 = load %CPointer, %CPointer* %regQ_176
	%r16484 = bitcast %CPointer %r16483 to %Objptr
	store %Objptr %r16484, %Objptr* %regP_9
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16485 = load %Pointer, %Pointer* %frontier
	%r16487 = ptrtoint %Pointer %r16485 to %uintptr_t
	%r16488 = add %uintptr_t %r16487, 24
	%r16486 = inttoptr %uintptr_t %r16488 to %Pointer
	store %Pointer %r16486, %Pointer* %frontier
	; OW32 (RP(9): Objptr (opt_19), 0): Word32  = 0x10
	%r16489 = load %Objptr, %Objptr* %regP_9
	%r16490 = getelementptr inbounds i8, %Objptr %r16489, i32 0
	%r16491 = bitcast %Objptr %r16490 to %Word32*
	store %Word32 16, %Word32* %r16491
	; OP (RP(9): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 31, isRoot = true, ty = Objptr (opt_3)}
	%r16492 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 31
	%r16493 = load %Objptr, %Objptr* %r16492
	%r16494 = load %Objptr, %Objptr* %regP_9
	%r16495 = getelementptr inbounds i8, %Objptr %r16494, i32 8
	%r16496 = bitcast %Objptr %r16495 to %Objptr*
	store %Objptr %r16493, %Objptr* %r16496
	; CW64 (<Frontier>)  = 0x27
	%r16497 = load %Pointer, %Pointer* %frontier
	%r16498 = bitcast %Pointer %r16497 to %Word64*
	store %Word64 39, %Word64* %r16498
	; RQ(175): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16499 = load %Pointer, %Pointer* %frontier
	%r16501 = ptrtoint %Pointer %r16499 to %uintptr_t
	%r16502 = add %uintptr_t %r16501, 8
	%r16500 = inttoptr %uintptr_t %r16502 to %Pointer
	store %CPointer %r16500, %CPointer* %regQ_175
	; RP(10): Objptr (opt_19)  = Cast (RQ(175): CPointer, Objptr (opt_19))
	%r16503 = load %CPointer, %CPointer* %regQ_175
	%r16504 = bitcast %CPointer %r16503 to %Objptr
	store %Objptr %r16504, %Objptr* %regP_10
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16505 = load %Pointer, %Pointer* %frontier
	%r16507 = ptrtoint %Pointer %r16505 to %uintptr_t
	%r16508 = add %uintptr_t %r16507, 24
	%r16506 = inttoptr %uintptr_t %r16508 to %Pointer
	store %Pointer %r16506, %Pointer* %frontier
	; OW32 (RP(10): Objptr (opt_19), 0): Word32  = 0x7D
	%r16509 = load %Objptr, %Objptr* %regP_10
	%r16510 = getelementptr inbounds i8, %Objptr %r16509, i32 0
	%r16511 = bitcast %Objptr %r16510 to %Word32*
	store %Word32 125, %Word32* %r16511
	; OP (RP(10): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 32, isRoot = true, ty = Objptr (opt_3)}
	%r16512 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 32
	%r16513 = load %Objptr, %Objptr* %r16512
	%r16514 = load %Objptr, %Objptr* %regP_10
	%r16515 = getelementptr inbounds i8, %Objptr %r16514, i32 8
	%r16516 = bitcast %Objptr %r16515 to %Objptr*
	store %Objptr %r16513, %Objptr* %r16516
	; CW64 (<Frontier>)  = 0x27
	%r16517 = load %Pointer, %Pointer* %frontier
	%r16518 = bitcast %Pointer %r16517 to %Word64*
	store %Word64 39, %Word64* %r16518
	; RQ(174): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16519 = load %Pointer, %Pointer* %frontier
	%r16521 = ptrtoint %Pointer %r16519 to %uintptr_t
	%r16522 = add %uintptr_t %r16521, 8
	%r16520 = inttoptr %uintptr_t %r16522 to %Pointer
	store %CPointer %r16520, %CPointer* %regQ_174
	; RP(11): Objptr (opt_19)  = Cast (RQ(174): CPointer, Objptr (opt_19))
	%r16523 = load %CPointer, %CPointer* %regQ_174
	%r16524 = bitcast %CPointer %r16523 to %Objptr
	store %Objptr %r16524, %Objptr* %regP_11
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16525 = load %Pointer, %Pointer* %frontier
	%r16527 = ptrtoint %Pointer %r16525 to %uintptr_t
	%r16528 = add %uintptr_t %r16527, 24
	%r16526 = inttoptr %uintptr_t %r16528 to %Pointer
	store %Pointer %r16526, %Pointer* %frontier
	; OW32 (RP(11): Objptr (opt_19), 0): Word32  = 0xA
	%r16529 = load %Objptr, %Objptr* %regP_11
	%r16530 = getelementptr inbounds i8, %Objptr %r16529, i32 0
	%r16531 = bitcast %Objptr %r16530 to %Word32*
	store %Word32 10, %Word32* %r16531
	; OP (RP(11): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 33, isRoot = true, ty = Objptr (opt_3)}
	%r16532 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 33
	%r16533 = load %Objptr, %Objptr* %r16532
	%r16534 = load %Objptr, %Objptr* %regP_11
	%r16535 = getelementptr inbounds i8, %Objptr %r16534, i32 8
	%r16536 = bitcast %Objptr %r16535 to %Objptr*
	store %Objptr %r16533, %Objptr* %r16536
	; CW64 (<Frontier>)  = 0x27
	%r16537 = load %Pointer, %Pointer* %frontier
	%r16538 = bitcast %Pointer %r16537 to %Word64*
	store %Word64 39, %Word64* %r16538
	; RQ(173): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16539 = load %Pointer, %Pointer* %frontier
	%r16541 = ptrtoint %Pointer %r16539 to %uintptr_t
	%r16542 = add %uintptr_t %r16541, 8
	%r16540 = inttoptr %uintptr_t %r16542 to %Pointer
	store %CPointer %r16540, %CPointer* %regQ_173
	; RP(12): Objptr (opt_19)  = Cast (RQ(173): CPointer, Objptr (opt_19))
	%r16543 = load %CPointer, %CPointer* %regQ_173
	%r16544 = bitcast %CPointer %r16543 to %Objptr
	store %Objptr %r16544, %Objptr* %regP_12
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16545 = load %Pointer, %Pointer* %frontier
	%r16547 = ptrtoint %Pointer %r16545 to %uintptr_t
	%r16548 = add %uintptr_t %r16547, 24
	%r16546 = inttoptr %uintptr_t %r16548 to %Pointer
	store %Pointer %r16546, %Pointer* %frontier
	; OW32 (RP(12): Objptr (opt_19), 0): Word32  = 0x67
	%r16549 = load %Objptr, %Objptr* %regP_12
	%r16550 = getelementptr inbounds i8, %Objptr %r16549, i32 0
	%r16551 = bitcast %Objptr %r16550 to %Word32*
	store %Word32 103, %Word32* %r16551
	; OP (RP(12): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 34, isRoot = true, ty = Objptr (opt_3)}
	%r16552 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 34
	%r16553 = load %Objptr, %Objptr* %r16552
	%r16554 = load %Objptr, %Objptr* %regP_12
	%r16555 = getelementptr inbounds i8, %Objptr %r16554, i32 8
	%r16556 = bitcast %Objptr %r16555 to %Objptr*
	store %Objptr %r16553, %Objptr* %r16556
	; CW64 (<Frontier>)  = 0x27
	%r16557 = load %Pointer, %Pointer* %frontier
	%r16558 = bitcast %Pointer %r16557 to %Word64*
	store %Word64 39, %Word64* %r16558
	; RQ(172): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16559 = load %Pointer, %Pointer* %frontier
	%r16561 = ptrtoint %Pointer %r16559 to %uintptr_t
	%r16562 = add %uintptr_t %r16561, 8
	%r16560 = inttoptr %uintptr_t %r16562 to %Pointer
	store %CPointer %r16560, %CPointer* %regQ_172
	; RP(13): Objptr (opt_19)  = Cast (RQ(172): CPointer, Objptr (opt_19))
	%r16563 = load %CPointer, %CPointer* %regQ_172
	%r16564 = bitcast %CPointer %r16563 to %Objptr
	store %Objptr %r16564, %Objptr* %regP_13
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16565 = load %Pointer, %Pointer* %frontier
	%r16567 = ptrtoint %Pointer %r16565 to %uintptr_t
	%r16568 = add %uintptr_t %r16567, 24
	%r16566 = inttoptr %uintptr_t %r16568 to %Pointer
	store %Pointer %r16566, %Pointer* %frontier
	; OW32 (RP(13): Objptr (opt_19), 0): Word32  = 0x6F
	%r16569 = load %Objptr, %Objptr* %regP_13
	%r16570 = getelementptr inbounds i8, %Objptr %r16569, i32 0
	%r16571 = bitcast %Objptr %r16570 to %Word32*
	store %Word32 111, %Word32* %r16571
	; OP (RP(13): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 35, isRoot = true, ty = Objptr (opt_3)}
	%r16572 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 35
	%r16573 = load %Objptr, %Objptr* %r16572
	%r16574 = load %Objptr, %Objptr* %regP_13
	%r16575 = getelementptr inbounds i8, %Objptr %r16574, i32 8
	%r16576 = bitcast %Objptr %r16575 to %Objptr*
	store %Objptr %r16573, %Objptr* %r16576
	; CW64 (<Frontier>)  = 0x27
	%r16577 = load %Pointer, %Pointer* %frontier
	%r16578 = bitcast %Pointer %r16577 to %Word64*
	store %Word64 39, %Word64* %r16578
	; RQ(171): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16579 = load %Pointer, %Pointer* %frontier
	%r16581 = ptrtoint %Pointer %r16579 to %uintptr_t
	%r16582 = add %uintptr_t %r16581, 8
	%r16580 = inttoptr %uintptr_t %r16582 to %Pointer
	store %CPointer %r16580, %CPointer* %regQ_171
	; RP(14): Objptr (opt_19)  = Cast (RQ(171): CPointer, Objptr (opt_19))
	%r16583 = load %CPointer, %CPointer* %regQ_171
	%r16584 = bitcast %CPointer %r16583 to %Objptr
	store %Objptr %r16584, %Objptr* %regP_14
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16585 = load %Pointer, %Pointer* %frontier
	%r16587 = ptrtoint %Pointer %r16585 to %uintptr_t
	%r16588 = add %uintptr_t %r16587, 24
	%r16586 = inttoptr %uintptr_t %r16588 to %Pointer
	store %Pointer %r16586, %Pointer* %frontier
	; OW32 (RP(14): Objptr (opt_19), 0): Word32  = 0x68
	%r16589 = load %Objptr, %Objptr* %regP_14
	%r16590 = getelementptr inbounds i8, %Objptr %r16589, i32 0
	%r16591 = bitcast %Objptr %r16590 to %Word32*
	store %Word32 104, %Word32* %r16591
	; OP (RP(14): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 36, isRoot = true, ty = Objptr (opt_3)}
	%r16592 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 36
	%r16593 = load %Objptr, %Objptr* %r16592
	%r16594 = load %Objptr, %Objptr* %regP_14
	%r16595 = getelementptr inbounds i8, %Objptr %r16594, i32 8
	%r16596 = bitcast %Objptr %r16595 to %Objptr*
	store %Objptr %r16593, %Objptr* %r16596
	; CW64 (<Frontier>)  = 0x27
	%r16597 = load %Pointer, %Pointer* %frontier
	%r16598 = bitcast %Pointer %r16597 to %Word64*
	store %Word64 39, %Word64* %r16598
	; RQ(170): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16599 = load %Pointer, %Pointer* %frontier
	%r16601 = ptrtoint %Pointer %r16599 to %uintptr_t
	%r16602 = add %uintptr_t %r16601, 8
	%r16600 = inttoptr %uintptr_t %r16602 to %Pointer
	store %CPointer %r16600, %CPointer* %regQ_170
	; RP(15): Objptr (opt_19)  = Cast (RQ(170): CPointer, Objptr (opt_19))
	%r16603 = load %CPointer, %CPointer* %regQ_170
	%r16604 = bitcast %CPointer %r16603 to %Objptr
	store %Objptr %r16604, %Objptr* %regP_15
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16605 = load %Pointer, %Pointer* %frontier
	%r16607 = ptrtoint %Pointer %r16605 to %uintptr_t
	%r16608 = add %uintptr_t %r16607, 24
	%r16606 = inttoptr %uintptr_t %r16608 to %Pointer
	store %Pointer %r16606, %Pointer* %frontier
	; OW32 (RP(15): Objptr (opt_19), 0): Word32  = 0x23
	%r16609 = load %Objptr, %Objptr* %regP_15
	%r16610 = getelementptr inbounds i8, %Objptr %r16609, i32 0
	%r16611 = bitcast %Objptr %r16610 to %Word32*
	store %Word32 35, %Word32* %r16611
	; OP (RP(15): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 37, isRoot = true, ty = Objptr (opt_3)}
	%r16612 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 37
	%r16613 = load %Objptr, %Objptr* %r16612
	%r16614 = load %Objptr, %Objptr* %regP_15
	%r16615 = getelementptr inbounds i8, %Objptr %r16614, i32 8
	%r16616 = bitcast %Objptr %r16615 to %Objptr*
	store %Objptr %r16613, %Objptr* %r16616
	; CW64 (<Frontier>)  = 0x27
	%r16617 = load %Pointer, %Pointer* %frontier
	%r16618 = bitcast %Pointer %r16617 to %Word64*
	store %Word64 39, %Word64* %r16618
	; RQ(169): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16619 = load %Pointer, %Pointer* %frontier
	%r16621 = ptrtoint %Pointer %r16619 to %uintptr_t
	%r16622 = add %uintptr_t %r16621, 8
	%r16620 = inttoptr %uintptr_t %r16622 to %Pointer
	store %CPointer %r16620, %CPointer* %regQ_169
	; RP(16): Objptr (opt_19)  = Cast (RQ(169): CPointer, Objptr (opt_19))
	%r16623 = load %CPointer, %CPointer* %regQ_169
	%r16624 = bitcast %CPointer %r16623 to %Objptr
	store %Objptr %r16624, %Objptr* %regP_16
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16625 = load %Pointer, %Pointer* %frontier
	%r16627 = ptrtoint %Pointer %r16625 to %uintptr_t
	%r16628 = add %uintptr_t %r16627, 24
	%r16626 = inttoptr %uintptr_t %r16628 to %Pointer
	store %Pointer %r16626, %Pointer* %frontier
	; OW32 (RP(16): Objptr (opt_19), 0): Word32  = 0x59
	%r16629 = load %Objptr, %Objptr* %regP_16
	%r16630 = getelementptr inbounds i8, %Objptr %r16629, i32 0
	%r16631 = bitcast %Objptr %r16630 to %Word32*
	store %Word32 89, %Word32* %r16631
	; OP (RP(16): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 38, isRoot = true, ty = Objptr (opt_3)}
	%r16632 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 38
	%r16633 = load %Objptr, %Objptr* %r16632
	%r16634 = load %Objptr, %Objptr* %regP_16
	%r16635 = getelementptr inbounds i8, %Objptr %r16634, i32 8
	%r16636 = bitcast %Objptr %r16635 to %Objptr*
	store %Objptr %r16633, %Objptr* %r16636
	; CW64 (<Frontier>)  = 0x27
	%r16637 = load %Pointer, %Pointer* %frontier
	%r16638 = bitcast %Pointer %r16637 to %Word64*
	store %Word64 39, %Word64* %r16638
	; RQ(168): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16639 = load %Pointer, %Pointer* %frontier
	%r16641 = ptrtoint %Pointer %r16639 to %uintptr_t
	%r16642 = add %uintptr_t %r16641, 8
	%r16640 = inttoptr %uintptr_t %r16642 to %Pointer
	store %CPointer %r16640, %CPointer* %regQ_168
	; RP(17): Objptr (opt_19)  = Cast (RQ(168): CPointer, Objptr (opt_19))
	%r16643 = load %CPointer, %CPointer* %regQ_168
	%r16644 = bitcast %CPointer %r16643 to %Objptr
	store %Objptr %r16644, %Objptr* %regP_17
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16645 = load %Pointer, %Pointer* %frontier
	%r16647 = ptrtoint %Pointer %r16645 to %uintptr_t
	%r16648 = add %uintptr_t %r16647, 24
	%r16646 = inttoptr %uintptr_t %r16648 to %Pointer
	store %Pointer %r16646, %Pointer* %frontier
	; OW32 (RP(17): Objptr (opt_19), 0): Word32  = 0x21
	%r16649 = load %Objptr, %Objptr* %regP_17
	%r16650 = getelementptr inbounds i8, %Objptr %r16649, i32 0
	%r16651 = bitcast %Objptr %r16650 to %Word32*
	store %Word32 33, %Word32* %r16651
	; OP (RP(17): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 39, isRoot = true, ty = Objptr (opt_3)}
	%r16652 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 39
	%r16653 = load %Objptr, %Objptr* %r16652
	%r16654 = load %Objptr, %Objptr* %regP_17
	%r16655 = getelementptr inbounds i8, %Objptr %r16654, i32 8
	%r16656 = bitcast %Objptr %r16655 to %Objptr*
	store %Objptr %r16653, %Objptr* %r16656
	; CW64 (<Frontier>)  = 0x27
	%r16657 = load %Pointer, %Pointer* %frontier
	%r16658 = bitcast %Pointer %r16657 to %Word64*
	store %Word64 39, %Word64* %r16658
	; RQ(167): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16659 = load %Pointer, %Pointer* %frontier
	%r16661 = ptrtoint %Pointer %r16659 to %uintptr_t
	%r16662 = add %uintptr_t %r16661, 8
	%r16660 = inttoptr %uintptr_t %r16662 to %Pointer
	store %CPointer %r16660, %CPointer* %regQ_167
	; RP(18): Objptr (opt_19)  = Cast (RQ(167): CPointer, Objptr (opt_19))
	%r16663 = load %CPointer, %CPointer* %regQ_167
	%r16664 = bitcast %CPointer %r16663 to %Objptr
	store %Objptr %r16664, %Objptr* %regP_18
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16665 = load %Pointer, %Pointer* %frontier
	%r16667 = ptrtoint %Pointer %r16665 to %uintptr_t
	%r16668 = add %uintptr_t %r16667, 24
	%r16666 = inttoptr %uintptr_t %r16668 to %Pointer
	store %Pointer %r16666, %Pointer* %frontier
	; OW32 (RP(18): Objptr (opt_19), 0): Word32  = 0x7A
	%r16669 = load %Objptr, %Objptr* %regP_18
	%r16670 = getelementptr inbounds i8, %Objptr %r16669, i32 0
	%r16671 = bitcast %Objptr %r16670 to %Word32*
	store %Word32 122, %Word32* %r16671
	; OP (RP(18): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 40, isRoot = true, ty = Objptr (opt_3)}
	%r16672 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 40
	%r16673 = load %Objptr, %Objptr* %r16672
	%r16674 = load %Objptr, %Objptr* %regP_18
	%r16675 = getelementptr inbounds i8, %Objptr %r16674, i32 8
	%r16676 = bitcast %Objptr %r16675 to %Objptr*
	store %Objptr %r16673, %Objptr* %r16676
	; CW64 (<Frontier>)  = 0x27
	%r16677 = load %Pointer, %Pointer* %frontier
	%r16678 = bitcast %Pointer %r16677 to %Word64*
	store %Word64 39, %Word64* %r16678
	; RQ(166): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16679 = load %Pointer, %Pointer* %frontier
	%r16681 = ptrtoint %Pointer %r16679 to %uintptr_t
	%r16682 = add %uintptr_t %r16681, 8
	%r16680 = inttoptr %uintptr_t %r16682 to %Pointer
	store %CPointer %r16680, %CPointer* %regQ_166
	; RP(19): Objptr (opt_19)  = Cast (RQ(166): CPointer, Objptr (opt_19))
	%r16683 = load %CPointer, %CPointer* %regQ_166
	%r16684 = bitcast %CPointer %r16683 to %Objptr
	store %Objptr %r16684, %Objptr* %regP_19
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16685 = load %Pointer, %Pointer* %frontier
	%r16687 = ptrtoint %Pointer %r16685 to %uintptr_t
	%r16688 = add %uintptr_t %r16687, 24
	%r16686 = inttoptr %uintptr_t %r16688 to %Pointer
	store %Pointer %r16686, %Pointer* %frontier
	; OW32 (RP(19): Objptr (opt_19), 0): Word32  = 0x11
	%r16689 = load %Objptr, %Objptr* %regP_19
	%r16690 = getelementptr inbounds i8, %Objptr %r16689, i32 0
	%r16691 = bitcast %Objptr %r16690 to %Word32*
	store %Word32 17, %Word32* %r16691
	; OP (RP(19): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 41, isRoot = true, ty = Objptr (opt_3)}
	%r16692 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 41
	%r16693 = load %Objptr, %Objptr* %r16692
	%r16694 = load %Objptr, %Objptr* %regP_19
	%r16695 = getelementptr inbounds i8, %Objptr %r16694, i32 8
	%r16696 = bitcast %Objptr %r16695 to %Objptr*
	store %Objptr %r16693, %Objptr* %r16696
	; CW64 (<Frontier>)  = 0x27
	%r16697 = load %Pointer, %Pointer* %frontier
	%r16698 = bitcast %Pointer %r16697 to %Word64*
	store %Word64 39, %Word64* %r16698
	; RQ(165): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16699 = load %Pointer, %Pointer* %frontier
	%r16701 = ptrtoint %Pointer %r16699 to %uintptr_t
	%r16702 = add %uintptr_t %r16701, 8
	%r16700 = inttoptr %uintptr_t %r16702 to %Pointer
	store %CPointer %r16700, %CPointer* %regQ_165
	; RP(20): Objptr (opt_19)  = Cast (RQ(165): CPointer, Objptr (opt_19))
	%r16703 = load %CPointer, %CPointer* %regQ_165
	%r16704 = bitcast %CPointer %r16703 to %Objptr
	store %Objptr %r16704, %Objptr* %regP_20
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16705 = load %Pointer, %Pointer* %frontier
	%r16707 = ptrtoint %Pointer %r16705 to %uintptr_t
	%r16708 = add %uintptr_t %r16707, 24
	%r16706 = inttoptr %uintptr_t %r16708 to %Pointer
	store %Pointer %r16706, %Pointer* %frontier
	; OW32 (RP(20): Objptr (opt_19), 0): Word32  = 0xE
	%r16709 = load %Objptr, %Objptr* %regP_20
	%r16710 = getelementptr inbounds i8, %Objptr %r16709, i32 0
	%r16711 = bitcast %Objptr %r16710 to %Word32*
	store %Word32 14, %Word32* %r16711
	; OP (RP(20): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 42, isRoot = true, ty = Objptr (opt_3)}
	%r16712 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 42
	%r16713 = load %Objptr, %Objptr* %r16712
	%r16714 = load %Objptr, %Objptr* %regP_20
	%r16715 = getelementptr inbounds i8, %Objptr %r16714, i32 8
	%r16716 = bitcast %Objptr %r16715 to %Objptr*
	store %Objptr %r16713, %Objptr* %r16716
	; CW64 (<Frontier>)  = 0x27
	%r16717 = load %Pointer, %Pointer* %frontier
	%r16718 = bitcast %Pointer %r16717 to %Word64*
	store %Word64 39, %Word64* %r16718
	; RQ(164): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16719 = load %Pointer, %Pointer* %frontier
	%r16721 = ptrtoint %Pointer %r16719 to %uintptr_t
	%r16722 = add %uintptr_t %r16721, 8
	%r16720 = inttoptr %uintptr_t %r16722 to %Pointer
	store %CPointer %r16720, %CPointer* %regQ_164
	; RP(21): Objptr (opt_19)  = Cast (RQ(164): CPointer, Objptr (opt_19))
	%r16723 = load %CPointer, %CPointer* %regQ_164
	%r16724 = bitcast %CPointer %r16723 to %Objptr
	store %Objptr %r16724, %Objptr* %regP_21
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16725 = load %Pointer, %Pointer* %frontier
	%r16727 = ptrtoint %Pointer %r16725 to %uintptr_t
	%r16728 = add %uintptr_t %r16727, 24
	%r16726 = inttoptr %uintptr_t %r16728 to %Pointer
	store %Pointer %r16726, %Pointer* %frontier
	; OW32 (RP(21): Objptr (opt_19), 0): Word32  = 0x1B
	%r16729 = load %Objptr, %Objptr* %regP_21
	%r16730 = getelementptr inbounds i8, %Objptr %r16729, i32 0
	%r16731 = bitcast %Objptr %r16730 to %Word32*
	store %Word32 27, %Word32* %r16731
	; OP (RP(21): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 43, isRoot = true, ty = Objptr (opt_3)}
	%r16732 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 43
	%r16733 = load %Objptr, %Objptr* %r16732
	%r16734 = load %Objptr, %Objptr* %regP_21
	%r16735 = getelementptr inbounds i8, %Objptr %r16734, i32 8
	%r16736 = bitcast %Objptr %r16735 to %Objptr*
	store %Objptr %r16733, %Objptr* %r16736
	; CW64 (<Frontier>)  = 0x27
	%r16737 = load %Pointer, %Pointer* %frontier
	%r16738 = bitcast %Pointer %r16737 to %Word64*
	store %Word64 39, %Word64* %r16738
	; RQ(163): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16739 = load %Pointer, %Pointer* %frontier
	%r16741 = ptrtoint %Pointer %r16739 to %uintptr_t
	%r16742 = add %uintptr_t %r16741, 8
	%r16740 = inttoptr %uintptr_t %r16742 to %Pointer
	store %CPointer %r16740, %CPointer* %regQ_163
	; RP(22): Objptr (opt_19)  = Cast (RQ(163): CPointer, Objptr (opt_19))
	%r16743 = load %CPointer, %CPointer* %regQ_163
	%r16744 = bitcast %CPointer %r16743 to %Objptr
	store %Objptr %r16744, %Objptr* %regP_22
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16745 = load %Pointer, %Pointer* %frontier
	%r16747 = ptrtoint %Pointer %r16745 to %uintptr_t
	%r16748 = add %uintptr_t %r16747, 24
	%r16746 = inttoptr %uintptr_t %r16748 to %Pointer
	store %Pointer %r16746, %Pointer* %frontier
	; OW32 (RP(22): Objptr (opt_19), 0): Word32  = 0x71
	%r16749 = load %Objptr, %Objptr* %regP_22
	%r16750 = getelementptr inbounds i8, %Objptr %r16749, i32 0
	%r16751 = bitcast %Objptr %r16750 to %Word32*
	store %Word32 113, %Word32* %r16751
	; OP (RP(22): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 44, isRoot = true, ty = Objptr (opt_3)}
	%r16752 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 44
	%r16753 = load %Objptr, %Objptr* %r16752
	%r16754 = load %Objptr, %Objptr* %regP_22
	%r16755 = getelementptr inbounds i8, %Objptr %r16754, i32 8
	%r16756 = bitcast %Objptr %r16755 to %Objptr*
	store %Objptr %r16753, %Objptr* %r16756
	; CW64 (<Frontier>)  = 0x27
	%r16757 = load %Pointer, %Pointer* %frontier
	%r16758 = bitcast %Pointer %r16757 to %Word64*
	store %Word64 39, %Word64* %r16758
	; RQ(162): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16759 = load %Pointer, %Pointer* %frontier
	%r16761 = ptrtoint %Pointer %r16759 to %uintptr_t
	%r16762 = add %uintptr_t %r16761, 8
	%r16760 = inttoptr %uintptr_t %r16762 to %Pointer
	store %CPointer %r16760, %CPointer* %regQ_162
	; RP(23): Objptr (opt_19)  = Cast (RQ(162): CPointer, Objptr (opt_19))
	%r16763 = load %CPointer, %CPointer* %regQ_162
	%r16764 = bitcast %CPointer %r16763 to %Objptr
	store %Objptr %r16764, %Objptr* %regP_23
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16765 = load %Pointer, %Pointer* %frontier
	%r16767 = ptrtoint %Pointer %r16765 to %uintptr_t
	%r16768 = add %uintptr_t %r16767, 24
	%r16766 = inttoptr %uintptr_t %r16768 to %Pointer
	store %Pointer %r16766, %Pointer* %frontier
	; OW32 (RP(23): Objptr (opt_19), 0): Word32  = 0x2B
	%r16769 = load %Objptr, %Objptr* %regP_23
	%r16770 = getelementptr inbounds i8, %Objptr %r16769, i32 0
	%r16771 = bitcast %Objptr %r16770 to %Word32*
	store %Word32 43, %Word32* %r16771
	; OP (RP(23): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 45, isRoot = true, ty = Objptr (opt_3)}
	%r16772 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 45
	%r16773 = load %Objptr, %Objptr* %r16772
	%r16774 = load %Objptr, %Objptr* %regP_23
	%r16775 = getelementptr inbounds i8, %Objptr %r16774, i32 8
	%r16776 = bitcast %Objptr %r16775 to %Objptr*
	store %Objptr %r16773, %Objptr* %r16776
	; CW64 (<Frontier>)  = 0x27
	%r16777 = load %Pointer, %Pointer* %frontier
	%r16778 = bitcast %Pointer %r16777 to %Word64*
	store %Word64 39, %Word64* %r16778
	; RQ(161): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16779 = load %Pointer, %Pointer* %frontier
	%r16781 = ptrtoint %Pointer %r16779 to %uintptr_t
	%r16782 = add %uintptr_t %r16781, 8
	%r16780 = inttoptr %uintptr_t %r16782 to %Pointer
	store %CPointer %r16780, %CPointer* %regQ_161
	; RP(24): Objptr (opt_19)  = Cast (RQ(161): CPointer, Objptr (opt_19))
	%r16783 = load %CPointer, %CPointer* %regQ_161
	%r16784 = bitcast %CPointer %r16783 to %Objptr
	store %Objptr %r16784, %Objptr* %regP_24
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16785 = load %Pointer, %Pointer* %frontier
	%r16787 = ptrtoint %Pointer %r16785 to %uintptr_t
	%r16788 = add %uintptr_t %r16787, 24
	%r16786 = inttoptr %uintptr_t %r16788 to %Pointer
	store %Pointer %r16786, %Pointer* %frontier
	; OW32 (RP(24): Objptr (opt_19), 0): Word32  = 0x54
	%r16789 = load %Objptr, %Objptr* %regP_24
	%r16790 = getelementptr inbounds i8, %Objptr %r16789, i32 0
	%r16791 = bitcast %Objptr %r16790 to %Word32*
	store %Word32 84, %Word32* %r16791
	; OP (RP(24): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 46, isRoot = true, ty = Objptr (opt_3)}
	%r16792 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 46
	%r16793 = load %Objptr, %Objptr* %r16792
	%r16794 = load %Objptr, %Objptr* %regP_24
	%r16795 = getelementptr inbounds i8, %Objptr %r16794, i32 8
	%r16796 = bitcast %Objptr %r16795 to %Objptr*
	store %Objptr %r16793, %Objptr* %r16796
	; CW64 (<Frontier>)  = 0x27
	%r16797 = load %Pointer, %Pointer* %frontier
	%r16798 = bitcast %Pointer %r16797 to %Word64*
	store %Word64 39, %Word64* %r16798
	; RQ(160): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16799 = load %Pointer, %Pointer* %frontier
	%r16801 = ptrtoint %Pointer %r16799 to %uintptr_t
	%r16802 = add %uintptr_t %r16801, 8
	%r16800 = inttoptr %uintptr_t %r16802 to %Pointer
	store %CPointer %r16800, %CPointer* %regQ_160
	; RP(25): Objptr (opt_19)  = Cast (RQ(160): CPointer, Objptr (opt_19))
	%r16803 = load %CPointer, %CPointer* %regQ_160
	%r16804 = bitcast %CPointer %r16803 to %Objptr
	store %Objptr %r16804, %Objptr* %regP_25
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16805 = load %Pointer, %Pointer* %frontier
	%r16807 = ptrtoint %Pointer %r16805 to %uintptr_t
	%r16808 = add %uintptr_t %r16807, 24
	%r16806 = inttoptr %uintptr_t %r16808 to %Pointer
	store %Pointer %r16806, %Pointer* %frontier
	; OW32 (RP(25): Objptr (opt_19), 0): Word32  = 0x73
	%r16809 = load %Objptr, %Objptr* %regP_25
	%r16810 = getelementptr inbounds i8, %Objptr %r16809, i32 0
	%r16811 = bitcast %Objptr %r16810 to %Word32*
	store %Word32 115, %Word32* %r16811
	; OP (RP(25): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 47, isRoot = true, ty = Objptr (opt_3)}
	%r16812 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 47
	%r16813 = load %Objptr, %Objptr* %r16812
	%r16814 = load %Objptr, %Objptr* %regP_25
	%r16815 = getelementptr inbounds i8, %Objptr %r16814, i32 8
	%r16816 = bitcast %Objptr %r16815 to %Objptr*
	store %Objptr %r16813, %Objptr* %r16816
	; CW64 (<Frontier>)  = 0x27
	%r16817 = load %Pointer, %Pointer* %frontier
	%r16818 = bitcast %Pointer %r16817 to %Word64*
	store %Word64 39, %Word64* %r16818
	; RQ(159): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16819 = load %Pointer, %Pointer* %frontier
	%r16821 = ptrtoint %Pointer %r16819 to %uintptr_t
	%r16822 = add %uintptr_t %r16821, 8
	%r16820 = inttoptr %uintptr_t %r16822 to %Pointer
	store %CPointer %r16820, %CPointer* %regQ_159
	; RP(26): Objptr (opt_19)  = Cast (RQ(159): CPointer, Objptr (opt_19))
	%r16823 = load %CPointer, %CPointer* %regQ_159
	%r16824 = bitcast %CPointer %r16823 to %Objptr
	store %Objptr %r16824, %Objptr* %regP_26
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16825 = load %Pointer, %Pointer* %frontier
	%r16827 = ptrtoint %Pointer %r16825 to %uintptr_t
	%r16828 = add %uintptr_t %r16827, 24
	%r16826 = inttoptr %uintptr_t %r16828 to %Pointer
	store %Pointer %r16826, %Pointer* %frontier
	; OW32 (RP(26): Objptr (opt_19), 0): Word32  = 0x4
	%r16829 = load %Objptr, %Objptr* %regP_26
	%r16830 = getelementptr inbounds i8, %Objptr %r16829, i32 0
	%r16831 = bitcast %Objptr %r16830 to %Word32*
	store %Word32 4, %Word32* %r16831
	; OP (RP(26): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 48, isRoot = true, ty = Objptr (opt_3)}
	%r16832 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 48
	%r16833 = load %Objptr, %Objptr* %r16832
	%r16834 = load %Objptr, %Objptr* %regP_26
	%r16835 = getelementptr inbounds i8, %Objptr %r16834, i32 8
	%r16836 = bitcast %Objptr %r16835 to %Objptr*
	store %Objptr %r16833, %Objptr* %r16836
	; CW64 (<Frontier>)  = 0x27
	%r16837 = load %Pointer, %Pointer* %frontier
	%r16838 = bitcast %Pointer %r16837 to %Word64*
	store %Word64 39, %Word64* %r16838
	; RQ(158): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16839 = load %Pointer, %Pointer* %frontier
	%r16841 = ptrtoint %Pointer %r16839 to %uintptr_t
	%r16842 = add %uintptr_t %r16841, 8
	%r16840 = inttoptr %uintptr_t %r16842 to %Pointer
	store %CPointer %r16840, %CPointer* %regQ_158
	; RP(27): Objptr (opt_19)  = Cast (RQ(158): CPointer, Objptr (opt_19))
	%r16843 = load %CPointer, %CPointer* %regQ_158
	%r16844 = bitcast %CPointer %r16843 to %Objptr
	store %Objptr %r16844, %Objptr* %regP_27
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16845 = load %Pointer, %Pointer* %frontier
	%r16847 = ptrtoint %Pointer %r16845 to %uintptr_t
	%r16848 = add %uintptr_t %r16847, 24
	%r16846 = inttoptr %uintptr_t %r16848 to %Pointer
	store %Pointer %r16846, %Pointer* %frontier
	; OW32 (RP(27): Objptr (opt_19), 0): Word32  = 0x16
	%r16849 = load %Objptr, %Objptr* %regP_27
	%r16850 = getelementptr inbounds i8, %Objptr %r16849, i32 0
	%r16851 = bitcast %Objptr %r16850 to %Word32*
	store %Word32 22, %Word32* %r16851
	; OP (RP(27): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 49, isRoot = true, ty = Objptr (opt_3)}
	%r16852 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 49
	%r16853 = load %Objptr, %Objptr* %r16852
	%r16854 = load %Objptr, %Objptr* %regP_27
	%r16855 = getelementptr inbounds i8, %Objptr %r16854, i32 8
	%r16856 = bitcast %Objptr %r16855 to %Objptr*
	store %Objptr %r16853, %Objptr* %r16856
	; CW64 (<Frontier>)  = 0x27
	%r16857 = load %Pointer, %Pointer* %frontier
	%r16858 = bitcast %Pointer %r16857 to %Word64*
	store %Word64 39, %Word64* %r16858
	; RQ(157): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16859 = load %Pointer, %Pointer* %frontier
	%r16861 = ptrtoint %Pointer %r16859 to %uintptr_t
	%r16862 = add %uintptr_t %r16861, 8
	%r16860 = inttoptr %uintptr_t %r16862 to %Pointer
	store %CPointer %r16860, %CPointer* %regQ_157
	; RP(28): Objptr (opt_19)  = Cast (RQ(157): CPointer, Objptr (opt_19))
	%r16863 = load %CPointer, %CPointer* %regQ_157
	%r16864 = bitcast %CPointer %r16863 to %Objptr
	store %Objptr %r16864, %Objptr* %regP_28
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16865 = load %Pointer, %Pointer* %frontier
	%r16867 = ptrtoint %Pointer %r16865 to %uintptr_t
	%r16868 = add %uintptr_t %r16867, 24
	%r16866 = inttoptr %uintptr_t %r16868 to %Pointer
	store %Pointer %r16866, %Pointer* %frontier
	; OW32 (RP(28): Objptr (opt_19), 0): Word32  = 0x5
	%r16869 = load %Objptr, %Objptr* %regP_28
	%r16870 = getelementptr inbounds i8, %Objptr %r16869, i32 0
	%r16871 = bitcast %Objptr %r16870 to %Word32*
	store %Word32 5, %Word32* %r16871
	; OP (RP(28): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 50, isRoot = true, ty = Objptr (opt_3)}
	%r16872 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 50
	%r16873 = load %Objptr, %Objptr* %r16872
	%r16874 = load %Objptr, %Objptr* %regP_28
	%r16875 = getelementptr inbounds i8, %Objptr %r16874, i32 8
	%r16876 = bitcast %Objptr %r16875 to %Objptr*
	store %Objptr %r16873, %Objptr* %r16876
	; CW64 (<Frontier>)  = 0x27
	%r16877 = load %Pointer, %Pointer* %frontier
	%r16878 = bitcast %Pointer %r16877 to %Word64*
	store %Word64 39, %Word64* %r16878
	; RQ(156): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16879 = load %Pointer, %Pointer* %frontier
	%r16881 = ptrtoint %Pointer %r16879 to %uintptr_t
	%r16882 = add %uintptr_t %r16881, 8
	%r16880 = inttoptr %uintptr_t %r16882 to %Pointer
	store %CPointer %r16880, %CPointer* %regQ_156
	; RP(29): Objptr (opt_19)  = Cast (RQ(156): CPointer, Objptr (opt_19))
	%r16883 = load %CPointer, %CPointer* %regQ_156
	%r16884 = bitcast %CPointer %r16883 to %Objptr
	store %Objptr %r16884, %Objptr* %regP_29
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16885 = load %Pointer, %Pointer* %frontier
	%r16887 = ptrtoint %Pointer %r16885 to %uintptr_t
	%r16888 = add %uintptr_t %r16887, 24
	%r16886 = inttoptr %uintptr_t %r16888 to %Pointer
	store %Pointer %r16886, %Pointer* %frontier
	; OW32 (RP(29): Objptr (opt_19), 0): Word32  = 0x6A
	%r16889 = load %Objptr, %Objptr* %regP_29
	%r16890 = getelementptr inbounds i8, %Objptr %r16889, i32 0
	%r16891 = bitcast %Objptr %r16890 to %Word32*
	store %Word32 106, %Word32* %r16891
	; OP (RP(29): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 51, isRoot = true, ty = Objptr (opt_3)}
	%r16892 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 51
	%r16893 = load %Objptr, %Objptr* %r16892
	%r16894 = load %Objptr, %Objptr* %regP_29
	%r16895 = getelementptr inbounds i8, %Objptr %r16894, i32 8
	%r16896 = bitcast %Objptr %r16895 to %Objptr*
	store %Objptr %r16893, %Objptr* %r16896
	; CW64 (<Frontier>)  = 0x27
	%r16897 = load %Pointer, %Pointer* %frontier
	%r16898 = bitcast %Pointer %r16897 to %Word64*
	store %Word64 39, %Word64* %r16898
	; RQ(155): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16899 = load %Pointer, %Pointer* %frontier
	%r16901 = ptrtoint %Pointer %r16899 to %uintptr_t
	%r16902 = add %uintptr_t %r16901, 8
	%r16900 = inttoptr %uintptr_t %r16902 to %Pointer
	store %CPointer %r16900, %CPointer* %regQ_155
	; RP(30): Objptr (opt_19)  = Cast (RQ(155): CPointer, Objptr (opt_19))
	%r16903 = load %CPointer, %CPointer* %regQ_155
	%r16904 = bitcast %CPointer %r16903 to %Objptr
	store %Objptr %r16904, %Objptr* %regP_30
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16905 = load %Pointer, %Pointer* %frontier
	%r16907 = ptrtoint %Pointer %r16905 to %uintptr_t
	%r16908 = add %uintptr_t %r16907, 24
	%r16906 = inttoptr %uintptr_t %r16908 to %Pointer
	store %Pointer %r16906, %Pointer* %frontier
	; OW32 (RP(30): Objptr (opt_19), 0): Word32  = 0x15
	%r16909 = load %Objptr, %Objptr* %regP_30
	%r16910 = getelementptr inbounds i8, %Objptr %r16909, i32 0
	%r16911 = bitcast %Objptr %r16910 to %Word32*
	store %Word32 21, %Word32* %r16911
	; OP (RP(30): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 52, isRoot = true, ty = Objptr (opt_3)}
	%r16912 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 52
	%r16913 = load %Objptr, %Objptr* %r16912
	%r16914 = load %Objptr, %Objptr* %regP_30
	%r16915 = getelementptr inbounds i8, %Objptr %r16914, i32 8
	%r16916 = bitcast %Objptr %r16915 to %Objptr*
	store %Objptr %r16913, %Objptr* %r16916
	; CW64 (<Frontier>)  = 0x27
	%r16917 = load %Pointer, %Pointer* %frontier
	%r16918 = bitcast %Pointer %r16917 to %Word64*
	store %Word64 39, %Word64* %r16918
	; RQ(154): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16919 = load %Pointer, %Pointer* %frontier
	%r16921 = ptrtoint %Pointer %r16919 to %uintptr_t
	%r16922 = add %uintptr_t %r16921, 8
	%r16920 = inttoptr %uintptr_t %r16922 to %Pointer
	store %CPointer %r16920, %CPointer* %regQ_154
	; RP(31): Objptr (opt_19)  = Cast (RQ(154): CPointer, Objptr (opt_19))
	%r16923 = load %CPointer, %CPointer* %regQ_154
	%r16924 = bitcast %CPointer %r16923 to %Objptr
	store %Objptr %r16924, %Objptr* %regP_31
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16925 = load %Pointer, %Pointer* %frontier
	%r16927 = ptrtoint %Pointer %r16925 to %uintptr_t
	%r16928 = add %uintptr_t %r16927, 24
	%r16926 = inttoptr %uintptr_t %r16928 to %Pointer
	store %Pointer %r16926, %Pointer* %frontier
	; OW32 (RP(31): Objptr (opt_19), 0): Word32  = 0x28
	%r16929 = load %Objptr, %Objptr* %regP_31
	%r16930 = getelementptr inbounds i8, %Objptr %r16929, i32 0
	%r16931 = bitcast %Objptr %r16930 to %Word32*
	store %Word32 40, %Word32* %r16931
	; OP (RP(31): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 53, isRoot = true, ty = Objptr (opt_3)}
	%r16932 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 53
	%r16933 = load %Objptr, %Objptr* %r16932
	%r16934 = load %Objptr, %Objptr* %regP_31
	%r16935 = getelementptr inbounds i8, %Objptr %r16934, i32 8
	%r16936 = bitcast %Objptr %r16935 to %Objptr*
	store %Objptr %r16933, %Objptr* %r16936
	; CW64 (<Frontier>)  = 0x27
	%r16937 = load %Pointer, %Pointer* %frontier
	%r16938 = bitcast %Pointer %r16937 to %Word64*
	store %Word64 39, %Word64* %r16938
	; RQ(153): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16939 = load %Pointer, %Pointer* %frontier
	%r16941 = ptrtoint %Pointer %r16939 to %uintptr_t
	%r16942 = add %uintptr_t %r16941, 8
	%r16940 = inttoptr %uintptr_t %r16942 to %Pointer
	store %CPointer %r16940, %CPointer* %regQ_153
	; RP(32): Objptr (opt_19)  = Cast (RQ(153): CPointer, Objptr (opt_19))
	%r16943 = load %CPointer, %CPointer* %regQ_153
	%r16944 = bitcast %CPointer %r16943 to %Objptr
	store %Objptr %r16944, %Objptr* %regP_32
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16945 = load %Pointer, %Pointer* %frontier
	%r16947 = ptrtoint %Pointer %r16945 to %uintptr_t
	%r16948 = add %uintptr_t %r16947, 24
	%r16946 = inttoptr %uintptr_t %r16948 to %Pointer
	store %Pointer %r16946, %Pointer* %frontier
	; OW32 (RP(32): Objptr (opt_19), 0): Word32  = 0x18
	%r16949 = load %Objptr, %Objptr* %regP_32
	%r16950 = getelementptr inbounds i8, %Objptr %r16949, i32 0
	%r16951 = bitcast %Objptr %r16950 to %Word32*
	store %Word32 24, %Word32* %r16951
	; OP (RP(32): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 54, isRoot = true, ty = Objptr (opt_3)}
	%r16952 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 54
	%r16953 = load %Objptr, %Objptr* %r16952
	%r16954 = load %Objptr, %Objptr* %regP_32
	%r16955 = getelementptr inbounds i8, %Objptr %r16954, i32 8
	%r16956 = bitcast %Objptr %r16955 to %Objptr*
	store %Objptr %r16953, %Objptr* %r16956
	; CW64 (<Frontier>)  = 0x27
	%r16957 = load %Pointer, %Pointer* %frontier
	%r16958 = bitcast %Pointer %r16957 to %Word64*
	store %Word64 39, %Word64* %r16958
	; RQ(152): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16959 = load %Pointer, %Pointer* %frontier
	%r16961 = ptrtoint %Pointer %r16959 to %uintptr_t
	%r16962 = add %uintptr_t %r16961, 8
	%r16960 = inttoptr %uintptr_t %r16962 to %Pointer
	store %CPointer %r16960, %CPointer* %regQ_152
	; RP(33): Objptr (opt_19)  = Cast (RQ(152): CPointer, Objptr (opt_19))
	%r16963 = load %CPointer, %CPointer* %regQ_152
	%r16964 = bitcast %CPointer %r16963 to %Objptr
	store %Objptr %r16964, %Objptr* %regP_33
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16965 = load %Pointer, %Pointer* %frontier
	%r16967 = ptrtoint %Pointer %r16965 to %uintptr_t
	%r16968 = add %uintptr_t %r16967, 24
	%r16966 = inttoptr %uintptr_t %r16968 to %Pointer
	store %Pointer %r16966, %Pointer* %frontier
	; OW32 (RP(33): Objptr (opt_19), 0): Word32  = 0x1F
	%r16969 = load %Objptr, %Objptr* %regP_33
	%r16970 = getelementptr inbounds i8, %Objptr %r16969, i32 0
	%r16971 = bitcast %Objptr %r16970 to %Word32*
	store %Word32 31, %Word32* %r16971
	; OP (RP(33): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 55, isRoot = true, ty = Objptr (opt_3)}
	%r16972 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 55
	%r16973 = load %Objptr, %Objptr* %r16972
	%r16974 = load %Objptr, %Objptr* %regP_33
	%r16975 = getelementptr inbounds i8, %Objptr %r16974, i32 8
	%r16976 = bitcast %Objptr %r16975 to %Objptr*
	store %Objptr %r16973, %Objptr* %r16976
	; CW64 (<Frontier>)  = 0x27
	%r16977 = load %Pointer, %Pointer* %frontier
	%r16978 = bitcast %Pointer %r16977 to %Word64*
	store %Word64 39, %Word64* %r16978
	; RQ(151): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16979 = load %Pointer, %Pointer* %frontier
	%r16981 = ptrtoint %Pointer %r16979 to %uintptr_t
	%r16982 = add %uintptr_t %r16981, 8
	%r16980 = inttoptr %uintptr_t %r16982 to %Pointer
	store %CPointer %r16980, %CPointer* %regQ_151
	; RP(34): Objptr (opt_19)  = Cast (RQ(151): CPointer, Objptr (opt_19))
	%r16983 = load %CPointer, %CPointer* %regQ_151
	%r16984 = bitcast %CPointer %r16983 to %Objptr
	store %Objptr %r16984, %Objptr* %regP_34
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r16985 = load %Pointer, %Pointer* %frontier
	%r16987 = ptrtoint %Pointer %r16985 to %uintptr_t
	%r16988 = add %uintptr_t %r16987, 24
	%r16986 = inttoptr %uintptr_t %r16988 to %Pointer
	store %Pointer %r16986, %Pointer* %frontier
	; OW32 (RP(34): Objptr (opt_19), 0): Word32  = 0x5A
	%r16989 = load %Objptr, %Objptr* %regP_34
	%r16990 = getelementptr inbounds i8, %Objptr %r16989, i32 0
	%r16991 = bitcast %Objptr %r16990 to %Word32*
	store %Word32 90, %Word32* %r16991
	; OP (RP(34): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 56, isRoot = true, ty = Objptr (opt_3)}
	%r16992 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 56
	%r16993 = load %Objptr, %Objptr* %r16992
	%r16994 = load %Objptr, %Objptr* %regP_34
	%r16995 = getelementptr inbounds i8, %Objptr %r16994, i32 8
	%r16996 = bitcast %Objptr %r16995 to %Objptr*
	store %Objptr %r16993, %Objptr* %r16996
	; CW64 (<Frontier>)  = 0x27
	%r16997 = load %Pointer, %Pointer* %frontier
	%r16998 = bitcast %Pointer %r16997 to %Word64*
	store %Word64 39, %Word64* %r16998
	; RQ(150): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r16999 = load %Pointer, %Pointer* %frontier
	%r17001 = ptrtoint %Pointer %r16999 to %uintptr_t
	%r17002 = add %uintptr_t %r17001, 8
	%r17000 = inttoptr %uintptr_t %r17002 to %Pointer
	store %CPointer %r17000, %CPointer* %regQ_150
	; RP(35): Objptr (opt_19)  = Cast (RQ(150): CPointer, Objptr (opt_19))
	%r17003 = load %CPointer, %CPointer* %regQ_150
	%r17004 = bitcast %CPointer %r17003 to %Objptr
	store %Objptr %r17004, %Objptr* %regP_35
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17005 = load %Pointer, %Pointer* %frontier
	%r17007 = ptrtoint %Pointer %r17005 to %uintptr_t
	%r17008 = add %uintptr_t %r17007, 24
	%r17006 = inttoptr %uintptr_t %r17008 to %Pointer
	store %Pointer %r17006, %Pointer* %frontier
	; OW32 (RP(35): Objptr (opt_19), 0): Word32  = 0x48
	%r17009 = load %Objptr, %Objptr* %regP_35
	%r17010 = getelementptr inbounds i8, %Objptr %r17009, i32 0
	%r17011 = bitcast %Objptr %r17010 to %Word32*
	store %Word32 72, %Word32* %r17011
	; OP (RP(35): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 57, isRoot = true, ty = Objptr (opt_3)}
	%r17012 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 57
	%r17013 = load %Objptr, %Objptr* %r17012
	%r17014 = load %Objptr, %Objptr* %regP_35
	%r17015 = getelementptr inbounds i8, %Objptr %r17014, i32 8
	%r17016 = bitcast %Objptr %r17015 to %Objptr*
	store %Objptr %r17013, %Objptr* %r17016
	; CW64 (<Frontier>)  = 0x27
	%r17017 = load %Pointer, %Pointer* %frontier
	%r17018 = bitcast %Pointer %r17017 to %Word64*
	store %Word64 39, %Word64* %r17018
	; RQ(149): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17019 = load %Pointer, %Pointer* %frontier
	%r17021 = ptrtoint %Pointer %r17019 to %uintptr_t
	%r17022 = add %uintptr_t %r17021, 8
	%r17020 = inttoptr %uintptr_t %r17022 to %Pointer
	store %CPointer %r17020, %CPointer* %regQ_149
	; RP(36): Objptr (opt_19)  = Cast (RQ(149): CPointer, Objptr (opt_19))
	%r17023 = load %CPointer, %CPointer* %regQ_149
	%r17024 = bitcast %CPointer %r17023 to %Objptr
	store %Objptr %r17024, %Objptr* %regP_36
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17025 = load %Pointer, %Pointer* %frontier
	%r17027 = ptrtoint %Pointer %r17025 to %uintptr_t
	%r17028 = add %uintptr_t %r17027, 24
	%r17026 = inttoptr %uintptr_t %r17028 to %Pointer
	store %Pointer %r17026, %Pointer* %frontier
	; OW32 (RP(36): Objptr (opt_19), 0): Word32  = 0x24
	%r17029 = load %Objptr, %Objptr* %regP_36
	%r17030 = getelementptr inbounds i8, %Objptr %r17029, i32 0
	%r17031 = bitcast %Objptr %r17030 to %Word32*
	store %Word32 36, %Word32* %r17031
	; OP (RP(36): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 58, isRoot = true, ty = Objptr (opt_3)}
	%r17032 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 58
	%r17033 = load %Objptr, %Objptr* %r17032
	%r17034 = load %Objptr, %Objptr* %regP_36
	%r17035 = getelementptr inbounds i8, %Objptr %r17034, i32 8
	%r17036 = bitcast %Objptr %r17035 to %Objptr*
	store %Objptr %r17033, %Objptr* %r17036
	; CW64 (<Frontier>)  = 0x27
	%r17037 = load %Pointer, %Pointer* %frontier
	%r17038 = bitcast %Pointer %r17037 to %Word64*
	store %Word64 39, %Word64* %r17038
	; RQ(148): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17039 = load %Pointer, %Pointer* %frontier
	%r17041 = ptrtoint %Pointer %r17039 to %uintptr_t
	%r17042 = add %uintptr_t %r17041, 8
	%r17040 = inttoptr %uintptr_t %r17042 to %Pointer
	store %CPointer %r17040, %CPointer* %regQ_148
	; RP(37): Objptr (opt_19)  = Cast (RQ(148): CPointer, Objptr (opt_19))
	%r17043 = load %CPointer, %CPointer* %regQ_148
	%r17044 = bitcast %CPointer %r17043 to %Objptr
	store %Objptr %r17044, %Objptr* %regP_37
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17045 = load %Pointer, %Pointer* %frontier
	%r17047 = ptrtoint %Pointer %r17045 to %uintptr_t
	%r17048 = add %uintptr_t %r17047, 24
	%r17046 = inttoptr %uintptr_t %r17048 to %Pointer
	store %Pointer %r17046, %Pointer* %frontier
	; OW32 (RP(37): Objptr (opt_19), 0): Word32  = 0x64
	%r17049 = load %Objptr, %Objptr* %regP_37
	%r17050 = getelementptr inbounds i8, %Objptr %r17049, i32 0
	%r17051 = bitcast %Objptr %r17050 to %Word32*
	store %Word32 100, %Word32* %r17051
	; OP (RP(37): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 59, isRoot = true, ty = Objptr (opt_3)}
	%r17052 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 59
	%r17053 = load %Objptr, %Objptr* %r17052
	%r17054 = load %Objptr, %Objptr* %regP_37
	%r17055 = getelementptr inbounds i8, %Objptr %r17054, i32 8
	%r17056 = bitcast %Objptr %r17055 to %Objptr*
	store %Objptr %r17053, %Objptr* %r17056
	; CW64 (<Frontier>)  = 0x27
	%r17057 = load %Pointer, %Pointer* %frontier
	%r17058 = bitcast %Pointer %r17057 to %Word64*
	store %Word64 39, %Word64* %r17058
	; RQ(147): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17059 = load %Pointer, %Pointer* %frontier
	%r17061 = ptrtoint %Pointer %r17059 to %uintptr_t
	%r17062 = add %uintptr_t %r17061, 8
	%r17060 = inttoptr %uintptr_t %r17062 to %Pointer
	store %CPointer %r17060, %CPointer* %regQ_147
	; RP(38): Objptr (opt_19)  = Cast (RQ(147): CPointer, Objptr (opt_19))
	%r17063 = load %CPointer, %CPointer* %regQ_147
	%r17064 = bitcast %CPointer %r17063 to %Objptr
	store %Objptr %r17064, %Objptr* %regP_38
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17065 = load %Pointer, %Pointer* %frontier
	%r17067 = ptrtoint %Pointer %r17065 to %uintptr_t
	%r17068 = add %uintptr_t %r17067, 24
	%r17066 = inttoptr %uintptr_t %r17068 to %Pointer
	store %Pointer %r17066, %Pointer* %frontier
	; OW32 (RP(38): Objptr (opt_19), 0): Word32  = 0x66
	%r17069 = load %Objptr, %Objptr* %regP_38
	%r17070 = getelementptr inbounds i8, %Objptr %r17069, i32 0
	%r17071 = bitcast %Objptr %r17070 to %Word32*
	store %Word32 102, %Word32* %r17071
	; OP (RP(38): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 60, isRoot = true, ty = Objptr (opt_3)}
	%r17072 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 60
	%r17073 = load %Objptr, %Objptr* %r17072
	%r17074 = load %Objptr, %Objptr* %regP_38
	%r17075 = getelementptr inbounds i8, %Objptr %r17074, i32 8
	%r17076 = bitcast %Objptr %r17075 to %Objptr*
	store %Objptr %r17073, %Objptr* %r17076
	; CW64 (<Frontier>)  = 0x27
	%r17077 = load %Pointer, %Pointer* %frontier
	%r17078 = bitcast %Pointer %r17077 to %Word64*
	store %Word64 39, %Word64* %r17078
	; RQ(146): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17079 = load %Pointer, %Pointer* %frontier
	%r17081 = ptrtoint %Pointer %r17079 to %uintptr_t
	%r17082 = add %uintptr_t %r17081, 8
	%r17080 = inttoptr %uintptr_t %r17082 to %Pointer
	store %CPointer %r17080, %CPointer* %regQ_146
	; RP(39): Objptr (opt_19)  = Cast (RQ(146): CPointer, Objptr (opt_19))
	%r17083 = load %CPointer, %CPointer* %regQ_146
	%r17084 = bitcast %CPointer %r17083 to %Objptr
	store %Objptr %r17084, %Objptr* %regP_39
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17085 = load %Pointer, %Pointer* %frontier
	%r17087 = ptrtoint %Pointer %r17085 to %uintptr_t
	%r17088 = add %uintptr_t %r17087, 24
	%r17086 = inttoptr %uintptr_t %r17088 to %Pointer
	store %Pointer %r17086, %Pointer* %frontier
	; OW32 (RP(39): Objptr (opt_19), 0): Word32  = 0x65
	%r17089 = load %Objptr, %Objptr* %regP_39
	%r17090 = getelementptr inbounds i8, %Objptr %r17089, i32 0
	%r17091 = bitcast %Objptr %r17090 to %Word32*
	store %Word32 101, %Word32* %r17091
	; OP (RP(39): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 61, isRoot = true, ty = Objptr (opt_3)}
	%r17092 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 61
	%r17093 = load %Objptr, %Objptr* %r17092
	%r17094 = load %Objptr, %Objptr* %regP_39
	%r17095 = getelementptr inbounds i8, %Objptr %r17094, i32 8
	%r17096 = bitcast %Objptr %r17095 to %Objptr*
	store %Objptr %r17093, %Objptr* %r17096
	; CW64 (<Frontier>)  = 0x27
	%r17097 = load %Pointer, %Pointer* %frontier
	%r17098 = bitcast %Pointer %r17097 to %Word64*
	store %Word64 39, %Word64* %r17098
	; RQ(145): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17099 = load %Pointer, %Pointer* %frontier
	%r17101 = ptrtoint %Pointer %r17099 to %uintptr_t
	%r17102 = add %uintptr_t %r17101, 8
	%r17100 = inttoptr %uintptr_t %r17102 to %Pointer
	store %CPointer %r17100, %CPointer* %regQ_145
	; RP(40): Objptr (opt_19)  = Cast (RQ(145): CPointer, Objptr (opt_19))
	%r17103 = load %CPointer, %CPointer* %regQ_145
	%r17104 = bitcast %CPointer %r17103 to %Objptr
	store %Objptr %r17104, %Objptr* %regP_40
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17105 = load %Pointer, %Pointer* %frontier
	%r17107 = ptrtoint %Pointer %r17105 to %uintptr_t
	%r17108 = add %uintptr_t %r17107, 24
	%r17106 = inttoptr %uintptr_t %r17108 to %Pointer
	store %Pointer %r17106, %Pointer* %frontier
	; OW32 (RP(40): Objptr (opt_19), 0): Word32  = 0x17
	%r17109 = load %Objptr, %Objptr* %regP_40
	%r17110 = getelementptr inbounds i8, %Objptr %r17109, i32 0
	%r17111 = bitcast %Objptr %r17110 to %Word32*
	store %Word32 23, %Word32* %r17111
	; OP (RP(40): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 62, isRoot = true, ty = Objptr (opt_3)}
	%r17112 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 62
	%r17113 = load %Objptr, %Objptr* %r17112
	%r17114 = load %Objptr, %Objptr* %regP_40
	%r17115 = getelementptr inbounds i8, %Objptr %r17114, i32 8
	%r17116 = bitcast %Objptr %r17115 to %Objptr*
	store %Objptr %r17113, %Objptr* %r17116
	; CW64 (<Frontier>)  = 0x27
	%r17117 = load %Pointer, %Pointer* %frontier
	%r17118 = bitcast %Pointer %r17117 to %Word64*
	store %Word64 39, %Word64* %r17118
	; RQ(144): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17119 = load %Pointer, %Pointer* %frontier
	%r17121 = ptrtoint %Pointer %r17119 to %uintptr_t
	%r17122 = add %uintptr_t %r17121, 8
	%r17120 = inttoptr %uintptr_t %r17122 to %Pointer
	store %CPointer %r17120, %CPointer* %regQ_144
	; RP(41): Objptr (opt_19)  = Cast (RQ(144): CPointer, Objptr (opt_19))
	%r17123 = load %CPointer, %CPointer* %regQ_144
	%r17124 = bitcast %CPointer %r17123 to %Objptr
	store %Objptr %r17124, %Objptr* %regP_41
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17125 = load %Pointer, %Pointer* %frontier
	%r17127 = ptrtoint %Pointer %r17125 to %uintptr_t
	%r17128 = add %uintptr_t %r17127, 24
	%r17126 = inttoptr %uintptr_t %r17128 to %Pointer
	store %Pointer %r17126, %Pointer* %frontier
	; OW32 (RP(41): Objptr (opt_19), 0): Word32  = 0x69
	%r17129 = load %Objptr, %Objptr* %regP_41
	%r17130 = getelementptr inbounds i8, %Objptr %r17129, i32 0
	%r17131 = bitcast %Objptr %r17130 to %Word32*
	store %Word32 105, %Word32* %r17131
	; OP (RP(41): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 63, isRoot = true, ty = Objptr (opt_3)}
	%r17132 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 63
	%r17133 = load %Objptr, %Objptr* %r17132
	%r17134 = load %Objptr, %Objptr* %regP_41
	%r17135 = getelementptr inbounds i8, %Objptr %r17134, i32 8
	%r17136 = bitcast %Objptr %r17135 to %Objptr*
	store %Objptr %r17133, %Objptr* %r17136
	; CW64 (<Frontier>)  = 0x27
	%r17137 = load %Pointer, %Pointer* %frontier
	%r17138 = bitcast %Pointer %r17137 to %Word64*
	store %Word64 39, %Word64* %r17138
	; RQ(143): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17139 = load %Pointer, %Pointer* %frontier
	%r17141 = ptrtoint %Pointer %r17139 to %uintptr_t
	%r17142 = add %uintptr_t %r17141, 8
	%r17140 = inttoptr %uintptr_t %r17142 to %Pointer
	store %CPointer %r17140, %CPointer* %regQ_143
	; RP(42): Objptr (opt_19)  = Cast (RQ(143): CPointer, Objptr (opt_19))
	%r17143 = load %CPointer, %CPointer* %regQ_143
	%r17144 = bitcast %CPointer %r17143 to %Objptr
	store %Objptr %r17144, %Objptr* %regP_42
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17145 = load %Pointer, %Pointer* %frontier
	%r17147 = ptrtoint %Pointer %r17145 to %uintptr_t
	%r17148 = add %uintptr_t %r17147, 24
	%r17146 = inttoptr %uintptr_t %r17148 to %Pointer
	store %Pointer %r17146, %Pointer* %frontier
	; OW32 (RP(42): Objptr (opt_19), 0): Word32  = 0x3D
	%r17149 = load %Objptr, %Objptr* %regP_42
	%r17150 = getelementptr inbounds i8, %Objptr %r17149, i32 0
	%r17151 = bitcast %Objptr %r17150 to %Word32*
	store %Word32 61, %Word32* %r17151
	; OP (RP(42): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 64, isRoot = true, ty = Objptr (opt_3)}
	%r17152 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 64
	%r17153 = load %Objptr, %Objptr* %r17152
	%r17154 = load %Objptr, %Objptr* %regP_42
	%r17155 = getelementptr inbounds i8, %Objptr %r17154, i32 8
	%r17156 = bitcast %Objptr %r17155 to %Objptr*
	store %Objptr %r17153, %Objptr* %r17156
	; CW64 (<Frontier>)  = 0x27
	%r17157 = load %Pointer, %Pointer* %frontier
	%r17158 = bitcast %Pointer %r17157 to %Word64*
	store %Word64 39, %Word64* %r17158
	; RQ(142): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17159 = load %Pointer, %Pointer* %frontier
	%r17161 = ptrtoint %Pointer %r17159 to %uintptr_t
	%r17162 = add %uintptr_t %r17161, 8
	%r17160 = inttoptr %uintptr_t %r17162 to %Pointer
	store %CPointer %r17160, %CPointer* %regQ_142
	; RP(43): Objptr (opt_19)  = Cast (RQ(142): CPointer, Objptr (opt_19))
	%r17163 = load %CPointer, %CPointer* %regQ_142
	%r17164 = bitcast %CPointer %r17163 to %Objptr
	store %Objptr %r17164, %Objptr* %regP_43
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17165 = load %Pointer, %Pointer* %frontier
	%r17167 = ptrtoint %Pointer %r17165 to %uintptr_t
	%r17168 = add %uintptr_t %r17167, 24
	%r17166 = inttoptr %uintptr_t %r17168 to %Pointer
	store %Pointer %r17166, %Pointer* %frontier
	; OW32 (RP(43): Objptr (opt_19), 0): Word32  = 0x13
	%r17169 = load %Objptr, %Objptr* %regP_43
	%r17170 = getelementptr inbounds i8, %Objptr %r17169, i32 0
	%r17171 = bitcast %Objptr %r17170 to %Word32*
	store %Word32 19, %Word32* %r17171
	; OP (RP(43): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 65, isRoot = true, ty = Objptr (opt_3)}
	%r17172 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 65
	%r17173 = load %Objptr, %Objptr* %r17172
	%r17174 = load %Objptr, %Objptr* %regP_43
	%r17175 = getelementptr inbounds i8, %Objptr %r17174, i32 8
	%r17176 = bitcast %Objptr %r17175 to %Objptr*
	store %Objptr %r17173, %Objptr* %r17176
	; CW64 (<Frontier>)  = 0x27
	%r17177 = load %Pointer, %Pointer* %frontier
	%r17178 = bitcast %Pointer %r17177 to %Word64*
	store %Word64 39, %Word64* %r17178
	; RQ(141): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17179 = load %Pointer, %Pointer* %frontier
	%r17181 = ptrtoint %Pointer %r17179 to %uintptr_t
	%r17182 = add %uintptr_t %r17181, 8
	%r17180 = inttoptr %uintptr_t %r17182 to %Pointer
	store %CPointer %r17180, %CPointer* %regQ_141
	; RP(44): Objptr (opt_19)  = Cast (RQ(141): CPointer, Objptr (opt_19))
	%r17183 = load %CPointer, %CPointer* %regQ_141
	%r17184 = bitcast %CPointer %r17183 to %Objptr
	store %Objptr %r17184, %Objptr* %regP_44
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17185 = load %Pointer, %Pointer* %frontier
	%r17187 = ptrtoint %Pointer %r17185 to %uintptr_t
	%r17188 = add %uintptr_t %r17187, 24
	%r17186 = inttoptr %uintptr_t %r17188 to %Pointer
	store %Pointer %r17186, %Pointer* %frontier
	; OW32 (RP(44): Objptr (opt_19), 0): Word32  = 0x2
	%r17189 = load %Objptr, %Objptr* %regP_44
	%r17190 = getelementptr inbounds i8, %Objptr %r17189, i32 0
	%r17191 = bitcast %Objptr %r17190 to %Word32*
	store %Word32 2, %Word32* %r17191
	; OP (RP(44): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 66, isRoot = true, ty = Objptr (opt_3)}
	%r17192 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 66
	%r17193 = load %Objptr, %Objptr* %r17192
	%r17194 = load %Objptr, %Objptr* %regP_44
	%r17195 = getelementptr inbounds i8, %Objptr %r17194, i32 8
	%r17196 = bitcast %Objptr %r17195 to %Objptr*
	store %Objptr %r17193, %Objptr* %r17196
	; CW64 (<Frontier>)  = 0x27
	%r17197 = load %Pointer, %Pointer* %frontier
	%r17198 = bitcast %Pointer %r17197 to %Word64*
	store %Word64 39, %Word64* %r17198
	; RQ(140): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17199 = load %Pointer, %Pointer* %frontier
	%r17201 = ptrtoint %Pointer %r17199 to %uintptr_t
	%r17202 = add %uintptr_t %r17201, 8
	%r17200 = inttoptr %uintptr_t %r17202 to %Pointer
	store %CPointer %r17200, %CPointer* %regQ_140
	; RP(45): Objptr (opt_19)  = Cast (RQ(140): CPointer, Objptr (opt_19))
	%r17203 = load %CPointer, %CPointer* %regQ_140
	%r17204 = bitcast %CPointer %r17203 to %Objptr
	store %Objptr %r17204, %Objptr* %regP_45
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17205 = load %Pointer, %Pointer* %frontier
	%r17207 = ptrtoint %Pointer %r17205 to %uintptr_t
	%r17208 = add %uintptr_t %r17207, 24
	%r17206 = inttoptr %uintptr_t %r17208 to %Pointer
	store %Pointer %r17206, %Pointer* %frontier
	; OW32 (RP(45): Objptr (opt_19), 0): Word32  = 0x8
	%r17209 = load %Objptr, %Objptr* %regP_45
	%r17210 = getelementptr inbounds i8, %Objptr %r17209, i32 0
	%r17211 = bitcast %Objptr %r17210 to %Word32*
	store %Word32 8, %Word32* %r17211
	; OP (RP(45): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 67, isRoot = true, ty = Objptr (opt_3)}
	%r17212 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 67
	%r17213 = load %Objptr, %Objptr* %r17212
	%r17214 = load %Objptr, %Objptr* %regP_45
	%r17215 = getelementptr inbounds i8, %Objptr %r17214, i32 8
	%r17216 = bitcast %Objptr %r17215 to %Objptr*
	store %Objptr %r17213, %Objptr* %r17216
	; CW64 (<Frontier>)  = 0x27
	%r17217 = load %Pointer, %Pointer* %frontier
	%r17218 = bitcast %Pointer %r17217 to %Word64*
	store %Word64 39, %Word64* %r17218
	; RQ(139): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17219 = load %Pointer, %Pointer* %frontier
	%r17221 = ptrtoint %Pointer %r17219 to %uintptr_t
	%r17222 = add %uintptr_t %r17221, 8
	%r17220 = inttoptr %uintptr_t %r17222 to %Pointer
	store %CPointer %r17220, %CPointer* %regQ_139
	; RP(46): Objptr (opt_19)  = Cast (RQ(139): CPointer, Objptr (opt_19))
	%r17223 = load %CPointer, %CPointer* %regQ_139
	%r17224 = bitcast %CPointer %r17223 to %Objptr
	store %Objptr %r17224, %Objptr* %regP_46
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17225 = load %Pointer, %Pointer* %frontier
	%r17227 = ptrtoint %Pointer %r17225 to %uintptr_t
	%r17228 = add %uintptr_t %r17227, 24
	%r17226 = inttoptr %uintptr_t %r17228 to %Pointer
	store %Pointer %r17226, %Pointer* %frontier
	; OW32 (RP(46): Objptr (opt_19), 0): Word32  = 0x25
	%r17229 = load %Objptr, %Objptr* %regP_46
	%r17230 = getelementptr inbounds i8, %Objptr %r17229, i32 0
	%r17231 = bitcast %Objptr %r17230 to %Word32*
	store %Word32 37, %Word32* %r17231
	; OP (RP(46): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 68, isRoot = true, ty = Objptr (opt_3)}
	%r17232 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 68
	%r17233 = load %Objptr, %Objptr* %r17232
	%r17234 = load %Objptr, %Objptr* %regP_46
	%r17235 = getelementptr inbounds i8, %Objptr %r17234, i32 8
	%r17236 = bitcast %Objptr %r17235 to %Objptr*
	store %Objptr %r17233, %Objptr* %r17236
	; CW64 (<Frontier>)  = 0x27
	%r17237 = load %Pointer, %Pointer* %frontier
	%r17238 = bitcast %Pointer %r17237 to %Word64*
	store %Word64 39, %Word64* %r17238
	; RQ(138): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17239 = load %Pointer, %Pointer* %frontier
	%r17241 = ptrtoint %Pointer %r17239 to %uintptr_t
	%r17242 = add %uintptr_t %r17241, 8
	%r17240 = inttoptr %uintptr_t %r17242 to %Pointer
	store %CPointer %r17240, %CPointer* %regQ_138
	; RP(47): Objptr (opt_19)  = Cast (RQ(138): CPointer, Objptr (opt_19))
	%r17243 = load %CPointer, %CPointer* %regQ_138
	%r17244 = bitcast %CPointer %r17243 to %Objptr
	store %Objptr %r17244, %Objptr* %regP_47
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17245 = load %Pointer, %Pointer* %frontier
	%r17247 = ptrtoint %Pointer %r17245 to %uintptr_t
	%r17248 = add %uintptr_t %r17247, 24
	%r17246 = inttoptr %uintptr_t %r17248 to %Pointer
	store %Pointer %r17246, %Pointer* %frontier
	; OW32 (RP(47): Objptr (opt_19), 0): Word32  = 0x43
	%r17249 = load %Objptr, %Objptr* %regP_47
	%r17250 = getelementptr inbounds i8, %Objptr %r17249, i32 0
	%r17251 = bitcast %Objptr %r17250 to %Word32*
	store %Word32 67, %Word32* %r17251
	; OP (RP(47): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 69, isRoot = true, ty = Objptr (opt_3)}
	%r17252 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 69
	%r17253 = load %Objptr, %Objptr* %r17252
	%r17254 = load %Objptr, %Objptr* %regP_47
	%r17255 = getelementptr inbounds i8, %Objptr %r17254, i32 8
	%r17256 = bitcast %Objptr %r17255 to %Objptr*
	store %Objptr %r17253, %Objptr* %r17256
	; CW64 (<Frontier>)  = 0x27
	%r17257 = load %Pointer, %Pointer* %frontier
	%r17258 = bitcast %Pointer %r17257 to %Word64*
	store %Word64 39, %Word64* %r17258
	; RQ(137): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17259 = load %Pointer, %Pointer* %frontier
	%r17261 = ptrtoint %Pointer %r17259 to %uintptr_t
	%r17262 = add %uintptr_t %r17261, 8
	%r17260 = inttoptr %uintptr_t %r17262 to %Pointer
	store %CPointer %r17260, %CPointer* %regQ_137
	; RP(48): Objptr (opt_19)  = Cast (RQ(137): CPointer, Objptr (opt_19))
	%r17263 = load %CPointer, %CPointer* %regQ_137
	%r17264 = bitcast %CPointer %r17263 to %Objptr
	store %Objptr %r17264, %Objptr* %regP_48
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17265 = load %Pointer, %Pointer* %frontier
	%r17267 = ptrtoint %Pointer %r17265 to %uintptr_t
	%r17268 = add %uintptr_t %r17267, 24
	%r17266 = inttoptr %uintptr_t %r17268 to %Pointer
	store %Pointer %r17266, %Pointer* %frontier
	; OW32 (RP(48): Objptr (opt_19), 0): Word32  = 0xC
	%r17269 = load %Objptr, %Objptr* %regP_48
	%r17270 = getelementptr inbounds i8, %Objptr %r17269, i32 0
	%r17271 = bitcast %Objptr %r17270 to %Word32*
	store %Word32 12, %Word32* %r17271
	; OP (RP(48): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 70, isRoot = true, ty = Objptr (opt_3)}
	%r17272 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 70
	%r17273 = load %Objptr, %Objptr* %r17272
	%r17274 = load %Objptr, %Objptr* %regP_48
	%r17275 = getelementptr inbounds i8, %Objptr %r17274, i32 8
	%r17276 = bitcast %Objptr %r17275 to %Objptr*
	store %Objptr %r17273, %Objptr* %r17276
	; CW64 (<Frontier>)  = 0x27
	%r17277 = load %Pointer, %Pointer* %frontier
	%r17278 = bitcast %Pointer %r17277 to %Word64*
	store %Word64 39, %Word64* %r17278
	; RQ(136): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17279 = load %Pointer, %Pointer* %frontier
	%r17281 = ptrtoint %Pointer %r17279 to %uintptr_t
	%r17282 = add %uintptr_t %r17281, 8
	%r17280 = inttoptr %uintptr_t %r17282 to %Pointer
	store %CPointer %r17280, %CPointer* %regQ_136
	; RP(49): Objptr (opt_19)  = Cast (RQ(136): CPointer, Objptr (opt_19))
	%r17283 = load %CPointer, %CPointer* %regQ_136
	%r17284 = bitcast %CPointer %r17283 to %Objptr
	store %Objptr %r17284, %Objptr* %regP_49
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17285 = load %Pointer, %Pointer* %frontier
	%r17287 = ptrtoint %Pointer %r17285 to %uintptr_t
	%r17288 = add %uintptr_t %r17287, 24
	%r17286 = inttoptr %uintptr_t %r17288 to %Pointer
	store %Pointer %r17286, %Pointer* %frontier
	; OW32 (RP(49): Objptr (opt_19), 0): Word32  = 0x2A
	%r17289 = load %Objptr, %Objptr* %regP_49
	%r17290 = getelementptr inbounds i8, %Objptr %r17289, i32 0
	%r17291 = bitcast %Objptr %r17290 to %Word32*
	store %Word32 42, %Word32* %r17291
	; OP (RP(49): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 71, isRoot = true, ty = Objptr (opt_3)}
	%r17292 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 71
	%r17293 = load %Objptr, %Objptr* %r17292
	%r17294 = load %Objptr, %Objptr* %regP_49
	%r17295 = getelementptr inbounds i8, %Objptr %r17294, i32 8
	%r17296 = bitcast %Objptr %r17295 to %Objptr*
	store %Objptr %r17293, %Objptr* %r17296
	; CW64 (<Frontier>)  = 0x27
	%r17297 = load %Pointer, %Pointer* %frontier
	%r17298 = bitcast %Pointer %r17297 to %Word64*
	store %Word64 39, %Word64* %r17298
	; RQ(135): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17299 = load %Pointer, %Pointer* %frontier
	%r17301 = ptrtoint %Pointer %r17299 to %uintptr_t
	%r17302 = add %uintptr_t %r17301, 8
	%r17300 = inttoptr %uintptr_t %r17302 to %Pointer
	store %CPointer %r17300, %CPointer* %regQ_135
	; RP(50): Objptr (opt_19)  = Cast (RQ(135): CPointer, Objptr (opt_19))
	%r17303 = load %CPointer, %CPointer* %regQ_135
	%r17304 = bitcast %CPointer %r17303 to %Objptr
	store %Objptr %r17304, %Objptr* %regP_50
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17305 = load %Pointer, %Pointer* %frontier
	%r17307 = ptrtoint %Pointer %r17305 to %uintptr_t
	%r17308 = add %uintptr_t %r17307, 24
	%r17306 = inttoptr %uintptr_t %r17308 to %Pointer
	store %Pointer %r17306, %Pointer* %frontier
	; OW32 (RP(50): Objptr (opt_19), 0): Word32  = 0x5C
	%r17309 = load %Objptr, %Objptr* %regP_50
	%r17310 = getelementptr inbounds i8, %Objptr %r17309, i32 0
	%r17311 = bitcast %Objptr %r17310 to %Word32*
	store %Word32 92, %Word32* %r17311
	; OP (RP(50): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 72, isRoot = true, ty = Objptr (opt_3)}
	%r17312 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 72
	%r17313 = load %Objptr, %Objptr* %r17312
	%r17314 = load %Objptr, %Objptr* %regP_50
	%r17315 = getelementptr inbounds i8, %Objptr %r17314, i32 8
	%r17316 = bitcast %Objptr %r17315 to %Objptr*
	store %Objptr %r17313, %Objptr* %r17316
	; CW64 (<Frontier>)  = 0x27
	%r17317 = load %Pointer, %Pointer* %frontier
	%r17318 = bitcast %Pointer %r17317 to %Word64*
	store %Word64 39, %Word64* %r17318
	; RQ(134): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17319 = load %Pointer, %Pointer* %frontier
	%r17321 = ptrtoint %Pointer %r17319 to %uintptr_t
	%r17322 = add %uintptr_t %r17321, 8
	%r17320 = inttoptr %uintptr_t %r17322 to %Pointer
	store %CPointer %r17320, %CPointer* %regQ_134
	; RP(51): Objptr (opt_19)  = Cast (RQ(134): CPointer, Objptr (opt_19))
	%r17323 = load %CPointer, %CPointer* %regQ_134
	%r17324 = bitcast %CPointer %r17323 to %Objptr
	store %Objptr %r17324, %Objptr* %regP_51
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17325 = load %Pointer, %Pointer* %frontier
	%r17327 = ptrtoint %Pointer %r17325 to %uintptr_t
	%r17328 = add %uintptr_t %r17327, 24
	%r17326 = inttoptr %uintptr_t %r17328 to %Pointer
	store %Pointer %r17326, %Pointer* %frontier
	; OW32 (RP(51): Objptr (opt_19), 0): Word32  = 0x1C
	%r17329 = load %Objptr, %Objptr* %regP_51
	%r17330 = getelementptr inbounds i8, %Objptr %r17329, i32 0
	%r17331 = bitcast %Objptr %r17330 to %Word32*
	store %Word32 28, %Word32* %r17331
	; OP (RP(51): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 73, isRoot = true, ty = Objptr (opt_3)}
	%r17332 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 73
	%r17333 = load %Objptr, %Objptr* %r17332
	%r17334 = load %Objptr, %Objptr* %regP_51
	%r17335 = getelementptr inbounds i8, %Objptr %r17334, i32 8
	%r17336 = bitcast %Objptr %r17335 to %Objptr*
	store %Objptr %r17333, %Objptr* %r17336
	; CW64 (<Frontier>)  = 0x27
	%r17337 = load %Pointer, %Pointer* %frontier
	%r17338 = bitcast %Pointer %r17337 to %Word64*
	store %Word64 39, %Word64* %r17338
	; RQ(133): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17339 = load %Pointer, %Pointer* %frontier
	%r17341 = ptrtoint %Pointer %r17339 to %uintptr_t
	%r17342 = add %uintptr_t %r17341, 8
	%r17340 = inttoptr %uintptr_t %r17342 to %Pointer
	store %CPointer %r17340, %CPointer* %regQ_133
	; RP(52): Objptr (opt_19)  = Cast (RQ(133): CPointer, Objptr (opt_19))
	%r17343 = load %CPointer, %CPointer* %regQ_133
	%r17344 = bitcast %CPointer %r17343 to %Objptr
	store %Objptr %r17344, %Objptr* %regP_52
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17345 = load %Pointer, %Pointer* %frontier
	%r17347 = ptrtoint %Pointer %r17345 to %uintptr_t
	%r17348 = add %uintptr_t %r17347, 24
	%r17346 = inttoptr %uintptr_t %r17348 to %Pointer
	store %Pointer %r17346, %Pointer* %frontier
	; OW32 (RP(52): Objptr (opt_19), 0): Word32  = 0x3F
	%r17349 = load %Objptr, %Objptr* %regP_52
	%r17350 = getelementptr inbounds i8, %Objptr %r17349, i32 0
	%r17351 = bitcast %Objptr %r17350 to %Word32*
	store %Word32 63, %Word32* %r17351
	; OP (RP(52): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 74, isRoot = true, ty = Objptr (opt_3)}
	%r17352 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 74
	%r17353 = load %Objptr, %Objptr* %r17352
	%r17354 = load %Objptr, %Objptr* %regP_52
	%r17355 = getelementptr inbounds i8, %Objptr %r17354, i32 8
	%r17356 = bitcast %Objptr %r17355 to %Objptr*
	store %Objptr %r17353, %Objptr* %r17356
	; CW64 (<Frontier>)  = 0x27
	%r17357 = load %Pointer, %Pointer* %frontier
	%r17358 = bitcast %Pointer %r17357 to %Word64*
	store %Word64 39, %Word64* %r17358
	; RQ(132): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17359 = load %Pointer, %Pointer* %frontier
	%r17361 = ptrtoint %Pointer %r17359 to %uintptr_t
	%r17362 = add %uintptr_t %r17361, 8
	%r17360 = inttoptr %uintptr_t %r17362 to %Pointer
	store %CPointer %r17360, %CPointer* %regQ_132
	; RP(53): Objptr (opt_19)  = Cast (RQ(132): CPointer, Objptr (opt_19))
	%r17363 = load %CPointer, %CPointer* %regQ_132
	%r17364 = bitcast %CPointer %r17363 to %Objptr
	store %Objptr %r17364, %Objptr* %regP_53
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17365 = load %Pointer, %Pointer* %frontier
	%r17367 = ptrtoint %Pointer %r17365 to %uintptr_t
	%r17368 = add %uintptr_t %r17367, 24
	%r17366 = inttoptr %uintptr_t %r17368 to %Pointer
	store %Pointer %r17366, %Pointer* %frontier
	; OW32 (RP(53): Objptr (opt_19), 0): Word32  = 0x3C
	%r17369 = load %Objptr, %Objptr* %regP_53
	%r17370 = getelementptr inbounds i8, %Objptr %r17369, i32 0
	%r17371 = bitcast %Objptr %r17370 to %Word32*
	store %Word32 60, %Word32* %r17371
	; OP (RP(53): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 75, isRoot = true, ty = Objptr (opt_3)}
	%r17372 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 75
	%r17373 = load %Objptr, %Objptr* %r17372
	%r17374 = load %Objptr, %Objptr* %regP_53
	%r17375 = getelementptr inbounds i8, %Objptr %r17374, i32 8
	%r17376 = bitcast %Objptr %r17375 to %Objptr*
	store %Objptr %r17373, %Objptr* %r17376
	; CW64 (<Frontier>)  = 0x27
	%r17377 = load %Pointer, %Pointer* %frontier
	%r17378 = bitcast %Pointer %r17377 to %Word64*
	store %Word64 39, %Word64* %r17378
	; RQ(131): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17379 = load %Pointer, %Pointer* %frontier
	%r17381 = ptrtoint %Pointer %r17379 to %uintptr_t
	%r17382 = add %uintptr_t %r17381, 8
	%r17380 = inttoptr %uintptr_t %r17382 to %Pointer
	store %CPointer %r17380, %CPointer* %regQ_131
	; RP(54): Objptr (opt_19)  = Cast (RQ(131): CPointer, Objptr (opt_19))
	%r17383 = load %CPointer, %CPointer* %regQ_131
	%r17384 = bitcast %CPointer %r17383 to %Objptr
	store %Objptr %r17384, %Objptr* %regP_54
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17385 = load %Pointer, %Pointer* %frontier
	%r17387 = ptrtoint %Pointer %r17385 to %uintptr_t
	%r17388 = add %uintptr_t %r17387, 24
	%r17386 = inttoptr %uintptr_t %r17388 to %Pointer
	store %Pointer %r17386, %Pointer* %frontier
	; OW32 (RP(54): Objptr (opt_19), 0): Word32  = 0x26
	%r17389 = load %Objptr, %Objptr* %regP_54
	%r17390 = getelementptr inbounds i8, %Objptr %r17389, i32 0
	%r17391 = bitcast %Objptr %r17390 to %Word32*
	store %Word32 38, %Word32* %r17391
	; OP (RP(54): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 76, isRoot = true, ty = Objptr (opt_3)}
	%r17392 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 76
	%r17393 = load %Objptr, %Objptr* %r17392
	%r17394 = load %Objptr, %Objptr* %regP_54
	%r17395 = getelementptr inbounds i8, %Objptr %r17394, i32 8
	%r17396 = bitcast %Objptr %r17395 to %Objptr*
	store %Objptr %r17393, %Objptr* %r17396
	; CW64 (<Frontier>)  = 0x27
	%r17397 = load %Pointer, %Pointer* %frontier
	%r17398 = bitcast %Pointer %r17397 to %Word64*
	store %Word64 39, %Word64* %r17398
	; RQ(130): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17399 = load %Pointer, %Pointer* %frontier
	%r17401 = ptrtoint %Pointer %r17399 to %uintptr_t
	%r17402 = add %uintptr_t %r17401, 8
	%r17400 = inttoptr %uintptr_t %r17402 to %Pointer
	store %CPointer %r17400, %CPointer* %regQ_130
	; RP(55): Objptr (opt_19)  = Cast (RQ(130): CPointer, Objptr (opt_19))
	%r17403 = load %CPointer, %CPointer* %regQ_130
	%r17404 = bitcast %CPointer %r17403 to %Objptr
	store %Objptr %r17404, %Objptr* %regP_55
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17405 = load %Pointer, %Pointer* %frontier
	%r17407 = ptrtoint %Pointer %r17405 to %uintptr_t
	%r17408 = add %uintptr_t %r17407, 24
	%r17406 = inttoptr %uintptr_t %r17408 to %Pointer
	store %Pointer %r17406, %Pointer* %frontier
	; OW32 (RP(55): Objptr (opt_19), 0): Word32  = 0x6B
	%r17409 = load %Objptr, %Objptr* %regP_55
	%r17410 = getelementptr inbounds i8, %Objptr %r17409, i32 0
	%r17411 = bitcast %Objptr %r17410 to %Word32*
	store %Word32 107, %Word32* %r17411
	; OP (RP(55): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 77, isRoot = true, ty = Objptr (opt_3)}
	%r17412 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 77
	%r17413 = load %Objptr, %Objptr* %r17412
	%r17414 = load %Objptr, %Objptr* %regP_55
	%r17415 = getelementptr inbounds i8, %Objptr %r17414, i32 8
	%r17416 = bitcast %Objptr %r17415 to %Objptr*
	store %Objptr %r17413, %Objptr* %r17416
	; CW64 (<Frontier>)  = 0x27
	%r17417 = load %Pointer, %Pointer* %frontier
	%r17418 = bitcast %Pointer %r17417 to %Word64*
	store %Word64 39, %Word64* %r17418
	; RQ(129): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17419 = load %Pointer, %Pointer* %frontier
	%r17421 = ptrtoint %Pointer %r17419 to %uintptr_t
	%r17422 = add %uintptr_t %r17421, 8
	%r17420 = inttoptr %uintptr_t %r17422 to %Pointer
	store %CPointer %r17420, %CPointer* %regQ_129
	; RP(56): Objptr (opt_19)  = Cast (RQ(129): CPointer, Objptr (opt_19))
	%r17423 = load %CPointer, %CPointer* %regQ_129
	%r17424 = bitcast %CPointer %r17423 to %Objptr
	store %Objptr %r17424, %Objptr* %regP_56
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17425 = load %Pointer, %Pointer* %frontier
	%r17427 = ptrtoint %Pointer %r17425 to %uintptr_t
	%r17428 = add %uintptr_t %r17427, 24
	%r17426 = inttoptr %uintptr_t %r17428 to %Pointer
	store %Pointer %r17426, %Pointer* %frontier
	; OW32 (RP(56): Objptr (opt_19), 0): Word32  = 0x14
	%r17429 = load %Objptr, %Objptr* %regP_56
	%r17430 = getelementptr inbounds i8, %Objptr %r17429, i32 0
	%r17431 = bitcast %Objptr %r17430 to %Word32*
	store %Word32 20, %Word32* %r17431
	; OP (RP(56): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 78, isRoot = true, ty = Objptr (opt_3)}
	%r17432 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 78
	%r17433 = load %Objptr, %Objptr* %r17432
	%r17434 = load %Objptr, %Objptr* %regP_56
	%r17435 = getelementptr inbounds i8, %Objptr %r17434, i32 8
	%r17436 = bitcast %Objptr %r17435 to %Objptr*
	store %Objptr %r17433, %Objptr* %r17436
	; CW64 (<Frontier>)  = 0x27
	%r17437 = load %Pointer, %Pointer* %frontier
	%r17438 = bitcast %Pointer %r17437 to %Word64*
	store %Word64 39, %Word64* %r17438
	; RQ(128): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17439 = load %Pointer, %Pointer* %frontier
	%r17441 = ptrtoint %Pointer %r17439 to %uintptr_t
	%r17442 = add %uintptr_t %r17441, 8
	%r17440 = inttoptr %uintptr_t %r17442 to %Pointer
	store %CPointer %r17440, %CPointer* %regQ_128
	; RP(57): Objptr (opt_19)  = Cast (RQ(128): CPointer, Objptr (opt_19))
	%r17443 = load %CPointer, %CPointer* %regQ_128
	%r17444 = bitcast %CPointer %r17443 to %Objptr
	store %Objptr %r17444, %Objptr* %regP_57
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17445 = load %Pointer, %Pointer* %frontier
	%r17447 = ptrtoint %Pointer %r17445 to %uintptr_t
	%r17448 = add %uintptr_t %r17447, 24
	%r17446 = inttoptr %uintptr_t %r17448 to %Pointer
	store %Pointer %r17446, %Pointer* %frontier
	; OW32 (RP(57): Objptr (opt_19), 0): Word32  = 0x27
	%r17449 = load %Objptr, %Objptr* %regP_57
	%r17450 = getelementptr inbounds i8, %Objptr %r17449, i32 0
	%r17451 = bitcast %Objptr %r17450 to %Word32*
	store %Word32 39, %Word32* %r17451
	; OP (RP(57): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 79, isRoot = true, ty = Objptr (opt_3)}
	%r17452 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 79
	%r17453 = load %Objptr, %Objptr* %r17452
	%r17454 = load %Objptr, %Objptr* %regP_57
	%r17455 = getelementptr inbounds i8, %Objptr %r17454, i32 8
	%r17456 = bitcast %Objptr %r17455 to %Objptr*
	store %Objptr %r17453, %Objptr* %r17456
	; CW64 (<Frontier>)  = 0x27
	%r17457 = load %Pointer, %Pointer* %frontier
	%r17458 = bitcast %Pointer %r17457 to %Word64*
	store %Word64 39, %Word64* %r17458
	; RQ(127): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17459 = load %Pointer, %Pointer* %frontier
	%r17461 = ptrtoint %Pointer %r17459 to %uintptr_t
	%r17462 = add %uintptr_t %r17461, 8
	%r17460 = inttoptr %uintptr_t %r17462 to %Pointer
	store %CPointer %r17460, %CPointer* %regQ_127
	; RP(58): Objptr (opt_19)  = Cast (RQ(127): CPointer, Objptr (opt_19))
	%r17463 = load %CPointer, %CPointer* %regQ_127
	%r17464 = bitcast %CPointer %r17463 to %Objptr
	store %Objptr %r17464, %Objptr* %regP_58
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17465 = load %Pointer, %Pointer* %frontier
	%r17467 = ptrtoint %Pointer %r17465 to %uintptr_t
	%r17468 = add %uintptr_t %r17467, 24
	%r17466 = inttoptr %uintptr_t %r17468 to %Pointer
	store %Pointer %r17466, %Pointer* %frontier
	; OW32 (RP(58): Objptr (opt_19), 0): Word32  = 0x58
	%r17469 = load %Objptr, %Objptr* %regP_58
	%r17470 = getelementptr inbounds i8, %Objptr %r17469, i32 0
	%r17471 = bitcast %Objptr %r17470 to %Word32*
	store %Word32 88, %Word32* %r17471
	; OP (RP(58): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 80, isRoot = true, ty = Objptr (opt_3)}
	%r17472 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 80
	%r17473 = load %Objptr, %Objptr* %r17472
	%r17474 = load %Objptr, %Objptr* %regP_58
	%r17475 = getelementptr inbounds i8, %Objptr %r17474, i32 8
	%r17476 = bitcast %Objptr %r17475 to %Objptr*
	store %Objptr %r17473, %Objptr* %r17476
	; CW64 (<Frontier>)  = 0x27
	%r17477 = load %Pointer, %Pointer* %frontier
	%r17478 = bitcast %Pointer %r17477 to %Word64*
	store %Word64 39, %Word64* %r17478
	; RQ(126): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17479 = load %Pointer, %Pointer* %frontier
	%r17481 = ptrtoint %Pointer %r17479 to %uintptr_t
	%r17482 = add %uintptr_t %r17481, 8
	%r17480 = inttoptr %uintptr_t %r17482 to %Pointer
	store %CPointer %r17480, %CPointer* %regQ_126
	; RP(59): Objptr (opt_19)  = Cast (RQ(126): CPointer, Objptr (opt_19))
	%r17483 = load %CPointer, %CPointer* %regQ_126
	%r17484 = bitcast %CPointer %r17483 to %Objptr
	store %Objptr %r17484, %Objptr* %regP_59
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17485 = load %Pointer, %Pointer* %frontier
	%r17487 = ptrtoint %Pointer %r17485 to %uintptr_t
	%r17488 = add %uintptr_t %r17487, 24
	%r17486 = inttoptr %uintptr_t %r17488 to %Pointer
	store %Pointer %r17486, %Pointer* %frontier
	; OW32 (RP(59): Objptr (opt_19), 0): Word32  = 0x5F
	%r17489 = load %Objptr, %Objptr* %regP_59
	%r17490 = getelementptr inbounds i8, %Objptr %r17489, i32 0
	%r17491 = bitcast %Objptr %r17490 to %Word32*
	store %Word32 95, %Word32* %r17491
	; OP (RP(59): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 81, isRoot = true, ty = Objptr (opt_3)}
	%r17492 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 81
	%r17493 = load %Objptr, %Objptr* %r17492
	%r17494 = load %Objptr, %Objptr* %regP_59
	%r17495 = getelementptr inbounds i8, %Objptr %r17494, i32 8
	%r17496 = bitcast %Objptr %r17495 to %Objptr*
	store %Objptr %r17493, %Objptr* %r17496
	; CW64 (<Frontier>)  = 0x27
	%r17497 = load %Pointer, %Pointer* %frontier
	%r17498 = bitcast %Pointer %r17497 to %Word64*
	store %Word64 39, %Word64* %r17498
	; RQ(125): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17499 = load %Pointer, %Pointer* %frontier
	%r17501 = ptrtoint %Pointer %r17499 to %uintptr_t
	%r17502 = add %uintptr_t %r17501, 8
	%r17500 = inttoptr %uintptr_t %r17502 to %Pointer
	store %CPointer %r17500, %CPointer* %regQ_125
	; RP(60): Objptr (opt_19)  = Cast (RQ(125): CPointer, Objptr (opt_19))
	%r17503 = load %CPointer, %CPointer* %regQ_125
	%r17504 = bitcast %CPointer %r17503 to %Objptr
	store %Objptr %r17504, %Objptr* %regP_60
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17505 = load %Pointer, %Pointer* %frontier
	%r17507 = ptrtoint %Pointer %r17505 to %uintptr_t
	%r17508 = add %uintptr_t %r17507, 24
	%r17506 = inttoptr %uintptr_t %r17508 to %Pointer
	store %Pointer %r17506, %Pointer* %frontier
	; OW32 (RP(60): Objptr (opt_19), 0): Word32  = 0x19
	%r17509 = load %Objptr, %Objptr* %regP_60
	%r17510 = getelementptr inbounds i8, %Objptr %r17509, i32 0
	%r17511 = bitcast %Objptr %r17510 to %Word32*
	store %Word32 25, %Word32* %r17511
	; OP (RP(60): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 82, isRoot = true, ty = Objptr (opt_3)}
	%r17512 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 82
	%r17513 = load %Objptr, %Objptr* %r17512
	%r17514 = load %Objptr, %Objptr* %regP_60
	%r17515 = getelementptr inbounds i8, %Objptr %r17514, i32 8
	%r17516 = bitcast %Objptr %r17515 to %Objptr*
	store %Objptr %r17513, %Objptr* %r17516
	; CW64 (<Frontier>)  = 0x27
	%r17517 = load %Pointer, %Pointer* %frontier
	%r17518 = bitcast %Pointer %r17517 to %Word64*
	store %Word64 39, %Word64* %r17518
	; RQ(124): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17519 = load %Pointer, %Pointer* %frontier
	%r17521 = ptrtoint %Pointer %r17519 to %uintptr_t
	%r17522 = add %uintptr_t %r17521, 8
	%r17520 = inttoptr %uintptr_t %r17522 to %Pointer
	store %CPointer %r17520, %CPointer* %regQ_124
	; RP(61): Objptr (opt_19)  = Cast (RQ(124): CPointer, Objptr (opt_19))
	%r17523 = load %CPointer, %CPointer* %regQ_124
	%r17524 = bitcast %CPointer %r17523 to %Objptr
	store %Objptr %r17524, %Objptr* %regP_61
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17525 = load %Pointer, %Pointer* %frontier
	%r17527 = ptrtoint %Pointer %r17525 to %uintptr_t
	%r17528 = add %uintptr_t %r17527, 24
	%r17526 = inttoptr %uintptr_t %r17528 to %Pointer
	store %Pointer %r17526, %Pointer* %frontier
	; OW32 (RP(61): Objptr (opt_19), 0): Word32  = 0x6
	%r17529 = load %Objptr, %Objptr* %regP_61
	%r17530 = getelementptr inbounds i8, %Objptr %r17529, i32 0
	%r17531 = bitcast %Objptr %r17530 to %Word32*
	store %Word32 6, %Word32* %r17531
	; OP (RP(61): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 83, isRoot = true, ty = Objptr (opt_3)}
	%r17532 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 83
	%r17533 = load %Objptr, %Objptr* %r17532
	%r17534 = load %Objptr, %Objptr* %regP_61
	%r17535 = getelementptr inbounds i8, %Objptr %r17534, i32 8
	%r17536 = bitcast %Objptr %r17535 to %Objptr*
	store %Objptr %r17533, %Objptr* %r17536
	; CW64 (<Frontier>)  = 0x27
	%r17537 = load %Pointer, %Pointer* %frontier
	%r17538 = bitcast %Pointer %r17537 to %Word64*
	store %Word64 39, %Word64* %r17538
	; RQ(123): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17539 = load %Pointer, %Pointer* %frontier
	%r17541 = ptrtoint %Pointer %r17539 to %uintptr_t
	%r17542 = add %uintptr_t %r17541, 8
	%r17540 = inttoptr %uintptr_t %r17542 to %Pointer
	store %CPointer %r17540, %CPointer* %regQ_123
	; RP(62): Objptr (opt_19)  = Cast (RQ(123): CPointer, Objptr (opt_19))
	%r17543 = load %CPointer, %CPointer* %regQ_123
	%r17544 = bitcast %CPointer %r17543 to %Objptr
	store %Objptr %r17544, %Objptr* %regP_62
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17545 = load %Pointer, %Pointer* %frontier
	%r17547 = ptrtoint %Pointer %r17545 to %uintptr_t
	%r17548 = add %uintptr_t %r17547, 24
	%r17546 = inttoptr %uintptr_t %r17548 to %Pointer
	store %Pointer %r17546, %Pointer* %frontier
	; OW32 (RP(62): Objptr (opt_19), 0): Word32  = 0x5F
	%r17549 = load %Objptr, %Objptr* %regP_62
	%r17550 = getelementptr inbounds i8, %Objptr %r17549, i32 0
	%r17551 = bitcast %Objptr %r17550 to %Word32*
	store %Word32 95, %Word32* %r17551
	; OP (RP(62): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 84, isRoot = true, ty = Objptr (opt_3)}
	%r17552 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 84
	%r17553 = load %Objptr, %Objptr* %r17552
	%r17554 = load %Objptr, %Objptr* %regP_62
	%r17555 = getelementptr inbounds i8, %Objptr %r17554, i32 8
	%r17556 = bitcast %Objptr %r17555 to %Objptr*
	store %Objptr %r17553, %Objptr* %r17556
	; CW64 (<Frontier>)  = 0x27
	%r17557 = load %Pointer, %Pointer* %frontier
	%r17558 = bitcast %Pointer %r17557 to %Word64*
	store %Word64 39, %Word64* %r17558
	; RQ(122): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17559 = load %Pointer, %Pointer* %frontier
	%r17561 = ptrtoint %Pointer %r17559 to %uintptr_t
	%r17562 = add %uintptr_t %r17561, 8
	%r17560 = inttoptr %uintptr_t %r17562 to %Pointer
	store %CPointer %r17560, %CPointer* %regQ_122
	; RP(63): Objptr (opt_19)  = Cast (RQ(122): CPointer, Objptr (opt_19))
	%r17563 = load %CPointer, %CPointer* %regQ_122
	%r17564 = bitcast %CPointer %r17563 to %Objptr
	store %Objptr %r17564, %Objptr* %regP_63
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17565 = load %Pointer, %Pointer* %frontier
	%r17567 = ptrtoint %Pointer %r17565 to %uintptr_t
	%r17568 = add %uintptr_t %r17567, 24
	%r17566 = inttoptr %uintptr_t %r17568 to %Pointer
	store %Pointer %r17566, %Pointer* %frontier
	; OW32 (RP(63): Objptr (opt_19), 0): Word32  = 0x4B
	%r17569 = load %Objptr, %Objptr* %regP_63
	%r17570 = getelementptr inbounds i8, %Objptr %r17569, i32 0
	%r17571 = bitcast %Objptr %r17570 to %Word32*
	store %Word32 75, %Word32* %r17571
	; OP (RP(63): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 85, isRoot = true, ty = Objptr (opt_3)}
	%r17572 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 85
	%r17573 = load %Objptr, %Objptr* %r17572
	%r17574 = load %Objptr, %Objptr* %regP_63
	%r17575 = getelementptr inbounds i8, %Objptr %r17574, i32 8
	%r17576 = bitcast %Objptr %r17575 to %Objptr*
	store %Objptr %r17573, %Objptr* %r17576
	; CW64 (<Frontier>)  = 0x27
	%r17577 = load %Pointer, %Pointer* %frontier
	%r17578 = bitcast %Pointer %r17577 to %Word64*
	store %Word64 39, %Word64* %r17578
	; RQ(121): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17579 = load %Pointer, %Pointer* %frontier
	%r17581 = ptrtoint %Pointer %r17579 to %uintptr_t
	%r17582 = add %uintptr_t %r17581, 8
	%r17580 = inttoptr %uintptr_t %r17582 to %Pointer
	store %CPointer %r17580, %CPointer* %regQ_121
	; RP(64): Objptr (opt_19)  = Cast (RQ(121): CPointer, Objptr (opt_19))
	%r17583 = load %CPointer, %CPointer* %regQ_121
	%r17584 = bitcast %CPointer %r17583 to %Objptr
	store %Objptr %r17584, %Objptr* %regP_64
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17585 = load %Pointer, %Pointer* %frontier
	%r17587 = ptrtoint %Pointer %r17585 to %uintptr_t
	%r17588 = add %uintptr_t %r17587, 24
	%r17586 = inttoptr %uintptr_t %r17588 to %Pointer
	store %Pointer %r17586, %Pointer* %frontier
	; OW32 (RP(64): Objptr (opt_19), 0): Word32  = 0x1
	%r17589 = load %Objptr, %Objptr* %regP_64
	%r17590 = getelementptr inbounds i8, %Objptr %r17589, i32 0
	%r17591 = bitcast %Objptr %r17590 to %Word32*
	store %Word32 1, %Word32* %r17591
	; OP (RP(64): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 86, isRoot = true, ty = Objptr (opt_3)}
	%r17592 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 86
	%r17593 = load %Objptr, %Objptr* %r17592
	%r17594 = load %Objptr, %Objptr* %regP_64
	%r17595 = getelementptr inbounds i8, %Objptr %r17594, i32 8
	%r17596 = bitcast %Objptr %r17595 to %Objptr*
	store %Objptr %r17593, %Objptr* %r17596
	; CW64 (<Frontier>)  = 0x27
	%r17597 = load %Pointer, %Pointer* %frontier
	%r17598 = bitcast %Pointer %r17597 to %Word64*
	store %Word64 39, %Word64* %r17598
	; RQ(120): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17599 = load %Pointer, %Pointer* %frontier
	%r17601 = ptrtoint %Pointer %r17599 to %uintptr_t
	%r17602 = add %uintptr_t %r17601, 8
	%r17600 = inttoptr %uintptr_t %r17602 to %Pointer
	store %CPointer %r17600, %CPointer* %regQ_120
	; RP(65): Objptr (opt_19)  = Cast (RQ(120): CPointer, Objptr (opt_19))
	%r17603 = load %CPointer, %CPointer* %regQ_120
	%r17604 = bitcast %CPointer %r17603 to %Objptr
	store %Objptr %r17604, %Objptr* %regP_65
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17605 = load %Pointer, %Pointer* %frontier
	%r17607 = ptrtoint %Pointer %r17605 to %uintptr_t
	%r17608 = add %uintptr_t %r17607, 24
	%r17606 = inttoptr %uintptr_t %r17608 to %Pointer
	store %Pointer %r17606, %Pointer* %frontier
	; OW32 (RP(65): Objptr (opt_19), 0): Word32  = 0x20
	%r17609 = load %Objptr, %Objptr* %regP_65
	%r17610 = getelementptr inbounds i8, %Objptr %r17609, i32 0
	%r17611 = bitcast %Objptr %r17610 to %Word32*
	store %Word32 32, %Word32* %r17611
	; OP (RP(65): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 87, isRoot = true, ty = Objptr (opt_3)}
	%r17612 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 87
	%r17613 = load %Objptr, %Objptr* %r17612
	%r17614 = load %Objptr, %Objptr* %regP_65
	%r17615 = getelementptr inbounds i8, %Objptr %r17614, i32 8
	%r17616 = bitcast %Objptr %r17615 to %Objptr*
	store %Objptr %r17613, %Objptr* %r17616
	; CW64 (<Frontier>)  = 0x27
	%r17617 = load %Pointer, %Pointer* %frontier
	%r17618 = bitcast %Pointer %r17617 to %Word64*
	store %Word64 39, %Word64* %r17618
	; RQ(119): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17619 = load %Pointer, %Pointer* %frontier
	%r17621 = ptrtoint %Pointer %r17619 to %uintptr_t
	%r17622 = add %uintptr_t %r17621, 8
	%r17620 = inttoptr %uintptr_t %r17622 to %Pointer
	store %CPointer %r17620, %CPointer* %regQ_119
	; RP(66): Objptr (opt_19)  = Cast (RQ(119): CPointer, Objptr (opt_19))
	%r17623 = load %CPointer, %CPointer* %regQ_119
	%r17624 = bitcast %CPointer %r17623 to %Objptr
	store %Objptr %r17624, %Objptr* %regP_66
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17625 = load %Pointer, %Pointer* %frontier
	%r17627 = ptrtoint %Pointer %r17625 to %uintptr_t
	%r17628 = add %uintptr_t %r17627, 24
	%r17626 = inttoptr %uintptr_t %r17628 to %Pointer
	store %Pointer %r17626, %Pointer* %frontier
	; OW32 (RP(66): Objptr (opt_19), 0): Word32  = 0x47
	%r17629 = load %Objptr, %Objptr* %regP_66
	%r17630 = getelementptr inbounds i8, %Objptr %r17629, i32 0
	%r17631 = bitcast %Objptr %r17630 to %Word32*
	store %Word32 71, %Word32* %r17631
	; OP (RP(66): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 88, isRoot = true, ty = Objptr (opt_3)}
	%r17632 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 88
	%r17633 = load %Objptr, %Objptr* %r17632
	%r17634 = load %Objptr, %Objptr* %regP_66
	%r17635 = getelementptr inbounds i8, %Objptr %r17634, i32 8
	%r17636 = bitcast %Objptr %r17635 to %Objptr*
	store %Objptr %r17633, %Objptr* %r17636
	; CW64 (<Frontier>)  = 0x27
	%r17637 = load %Pointer, %Pointer* %frontier
	%r17638 = bitcast %Pointer %r17637 to %Word64*
	store %Word64 39, %Word64* %r17638
	; RQ(118): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17639 = load %Pointer, %Pointer* %frontier
	%r17641 = ptrtoint %Pointer %r17639 to %uintptr_t
	%r17642 = add %uintptr_t %r17641, 8
	%r17640 = inttoptr %uintptr_t %r17642 to %Pointer
	store %CPointer %r17640, %CPointer* %regQ_118
	; RP(67): Objptr (opt_19)  = Cast (RQ(118): CPointer, Objptr (opt_19))
	%r17643 = load %CPointer, %CPointer* %regQ_118
	%r17644 = bitcast %CPointer %r17643 to %Objptr
	store %Objptr %r17644, %Objptr* %regP_67
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17645 = load %Pointer, %Pointer* %frontier
	%r17647 = ptrtoint %Pointer %r17645 to %uintptr_t
	%r17648 = add %uintptr_t %r17647, 24
	%r17646 = inttoptr %uintptr_t %r17648 to %Pointer
	store %Pointer %r17646, %Pointer* %frontier
	; OW32 (RP(67): Objptr (opt_19), 0): Word32  = 0x5D
	%r17649 = load %Objptr, %Objptr* %regP_67
	%r17650 = getelementptr inbounds i8, %Objptr %r17649, i32 0
	%r17651 = bitcast %Objptr %r17650 to %Word32*
	store %Word32 93, %Word32* %r17651
	; OP (RP(67): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 89, isRoot = true, ty = Objptr (opt_3)}
	%r17652 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 89
	%r17653 = load %Objptr, %Objptr* %r17652
	%r17654 = load %Objptr, %Objptr* %regP_67
	%r17655 = getelementptr inbounds i8, %Objptr %r17654, i32 8
	%r17656 = bitcast %Objptr %r17655 to %Objptr*
	store %Objptr %r17653, %Objptr* %r17656
	; CW64 (<Frontier>)  = 0x27
	%r17657 = load %Pointer, %Pointer* %frontier
	%r17658 = bitcast %Pointer %r17657 to %Word64*
	store %Word64 39, %Word64* %r17658
	; RQ(117): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17659 = load %Pointer, %Pointer* %frontier
	%r17661 = ptrtoint %Pointer %r17659 to %uintptr_t
	%r17662 = add %uintptr_t %r17661, 8
	%r17660 = inttoptr %uintptr_t %r17662 to %Pointer
	store %CPointer %r17660, %CPointer* %regQ_117
	; RP(68): Objptr (opt_19)  = Cast (RQ(117): CPointer, Objptr (opt_19))
	%r17663 = load %CPointer, %CPointer* %regQ_117
	%r17664 = bitcast %CPointer %r17663 to %Objptr
	store %Objptr %r17664, %Objptr* %regP_68
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17665 = load %Pointer, %Pointer* %frontier
	%r17667 = ptrtoint %Pointer %r17665 to %uintptr_t
	%r17668 = add %uintptr_t %r17667, 24
	%r17666 = inttoptr %uintptr_t %r17668 to %Pointer
	store %Pointer %r17666, %Pointer* %frontier
	; OW32 (RP(68): Objptr (opt_19), 0): Word32  = 0x5B
	%r17669 = load %Objptr, %Objptr* %regP_68
	%r17670 = getelementptr inbounds i8, %Objptr %r17669, i32 0
	%r17671 = bitcast %Objptr %r17670 to %Word32*
	store %Word32 91, %Word32* %r17671
	; OP (RP(68): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 90, isRoot = true, ty = Objptr (opt_3)}
	%r17672 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 90
	%r17673 = load %Objptr, %Objptr* %r17672
	%r17674 = load %Objptr, %Objptr* %regP_68
	%r17675 = getelementptr inbounds i8, %Objptr %r17674, i32 8
	%r17676 = bitcast %Objptr %r17675 to %Objptr*
	store %Objptr %r17673, %Objptr* %r17676
	; CW64 (<Frontier>)  = 0x27
	%r17677 = load %Pointer, %Pointer* %frontier
	%r17678 = bitcast %Pointer %r17677 to %Word64*
	store %Word64 39, %Word64* %r17678
	; RQ(116): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17679 = load %Pointer, %Pointer* %frontier
	%r17681 = ptrtoint %Pointer %r17679 to %uintptr_t
	%r17682 = add %uintptr_t %r17681, 8
	%r17680 = inttoptr %uintptr_t %r17682 to %Pointer
	store %CPointer %r17680, %CPointer* %regQ_116
	; RP(69): Objptr (opt_19)  = Cast (RQ(116): CPointer, Objptr (opt_19))
	%r17683 = load %CPointer, %CPointer* %regQ_116
	%r17684 = bitcast %CPointer %r17683 to %Objptr
	store %Objptr %r17684, %Objptr* %regP_69
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17685 = load %Pointer, %Pointer* %frontier
	%r17687 = ptrtoint %Pointer %r17685 to %uintptr_t
	%r17688 = add %uintptr_t %r17687, 24
	%r17686 = inttoptr %uintptr_t %r17688 to %Pointer
	store %Pointer %r17686, %Pointer* %frontier
	; OW32 (RP(69): Objptr (opt_19), 0): Word32  = 0x22
	%r17689 = load %Objptr, %Objptr* %regP_69
	%r17690 = getelementptr inbounds i8, %Objptr %r17689, i32 0
	%r17691 = bitcast %Objptr %r17690 to %Word32*
	store %Word32 34, %Word32* %r17691
	; OP (RP(69): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 91, isRoot = true, ty = Objptr (opt_3)}
	%r17692 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 91
	%r17693 = load %Objptr, %Objptr* %r17692
	%r17694 = load %Objptr, %Objptr* %regP_69
	%r17695 = getelementptr inbounds i8, %Objptr %r17694, i32 8
	%r17696 = bitcast %Objptr %r17695 to %Objptr*
	store %Objptr %r17693, %Objptr* %r17696
	; CW64 (<Frontier>)  = 0x27
	%r17697 = load %Pointer, %Pointer* %frontier
	%r17698 = bitcast %Pointer %r17697 to %Word64*
	store %Word64 39, %Word64* %r17698
	; RQ(115): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17699 = load %Pointer, %Pointer* %frontier
	%r17701 = ptrtoint %Pointer %r17699 to %uintptr_t
	%r17702 = add %uintptr_t %r17701, 8
	%r17700 = inttoptr %uintptr_t %r17702 to %Pointer
	store %CPointer %r17700, %CPointer* %regQ_115
	; RP(70): Objptr (opt_19)  = Cast (RQ(115): CPointer, Objptr (opt_19))
	%r17703 = load %CPointer, %CPointer* %regQ_115
	%r17704 = bitcast %CPointer %r17703 to %Objptr
	store %Objptr %r17704, %Objptr* %regP_70
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17705 = load %Pointer, %Pointer* %frontier
	%r17707 = ptrtoint %Pointer %r17705 to %uintptr_t
	%r17708 = add %uintptr_t %r17707, 24
	%r17706 = inttoptr %uintptr_t %r17708 to %Pointer
	store %Pointer %r17706, %Pointer* %frontier
	; OW32 (RP(70): Objptr (opt_19), 0): Word32  = 0x1E
	%r17709 = load %Objptr, %Objptr* %regP_70
	%r17710 = getelementptr inbounds i8, %Objptr %r17709, i32 0
	%r17711 = bitcast %Objptr %r17710 to %Word32*
	store %Word32 30, %Word32* %r17711
	; OP (RP(70): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 92, isRoot = true, ty = Objptr (opt_3)}
	%r17712 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 92
	%r17713 = load %Objptr, %Objptr* %r17712
	%r17714 = load %Objptr, %Objptr* %regP_70
	%r17715 = getelementptr inbounds i8, %Objptr %r17714, i32 8
	%r17716 = bitcast %Objptr %r17715 to %Objptr*
	store %Objptr %r17713, %Objptr* %r17716
	; CW64 (<Frontier>)  = 0x27
	%r17717 = load %Pointer, %Pointer* %frontier
	%r17718 = bitcast %Pointer %r17717 to %Word64*
	store %Word64 39, %Word64* %r17718
	; RQ(114): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17719 = load %Pointer, %Pointer* %frontier
	%r17721 = ptrtoint %Pointer %r17719 to %uintptr_t
	%r17722 = add %uintptr_t %r17721, 8
	%r17720 = inttoptr %uintptr_t %r17722 to %Pointer
	store %CPointer %r17720, %CPointer* %regQ_114
	; RP(71): Objptr (opt_19)  = Cast (RQ(114): CPointer, Objptr (opt_19))
	%r17723 = load %CPointer, %CPointer* %regQ_114
	%r17724 = bitcast %CPointer %r17723 to %Objptr
	store %Objptr %r17724, %Objptr* %regP_71
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17725 = load %Pointer, %Pointer* %frontier
	%r17727 = ptrtoint %Pointer %r17725 to %uintptr_t
	%r17728 = add %uintptr_t %r17727, 24
	%r17726 = inttoptr %uintptr_t %r17728 to %Pointer
	store %Pointer %r17726, %Pointer* %frontier
	; OW32 (RP(71): Objptr (opt_19), 0): Word32  = 0x1D
	%r17729 = load %Objptr, %Objptr* %regP_71
	%r17730 = getelementptr inbounds i8, %Objptr %r17729, i32 0
	%r17731 = bitcast %Objptr %r17730 to %Word32*
	store %Word32 29, %Word32* %r17731
	; OP (RP(71): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 93, isRoot = true, ty = Objptr (opt_3)}
	%r17732 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 93
	%r17733 = load %Objptr, %Objptr* %r17732
	%r17734 = load %Objptr, %Objptr* %regP_71
	%r17735 = getelementptr inbounds i8, %Objptr %r17734, i32 8
	%r17736 = bitcast %Objptr %r17735 to %Objptr*
	store %Objptr %r17733, %Objptr* %r17736
	; CW64 (<Frontier>)  = 0x27
	%r17737 = load %Pointer, %Pointer* %frontier
	%r17738 = bitcast %Pointer %r17737 to %Word64*
	store %Word64 39, %Word64* %r17738
	; RQ(113): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17739 = load %Pointer, %Pointer* %frontier
	%r17741 = ptrtoint %Pointer %r17739 to %uintptr_t
	%r17742 = add %uintptr_t %r17741, 8
	%r17740 = inttoptr %uintptr_t %r17742 to %Pointer
	store %CPointer %r17740, %CPointer* %regQ_113
	; RP(72): Objptr (opt_19)  = Cast (RQ(113): CPointer, Objptr (opt_19))
	%r17743 = load %CPointer, %CPointer* %regQ_113
	%r17744 = bitcast %CPointer %r17743 to %Objptr
	store %Objptr %r17744, %Objptr* %regP_72
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17745 = load %Pointer, %Pointer* %frontier
	%r17747 = ptrtoint %Pointer %r17745 to %uintptr_t
	%r17748 = add %uintptr_t %r17747, 24
	%r17746 = inttoptr %uintptr_t %r17748 to %Pointer
	store %Pointer %r17746, %Pointer* %frontier
	; OW32 (RP(72): Objptr (opt_19), 0): Word32  = 0x3
	%r17749 = load %Objptr, %Objptr* %regP_72
	%r17750 = getelementptr inbounds i8, %Objptr %r17749, i32 0
	%r17751 = bitcast %Objptr %r17750 to %Word32*
	store %Word32 3, %Word32* %r17751
	; OP (RP(72): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 94, isRoot = true, ty = Objptr (opt_3)}
	%r17752 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 94
	%r17753 = load %Objptr, %Objptr* %r17752
	%r17754 = load %Objptr, %Objptr* %regP_72
	%r17755 = getelementptr inbounds i8, %Objptr %r17754, i32 8
	%r17756 = bitcast %Objptr %r17755 to %Objptr*
	store %Objptr %r17753, %Objptr* %r17756
	; CW64 (<Frontier>)  = 0x27
	%r17757 = load %Pointer, %Pointer* %frontier
	%r17758 = bitcast %Pointer %r17757 to %Word64*
	store %Word64 39, %Word64* %r17758
	; RQ(112): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17759 = load %Pointer, %Pointer* %frontier
	%r17761 = ptrtoint %Pointer %r17759 to %uintptr_t
	%r17762 = add %uintptr_t %r17761, 8
	%r17760 = inttoptr %uintptr_t %r17762 to %Pointer
	store %CPointer %r17760, %CPointer* %regQ_112
	; RP(73): Objptr (opt_19)  = Cast (RQ(112): CPointer, Objptr (opt_19))
	%r17763 = load %CPointer, %CPointer* %regQ_112
	%r17764 = bitcast %CPointer %r17763 to %Objptr
	store %Objptr %r17764, %Objptr* %regP_73
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17765 = load %Pointer, %Pointer* %frontier
	%r17767 = ptrtoint %Pointer %r17765 to %uintptr_t
	%r17768 = add %uintptr_t %r17767, 24
	%r17766 = inttoptr %uintptr_t %r17768 to %Pointer
	store %Pointer %r17766, %Pointer* %frontier
	; OW32 (RP(73): Objptr (opt_19), 0): Word32  = 0x74
	%r17769 = load %Objptr, %Objptr* %regP_73
	%r17770 = getelementptr inbounds i8, %Objptr %r17769, i32 0
	%r17771 = bitcast %Objptr %r17770 to %Word32*
	store %Word32 116, %Word32* %r17771
	; OP (RP(73): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 95, isRoot = true, ty = Objptr (opt_3)}
	%r17772 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 95
	%r17773 = load %Objptr, %Objptr* %r17772
	%r17774 = load %Objptr, %Objptr* %regP_73
	%r17775 = getelementptr inbounds i8, %Objptr %r17774, i32 8
	%r17776 = bitcast %Objptr %r17775 to %Objptr*
	store %Objptr %r17773, %Objptr* %r17776
	; CW64 (<Frontier>)  = 0x27
	%r17777 = load %Pointer, %Pointer* %frontier
	%r17778 = bitcast %Pointer %r17777 to %Word64*
	store %Word64 39, %Word64* %r17778
	; RQ(111): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17779 = load %Pointer, %Pointer* %frontier
	%r17781 = ptrtoint %Pointer %r17779 to %uintptr_t
	%r17782 = add %uintptr_t %r17781, 8
	%r17780 = inttoptr %uintptr_t %r17782 to %Pointer
	store %CPointer %r17780, %CPointer* %regQ_111
	; RP(74): Objptr (opt_19)  = Cast (RQ(111): CPointer, Objptr (opt_19))
	%r17783 = load %CPointer, %CPointer* %regQ_111
	%r17784 = bitcast %CPointer %r17783 to %Objptr
	store %Objptr %r17784, %Objptr* %regP_74
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17785 = load %Pointer, %Pointer* %frontier
	%r17787 = ptrtoint %Pointer %r17785 to %uintptr_t
	%r17788 = add %uintptr_t %r17787, 24
	%r17786 = inttoptr %uintptr_t %r17788 to %Pointer
	store %Pointer %r17786, %Pointer* %frontier
	; OW32 (RP(74): Objptr (opt_19), 0): Word32  = 0x3E
	%r17789 = load %Objptr, %Objptr* %regP_74
	%r17790 = getelementptr inbounds i8, %Objptr %r17789, i32 0
	%r17791 = bitcast %Objptr %r17790 to %Word32*
	store %Word32 62, %Word32* %r17791
	; OP (RP(74): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 96, isRoot = true, ty = Objptr (opt_3)}
	%r17792 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 96
	%r17793 = load %Objptr, %Objptr* %r17792
	%r17794 = load %Objptr, %Objptr* %regP_74
	%r17795 = getelementptr inbounds i8, %Objptr %r17794, i32 8
	%r17796 = bitcast %Objptr %r17795 to %Objptr*
	store %Objptr %r17793, %Objptr* %r17796
	; CW64 (<Frontier>)  = 0x27
	%r17797 = load %Pointer, %Pointer* %frontier
	%r17798 = bitcast %Pointer %r17797 to %Word64*
	store %Word64 39, %Word64* %r17798
	; RQ(110): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17799 = load %Pointer, %Pointer* %frontier
	%r17801 = ptrtoint %Pointer %r17799 to %uintptr_t
	%r17802 = add %uintptr_t %r17801, 8
	%r17800 = inttoptr %uintptr_t %r17802 to %Pointer
	store %CPointer %r17800, %CPointer* %regQ_110
	; RP(75): Objptr (opt_19)  = Cast (RQ(110): CPointer, Objptr (opt_19))
	%r17803 = load %CPointer, %CPointer* %regQ_110
	%r17804 = bitcast %CPointer %r17803 to %Objptr
	store %Objptr %r17804, %Objptr* %regP_75
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17805 = load %Pointer, %Pointer* %frontier
	%r17807 = ptrtoint %Pointer %r17805 to %uintptr_t
	%r17808 = add %uintptr_t %r17807, 24
	%r17806 = inttoptr %uintptr_t %r17808 to %Pointer
	store %Pointer %r17806, %Pointer* %frontier
	; OW32 (RP(75): Objptr (opt_19), 0): Word32  = 0x6E
	%r17809 = load %Objptr, %Objptr* %regP_75
	%r17810 = getelementptr inbounds i8, %Objptr %r17809, i32 0
	%r17811 = bitcast %Objptr %r17810 to %Word32*
	store %Word32 110, %Word32* %r17811
	; OP (RP(75): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 97, isRoot = true, ty = Objptr (opt_3)}
	%r17812 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 97
	%r17813 = load %Objptr, %Objptr* %r17812
	%r17814 = load %Objptr, %Objptr* %regP_75
	%r17815 = getelementptr inbounds i8, %Objptr %r17814, i32 8
	%r17816 = bitcast %Objptr %r17815 to %Objptr*
	store %Objptr %r17813, %Objptr* %r17816
	; CW64 (<Frontier>)  = 0x27
	%r17817 = load %Pointer, %Pointer* %frontier
	%r17818 = bitcast %Pointer %r17817 to %Word64*
	store %Word64 39, %Word64* %r17818
	; RQ(109): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17819 = load %Pointer, %Pointer* %frontier
	%r17821 = ptrtoint %Pointer %r17819 to %uintptr_t
	%r17822 = add %uintptr_t %r17821, 8
	%r17820 = inttoptr %uintptr_t %r17822 to %Pointer
	store %CPointer %r17820, %CPointer* %regQ_109
	; RP(76): Objptr (opt_19)  = Cast (RQ(109): CPointer, Objptr (opt_19))
	%r17823 = load %CPointer, %CPointer* %regQ_109
	%r17824 = bitcast %CPointer %r17823 to %Objptr
	store %Objptr %r17824, %Objptr* %regP_76
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17825 = load %Pointer, %Pointer* %frontier
	%r17827 = ptrtoint %Pointer %r17825 to %uintptr_t
	%r17828 = add %uintptr_t %r17827, 24
	%r17826 = inttoptr %uintptr_t %r17828 to %Pointer
	store %Pointer %r17826, %Pointer* %frontier
	; OW32 (RP(76): Objptr (opt_19), 0): Word32  = 0x7
	%r17829 = load %Objptr, %Objptr* %regP_76
	%r17830 = getelementptr inbounds i8, %Objptr %r17829, i32 0
	%r17831 = bitcast %Objptr %r17830 to %Word32*
	store %Word32 7, %Word32* %r17831
	; OP (RP(76): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 98, isRoot = true, ty = Objptr (opt_3)}
	%r17832 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 98
	%r17833 = load %Objptr, %Objptr* %r17832
	%r17834 = load %Objptr, %Objptr* %regP_76
	%r17835 = getelementptr inbounds i8, %Objptr %r17834, i32 8
	%r17836 = bitcast %Objptr %r17835 to %Objptr*
	store %Objptr %r17833, %Objptr* %r17836
	; CW64 (<Frontier>)  = 0x27
	%r17837 = load %Pointer, %Pointer* %frontier
	%r17838 = bitcast %Pointer %r17837 to %Word64*
	store %Word64 39, %Word64* %r17838
	; RQ(108): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17839 = load %Pointer, %Pointer* %frontier
	%r17841 = ptrtoint %Pointer %r17839 to %uintptr_t
	%r17842 = add %uintptr_t %r17841, 8
	%r17840 = inttoptr %uintptr_t %r17842 to %Pointer
	store %CPointer %r17840, %CPointer* %regQ_108
	; RP(77): Objptr (opt_19)  = Cast (RQ(108): CPointer, Objptr (opt_19))
	%r17843 = load %CPointer, %CPointer* %regQ_108
	%r17844 = bitcast %CPointer %r17843 to %Objptr
	store %Objptr %r17844, %Objptr* %regP_77
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17845 = load %Pointer, %Pointer* %frontier
	%r17847 = ptrtoint %Pointer %r17845 to %uintptr_t
	%r17848 = add %uintptr_t %r17847, 24
	%r17846 = inttoptr %uintptr_t %r17848 to %Pointer
	store %Pointer %r17846, %Pointer* %frontier
	; OW32 (RP(77): Objptr (opt_19), 0): Word32  = 0x1A
	%r17849 = load %Objptr, %Objptr* %regP_77
	%r17850 = getelementptr inbounds i8, %Objptr %r17849, i32 0
	%r17851 = bitcast %Objptr %r17850 to %Word32*
	store %Word32 26, %Word32* %r17851
	; OP (RP(77): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 99, isRoot = true, ty = Objptr (opt_3)}
	%r17852 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 99
	%r17853 = load %Objptr, %Objptr* %r17852
	%r17854 = load %Objptr, %Objptr* %regP_77
	%r17855 = getelementptr inbounds i8, %Objptr %r17854, i32 8
	%r17856 = bitcast %Objptr %r17855 to %Objptr*
	store %Objptr %r17853, %Objptr* %r17856
	; CW64 (<Frontier>)  = 0x27
	%r17857 = load %Pointer, %Pointer* %frontier
	%r17858 = bitcast %Pointer %r17857 to %Word64*
	store %Word64 39, %Word64* %r17858
	; RQ(107): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17859 = load %Pointer, %Pointer* %frontier
	%r17861 = ptrtoint %Pointer %r17859 to %uintptr_t
	%r17862 = add %uintptr_t %r17861, 8
	%r17860 = inttoptr %uintptr_t %r17862 to %Pointer
	store %CPointer %r17860, %CPointer* %regQ_107
	; RP(78): Objptr (opt_19)  = Cast (RQ(107): CPointer, Objptr (opt_19))
	%r17863 = load %CPointer, %CPointer* %regQ_107
	%r17864 = bitcast %CPointer %r17863 to %Objptr
	store %Objptr %r17864, %Objptr* %regP_78
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17865 = load %Pointer, %Pointer* %frontier
	%r17867 = ptrtoint %Pointer %r17865 to %uintptr_t
	%r17868 = add %uintptr_t %r17867, 24
	%r17866 = inttoptr %uintptr_t %r17868 to %Pointer
	store %Pointer %r17866, %Pointer* %frontier
	; OW32 (RP(78): Objptr (opt_19), 0): Word32  = 0xB
	%r17869 = load %Objptr, %Objptr* %regP_78
	%r17870 = getelementptr inbounds i8, %Objptr %r17869, i32 0
	%r17871 = bitcast %Objptr %r17870 to %Word32*
	store %Word32 11, %Word32* %r17871
	; OP (RP(78): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 100, isRoot = true, ty = Objptr (opt_3)}
	%r17872 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 100
	%r17873 = load %Objptr, %Objptr* %r17872
	%r17874 = load %Objptr, %Objptr* %regP_78
	%r17875 = getelementptr inbounds i8, %Objptr %r17874, i32 8
	%r17876 = bitcast %Objptr %r17875 to %Objptr*
	store %Objptr %r17873, %Objptr* %r17876
	; CW64 (<Frontier>)  = 0x27
	%r17877 = load %Pointer, %Pointer* %frontier
	%r17878 = bitcast %Pointer %r17877 to %Word64*
	store %Word64 39, %Word64* %r17878
	; RQ(106): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17879 = load %Pointer, %Pointer* %frontier
	%r17881 = ptrtoint %Pointer %r17879 to %uintptr_t
	%r17882 = add %uintptr_t %r17881, 8
	%r17880 = inttoptr %uintptr_t %r17882 to %Pointer
	store %CPointer %r17880, %CPointer* %regQ_106
	; RP(79): Objptr (opt_19)  = Cast (RQ(106): CPointer, Objptr (opt_19))
	%r17883 = load %CPointer, %CPointer* %regQ_106
	%r17884 = bitcast %CPointer %r17883 to %Objptr
	store %Objptr %r17884, %Objptr* %regP_79
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17885 = load %Pointer, %Pointer* %frontier
	%r17887 = ptrtoint %Pointer %r17885 to %uintptr_t
	%r17888 = add %uintptr_t %r17887, 24
	%r17886 = inttoptr %uintptr_t %r17888 to %Pointer
	store %Pointer %r17886, %Pointer* %frontier
	; OW32 (RP(79): Objptr (opt_19), 0): Word32  = 0x12
	%r17889 = load %Objptr, %Objptr* %regP_79
	%r17890 = getelementptr inbounds i8, %Objptr %r17889, i32 0
	%r17891 = bitcast %Objptr %r17890 to %Word32*
	store %Word32 18, %Word32* %r17891
	; OP (RP(79): Objptr (opt_19), 8): Objptr (opt_3)  = glob {index = 101, isRoot = true, ty = Objptr (opt_3)}
	%r17892 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 101
	%r17893 = load %Objptr, %Objptr* %r17892
	%r17894 = load %Objptr, %Objptr* %regP_79
	%r17895 = getelementptr inbounds i8, %Objptr %r17894, i32 8
	%r17896 = bitcast %Objptr %r17895 to %Objptr*
	store %Objptr %r17893, %Objptr* %r17896
	; CW64 (<Frontier>)  = 0x4D
	%r17897 = load %Pointer, %Pointer* %frontier
	%r17898 = bitcast %Pointer %r17897 to %Word64*
	store %Word64 77, %Word64* %r17898
	; RQ(105): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17899 = load %Pointer, %Pointer* %frontier
	%r17901 = ptrtoint %Pointer %r17899 to %uintptr_t
	%r17902 = add %uintptr_t %r17901, 8
	%r17900 = inttoptr %uintptr_t %r17902 to %Pointer
	store %CPointer %r17900, %CPointer* %regQ_105
	; RP(80): Objptr (opt_38)  = Cast (RQ(105): CPointer, Objptr (opt_38))
	%r17903 = load %CPointer, %CPointer* %regQ_105
	%r17904 = bitcast %CPointer %r17903 to %Objptr
	store %Objptr %r17904, %Objptr* %regP_80
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17905 = load %Pointer, %Pointer* %frontier
	%r17907 = ptrtoint %Pointer %r17905 to %uintptr_t
	%r17908 = add %uintptr_t %r17907, 24
	%r17906 = inttoptr %uintptr_t %r17908 to %Pointer
	store %Pointer %r17906, %Pointer* %frontier
	; OP (RP(80): Objptr (opt_38), 0): Objptr (opt_19)  = RP(79): Objptr (opt_19)
	%r17909 = load %Objptr, %Objptr* %regP_79
	%r17910 = load %Objptr, %Objptr* %regP_80
	%r17911 = getelementptr inbounds i8, %Objptr %r17910, i32 0
	%r17912 = bitcast %Objptr %r17911 to %Objptr*
	store %Objptr %r17909, %Objptr* %r17912
	; OP (RP(80): Objptr (opt_38), 8): Objptr (opt_38)  = Cast (0x1, Objptr (opt_38))
	%r17913 = inttoptr %Word64 1 to %Objptr
	%r17914 = load %Objptr, %Objptr* %regP_80
	%r17915 = getelementptr inbounds i8, %Objptr %r17914, i32 8
	%r17916 = bitcast %Objptr %r17915 to %Objptr*
	store %Objptr %r17913, %Objptr* %r17916
	; CW64 (<Frontier>)  = 0x4D
	%r17917 = load %Pointer, %Pointer* %frontier
	%r17918 = bitcast %Pointer %r17917 to %Word64*
	store %Word64 77, %Word64* %r17918
	; RQ(104): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17919 = load %Pointer, %Pointer* %frontier
	%r17921 = ptrtoint %Pointer %r17919 to %uintptr_t
	%r17922 = add %uintptr_t %r17921, 8
	%r17920 = inttoptr %uintptr_t %r17922 to %Pointer
	store %CPointer %r17920, %CPointer* %regQ_104
	; RP(81): Objptr (opt_38)  = Cast (RQ(104): CPointer, Objptr (opt_38))
	%r17923 = load %CPointer, %CPointer* %regQ_104
	%r17924 = bitcast %CPointer %r17923 to %Objptr
	store %Objptr %r17924, %Objptr* %regP_81
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17925 = load %Pointer, %Pointer* %frontier
	%r17927 = ptrtoint %Pointer %r17925 to %uintptr_t
	%r17928 = add %uintptr_t %r17927, 24
	%r17926 = inttoptr %uintptr_t %r17928 to %Pointer
	store %Pointer %r17926, %Pointer* %frontier
	; OP (RP(81): Objptr (opt_38), 0): Objptr (opt_19)  = RP(78): Objptr (opt_19)
	%r17929 = load %Objptr, %Objptr* %regP_78
	%r17930 = load %Objptr, %Objptr* %regP_81
	%r17931 = getelementptr inbounds i8, %Objptr %r17930, i32 0
	%r17932 = bitcast %Objptr %r17931 to %Objptr*
	store %Objptr %r17929, %Objptr* %r17932
	; OP (RP(81): Objptr (opt_38), 8): Objptr (opt_38)  = RP(80): Objptr (opt_38)
	%r17933 = load %Objptr, %Objptr* %regP_80
	%r17934 = load %Objptr, %Objptr* %regP_81
	%r17935 = getelementptr inbounds i8, %Objptr %r17934, i32 8
	%r17936 = bitcast %Objptr %r17935 to %Objptr*
	store %Objptr %r17933, %Objptr* %r17936
	; CW64 (<Frontier>)  = 0x4D
	%r17937 = load %Pointer, %Pointer* %frontier
	%r17938 = bitcast %Pointer %r17937 to %Word64*
	store %Word64 77, %Word64* %r17938
	; RQ(103): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17939 = load %Pointer, %Pointer* %frontier
	%r17941 = ptrtoint %Pointer %r17939 to %uintptr_t
	%r17942 = add %uintptr_t %r17941, 8
	%r17940 = inttoptr %uintptr_t %r17942 to %Pointer
	store %CPointer %r17940, %CPointer* %regQ_103
	; RP(82): Objptr (opt_38)  = Cast (RQ(103): CPointer, Objptr (opt_38))
	%r17943 = load %CPointer, %CPointer* %regQ_103
	%r17944 = bitcast %CPointer %r17943 to %Objptr
	store %Objptr %r17944, %Objptr* %regP_82
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17945 = load %Pointer, %Pointer* %frontier
	%r17947 = ptrtoint %Pointer %r17945 to %uintptr_t
	%r17948 = add %uintptr_t %r17947, 24
	%r17946 = inttoptr %uintptr_t %r17948 to %Pointer
	store %Pointer %r17946, %Pointer* %frontier
	; OP (RP(82): Objptr (opt_38), 0): Objptr (opt_19)  = RP(77): Objptr (opt_19)
	%r17949 = load %Objptr, %Objptr* %regP_77
	%r17950 = load %Objptr, %Objptr* %regP_82
	%r17951 = getelementptr inbounds i8, %Objptr %r17950, i32 0
	%r17952 = bitcast %Objptr %r17951 to %Objptr*
	store %Objptr %r17949, %Objptr* %r17952
	; OP (RP(82): Objptr (opt_38), 8): Objptr (opt_38)  = RP(81): Objptr (opt_38)
	%r17953 = load %Objptr, %Objptr* %regP_81
	%r17954 = load %Objptr, %Objptr* %regP_82
	%r17955 = getelementptr inbounds i8, %Objptr %r17954, i32 8
	%r17956 = bitcast %Objptr %r17955 to %Objptr*
	store %Objptr %r17953, %Objptr* %r17956
	; CW64 (<Frontier>)  = 0x4D
	%r17957 = load %Pointer, %Pointer* %frontier
	%r17958 = bitcast %Pointer %r17957 to %Word64*
	store %Word64 77, %Word64* %r17958
	; RQ(102): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17959 = load %Pointer, %Pointer* %frontier
	%r17961 = ptrtoint %Pointer %r17959 to %uintptr_t
	%r17962 = add %uintptr_t %r17961, 8
	%r17960 = inttoptr %uintptr_t %r17962 to %Pointer
	store %CPointer %r17960, %CPointer* %regQ_102
	; RP(83): Objptr (opt_38)  = Cast (RQ(102): CPointer, Objptr (opt_38))
	%r17963 = load %CPointer, %CPointer* %regQ_102
	%r17964 = bitcast %CPointer %r17963 to %Objptr
	store %Objptr %r17964, %Objptr* %regP_83
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17965 = load %Pointer, %Pointer* %frontier
	%r17967 = ptrtoint %Pointer %r17965 to %uintptr_t
	%r17968 = add %uintptr_t %r17967, 24
	%r17966 = inttoptr %uintptr_t %r17968 to %Pointer
	store %Pointer %r17966, %Pointer* %frontier
	; OP (RP(83): Objptr (opt_38), 0): Objptr (opt_19)  = RP(76): Objptr (opt_19)
	%r17969 = load %Objptr, %Objptr* %regP_76
	%r17970 = load %Objptr, %Objptr* %regP_83
	%r17971 = getelementptr inbounds i8, %Objptr %r17970, i32 0
	%r17972 = bitcast %Objptr %r17971 to %Objptr*
	store %Objptr %r17969, %Objptr* %r17972
	; OP (RP(83): Objptr (opt_38), 8): Objptr (opt_38)  = RP(82): Objptr (opt_38)
	%r17973 = load %Objptr, %Objptr* %regP_82
	%r17974 = load %Objptr, %Objptr* %regP_83
	%r17975 = getelementptr inbounds i8, %Objptr %r17974, i32 8
	%r17976 = bitcast %Objptr %r17975 to %Objptr*
	store %Objptr %r17973, %Objptr* %r17976
	; CW64 (<Frontier>)  = 0x4D
	%r17977 = load %Pointer, %Pointer* %frontier
	%r17978 = bitcast %Pointer %r17977 to %Word64*
	store %Word64 77, %Word64* %r17978
	; RQ(101): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17979 = load %Pointer, %Pointer* %frontier
	%r17981 = ptrtoint %Pointer %r17979 to %uintptr_t
	%r17982 = add %uintptr_t %r17981, 8
	%r17980 = inttoptr %uintptr_t %r17982 to %Pointer
	store %CPointer %r17980, %CPointer* %regQ_101
	; RP(84): Objptr (opt_38)  = Cast (RQ(101): CPointer, Objptr (opt_38))
	%r17983 = load %CPointer, %CPointer* %regQ_101
	%r17984 = bitcast %CPointer %r17983 to %Objptr
	store %Objptr %r17984, %Objptr* %regP_84
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r17985 = load %Pointer, %Pointer* %frontier
	%r17987 = ptrtoint %Pointer %r17985 to %uintptr_t
	%r17988 = add %uintptr_t %r17987, 24
	%r17986 = inttoptr %uintptr_t %r17988 to %Pointer
	store %Pointer %r17986, %Pointer* %frontier
	; OP (RP(84): Objptr (opt_38), 0): Objptr (opt_19)  = RP(75): Objptr (opt_19)
	%r17989 = load %Objptr, %Objptr* %regP_75
	%r17990 = load %Objptr, %Objptr* %regP_84
	%r17991 = getelementptr inbounds i8, %Objptr %r17990, i32 0
	%r17992 = bitcast %Objptr %r17991 to %Objptr*
	store %Objptr %r17989, %Objptr* %r17992
	; OP (RP(84): Objptr (opt_38), 8): Objptr (opt_38)  = RP(83): Objptr (opt_38)
	%r17993 = load %Objptr, %Objptr* %regP_83
	%r17994 = load %Objptr, %Objptr* %regP_84
	%r17995 = getelementptr inbounds i8, %Objptr %r17994, i32 8
	%r17996 = bitcast %Objptr %r17995 to %Objptr*
	store %Objptr %r17993, %Objptr* %r17996
	; CW64 (<Frontier>)  = 0x4D
	%r17997 = load %Pointer, %Pointer* %frontier
	%r17998 = bitcast %Pointer %r17997 to %Word64*
	store %Word64 77, %Word64* %r17998
	; RQ(100): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r17999 = load %Pointer, %Pointer* %frontier
	%r18001 = ptrtoint %Pointer %r17999 to %uintptr_t
	%r18002 = add %uintptr_t %r18001, 8
	%r18000 = inttoptr %uintptr_t %r18002 to %Pointer
	store %CPointer %r18000, %CPointer* %regQ_100
	; RP(85): Objptr (opt_38)  = Cast (RQ(100): CPointer, Objptr (opt_38))
	%r18003 = load %CPointer, %CPointer* %regQ_100
	%r18004 = bitcast %CPointer %r18003 to %Objptr
	store %Objptr %r18004, %Objptr* %regP_85
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18005 = load %Pointer, %Pointer* %frontier
	%r18007 = ptrtoint %Pointer %r18005 to %uintptr_t
	%r18008 = add %uintptr_t %r18007, 24
	%r18006 = inttoptr %uintptr_t %r18008 to %Pointer
	store %Pointer %r18006, %Pointer* %frontier
	; OP (RP(85): Objptr (opt_38), 0): Objptr (opt_19)  = RP(74): Objptr (opt_19)
	%r18009 = load %Objptr, %Objptr* %regP_74
	%r18010 = load %Objptr, %Objptr* %regP_85
	%r18011 = getelementptr inbounds i8, %Objptr %r18010, i32 0
	%r18012 = bitcast %Objptr %r18011 to %Objptr*
	store %Objptr %r18009, %Objptr* %r18012
	; OP (RP(85): Objptr (opt_38), 8): Objptr (opt_38)  = RP(84): Objptr (opt_38)
	%r18013 = load %Objptr, %Objptr* %regP_84
	%r18014 = load %Objptr, %Objptr* %regP_85
	%r18015 = getelementptr inbounds i8, %Objptr %r18014, i32 8
	%r18016 = bitcast %Objptr %r18015 to %Objptr*
	store %Objptr %r18013, %Objptr* %r18016
	; CW64 (<Frontier>)  = 0x4D
	%r18017 = load %Pointer, %Pointer* %frontier
	%r18018 = bitcast %Pointer %r18017 to %Word64*
	store %Word64 77, %Word64* %r18018
	; RQ(99): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18019 = load %Pointer, %Pointer* %frontier
	%r18021 = ptrtoint %Pointer %r18019 to %uintptr_t
	%r18022 = add %uintptr_t %r18021, 8
	%r18020 = inttoptr %uintptr_t %r18022 to %Pointer
	store %CPointer %r18020, %CPointer* %regQ_99
	; RP(86): Objptr (opt_38)  = Cast (RQ(99): CPointer, Objptr (opt_38))
	%r18023 = load %CPointer, %CPointer* %regQ_99
	%r18024 = bitcast %CPointer %r18023 to %Objptr
	store %Objptr %r18024, %Objptr* %regP_86
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18025 = load %Pointer, %Pointer* %frontier
	%r18027 = ptrtoint %Pointer %r18025 to %uintptr_t
	%r18028 = add %uintptr_t %r18027, 24
	%r18026 = inttoptr %uintptr_t %r18028 to %Pointer
	store %Pointer %r18026, %Pointer* %frontier
	; OP (RP(86): Objptr (opt_38), 0): Objptr (opt_19)  = RP(73): Objptr (opt_19)
	%r18029 = load %Objptr, %Objptr* %regP_73
	%r18030 = load %Objptr, %Objptr* %regP_86
	%r18031 = getelementptr inbounds i8, %Objptr %r18030, i32 0
	%r18032 = bitcast %Objptr %r18031 to %Objptr*
	store %Objptr %r18029, %Objptr* %r18032
	; OP (RP(86): Objptr (opt_38), 8): Objptr (opt_38)  = RP(85): Objptr (opt_38)
	%r18033 = load %Objptr, %Objptr* %regP_85
	%r18034 = load %Objptr, %Objptr* %regP_86
	%r18035 = getelementptr inbounds i8, %Objptr %r18034, i32 8
	%r18036 = bitcast %Objptr %r18035 to %Objptr*
	store %Objptr %r18033, %Objptr* %r18036
	; CW64 (<Frontier>)  = 0x4D
	%r18037 = load %Pointer, %Pointer* %frontier
	%r18038 = bitcast %Pointer %r18037 to %Word64*
	store %Word64 77, %Word64* %r18038
	; RQ(98): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18039 = load %Pointer, %Pointer* %frontier
	%r18041 = ptrtoint %Pointer %r18039 to %uintptr_t
	%r18042 = add %uintptr_t %r18041, 8
	%r18040 = inttoptr %uintptr_t %r18042 to %Pointer
	store %CPointer %r18040, %CPointer* %regQ_98
	; RP(87): Objptr (opt_38)  = Cast (RQ(98): CPointer, Objptr (opt_38))
	%r18043 = load %CPointer, %CPointer* %regQ_98
	%r18044 = bitcast %CPointer %r18043 to %Objptr
	store %Objptr %r18044, %Objptr* %regP_87
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18045 = load %Pointer, %Pointer* %frontier
	%r18047 = ptrtoint %Pointer %r18045 to %uintptr_t
	%r18048 = add %uintptr_t %r18047, 24
	%r18046 = inttoptr %uintptr_t %r18048 to %Pointer
	store %Pointer %r18046, %Pointer* %frontier
	; OP (RP(87): Objptr (opt_38), 0): Objptr (opt_19)  = RP(72): Objptr (opt_19)
	%r18049 = load %Objptr, %Objptr* %regP_72
	%r18050 = load %Objptr, %Objptr* %regP_87
	%r18051 = getelementptr inbounds i8, %Objptr %r18050, i32 0
	%r18052 = bitcast %Objptr %r18051 to %Objptr*
	store %Objptr %r18049, %Objptr* %r18052
	; OP (RP(87): Objptr (opt_38), 8): Objptr (opt_38)  = RP(86): Objptr (opt_38)
	%r18053 = load %Objptr, %Objptr* %regP_86
	%r18054 = load %Objptr, %Objptr* %regP_87
	%r18055 = getelementptr inbounds i8, %Objptr %r18054, i32 8
	%r18056 = bitcast %Objptr %r18055 to %Objptr*
	store %Objptr %r18053, %Objptr* %r18056
	; CW64 (<Frontier>)  = 0x4D
	%r18057 = load %Pointer, %Pointer* %frontier
	%r18058 = bitcast %Pointer %r18057 to %Word64*
	store %Word64 77, %Word64* %r18058
	; RQ(97): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18059 = load %Pointer, %Pointer* %frontier
	%r18061 = ptrtoint %Pointer %r18059 to %uintptr_t
	%r18062 = add %uintptr_t %r18061, 8
	%r18060 = inttoptr %uintptr_t %r18062 to %Pointer
	store %CPointer %r18060, %CPointer* %regQ_97
	; RP(88): Objptr (opt_38)  = Cast (RQ(97): CPointer, Objptr (opt_38))
	%r18063 = load %CPointer, %CPointer* %regQ_97
	%r18064 = bitcast %CPointer %r18063 to %Objptr
	store %Objptr %r18064, %Objptr* %regP_88
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18065 = load %Pointer, %Pointer* %frontier
	%r18067 = ptrtoint %Pointer %r18065 to %uintptr_t
	%r18068 = add %uintptr_t %r18067, 24
	%r18066 = inttoptr %uintptr_t %r18068 to %Pointer
	store %Pointer %r18066, %Pointer* %frontier
	; OP (RP(88): Objptr (opt_38), 0): Objptr (opt_19)  = RP(71): Objptr (opt_19)
	%r18069 = load %Objptr, %Objptr* %regP_71
	%r18070 = load %Objptr, %Objptr* %regP_88
	%r18071 = getelementptr inbounds i8, %Objptr %r18070, i32 0
	%r18072 = bitcast %Objptr %r18071 to %Objptr*
	store %Objptr %r18069, %Objptr* %r18072
	; OP (RP(88): Objptr (opt_38), 8): Objptr (opt_38)  = RP(87): Objptr (opt_38)
	%r18073 = load %Objptr, %Objptr* %regP_87
	%r18074 = load %Objptr, %Objptr* %regP_88
	%r18075 = getelementptr inbounds i8, %Objptr %r18074, i32 8
	%r18076 = bitcast %Objptr %r18075 to %Objptr*
	store %Objptr %r18073, %Objptr* %r18076
	; CW64 (<Frontier>)  = 0x4D
	%r18077 = load %Pointer, %Pointer* %frontier
	%r18078 = bitcast %Pointer %r18077 to %Word64*
	store %Word64 77, %Word64* %r18078
	; RQ(96): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18079 = load %Pointer, %Pointer* %frontier
	%r18081 = ptrtoint %Pointer %r18079 to %uintptr_t
	%r18082 = add %uintptr_t %r18081, 8
	%r18080 = inttoptr %uintptr_t %r18082 to %Pointer
	store %CPointer %r18080, %CPointer* %regQ_96
	; RP(89): Objptr (opt_38)  = Cast (RQ(96): CPointer, Objptr (opt_38))
	%r18083 = load %CPointer, %CPointer* %regQ_96
	%r18084 = bitcast %CPointer %r18083 to %Objptr
	store %Objptr %r18084, %Objptr* %regP_89
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18085 = load %Pointer, %Pointer* %frontier
	%r18087 = ptrtoint %Pointer %r18085 to %uintptr_t
	%r18088 = add %uintptr_t %r18087, 24
	%r18086 = inttoptr %uintptr_t %r18088 to %Pointer
	store %Pointer %r18086, %Pointer* %frontier
	; OP (RP(89): Objptr (opt_38), 0): Objptr (opt_19)  = RP(70): Objptr (opt_19)
	%r18089 = load %Objptr, %Objptr* %regP_70
	%r18090 = load %Objptr, %Objptr* %regP_89
	%r18091 = getelementptr inbounds i8, %Objptr %r18090, i32 0
	%r18092 = bitcast %Objptr %r18091 to %Objptr*
	store %Objptr %r18089, %Objptr* %r18092
	; OP (RP(89): Objptr (opt_38), 8): Objptr (opt_38)  = RP(88): Objptr (opt_38)
	%r18093 = load %Objptr, %Objptr* %regP_88
	%r18094 = load %Objptr, %Objptr* %regP_89
	%r18095 = getelementptr inbounds i8, %Objptr %r18094, i32 8
	%r18096 = bitcast %Objptr %r18095 to %Objptr*
	store %Objptr %r18093, %Objptr* %r18096
	; CW64 (<Frontier>)  = 0x4D
	%r18097 = load %Pointer, %Pointer* %frontier
	%r18098 = bitcast %Pointer %r18097 to %Word64*
	store %Word64 77, %Word64* %r18098
	; RQ(95): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18099 = load %Pointer, %Pointer* %frontier
	%r18101 = ptrtoint %Pointer %r18099 to %uintptr_t
	%r18102 = add %uintptr_t %r18101, 8
	%r18100 = inttoptr %uintptr_t %r18102 to %Pointer
	store %CPointer %r18100, %CPointer* %regQ_95
	; RP(90): Objptr (opt_38)  = Cast (RQ(95): CPointer, Objptr (opt_38))
	%r18103 = load %CPointer, %CPointer* %regQ_95
	%r18104 = bitcast %CPointer %r18103 to %Objptr
	store %Objptr %r18104, %Objptr* %regP_90
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18105 = load %Pointer, %Pointer* %frontier
	%r18107 = ptrtoint %Pointer %r18105 to %uintptr_t
	%r18108 = add %uintptr_t %r18107, 24
	%r18106 = inttoptr %uintptr_t %r18108 to %Pointer
	store %Pointer %r18106, %Pointer* %frontier
	; OP (RP(90): Objptr (opt_38), 0): Objptr (opt_19)  = RP(69): Objptr (opt_19)
	%r18109 = load %Objptr, %Objptr* %regP_69
	%r18110 = load %Objptr, %Objptr* %regP_90
	%r18111 = getelementptr inbounds i8, %Objptr %r18110, i32 0
	%r18112 = bitcast %Objptr %r18111 to %Objptr*
	store %Objptr %r18109, %Objptr* %r18112
	; OP (RP(90): Objptr (opt_38), 8): Objptr (opt_38)  = RP(89): Objptr (opt_38)
	%r18113 = load %Objptr, %Objptr* %regP_89
	%r18114 = load %Objptr, %Objptr* %regP_90
	%r18115 = getelementptr inbounds i8, %Objptr %r18114, i32 8
	%r18116 = bitcast %Objptr %r18115 to %Objptr*
	store %Objptr %r18113, %Objptr* %r18116
	; CW64 (<Frontier>)  = 0x4D
	%r18117 = load %Pointer, %Pointer* %frontier
	%r18118 = bitcast %Pointer %r18117 to %Word64*
	store %Word64 77, %Word64* %r18118
	; RQ(94): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18119 = load %Pointer, %Pointer* %frontier
	%r18121 = ptrtoint %Pointer %r18119 to %uintptr_t
	%r18122 = add %uintptr_t %r18121, 8
	%r18120 = inttoptr %uintptr_t %r18122 to %Pointer
	store %CPointer %r18120, %CPointer* %regQ_94
	; RP(91): Objptr (opt_38)  = Cast (RQ(94): CPointer, Objptr (opt_38))
	%r18123 = load %CPointer, %CPointer* %regQ_94
	%r18124 = bitcast %CPointer %r18123 to %Objptr
	store %Objptr %r18124, %Objptr* %regP_91
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18125 = load %Pointer, %Pointer* %frontier
	%r18127 = ptrtoint %Pointer %r18125 to %uintptr_t
	%r18128 = add %uintptr_t %r18127, 24
	%r18126 = inttoptr %uintptr_t %r18128 to %Pointer
	store %Pointer %r18126, %Pointer* %frontier
	; OP (RP(91): Objptr (opt_38), 0): Objptr (opt_19)  = RP(68): Objptr (opt_19)
	%r18129 = load %Objptr, %Objptr* %regP_68
	%r18130 = load %Objptr, %Objptr* %regP_91
	%r18131 = getelementptr inbounds i8, %Objptr %r18130, i32 0
	%r18132 = bitcast %Objptr %r18131 to %Objptr*
	store %Objptr %r18129, %Objptr* %r18132
	; OP (RP(91): Objptr (opt_38), 8): Objptr (opt_38)  = RP(90): Objptr (opt_38)
	%r18133 = load %Objptr, %Objptr* %regP_90
	%r18134 = load %Objptr, %Objptr* %regP_91
	%r18135 = getelementptr inbounds i8, %Objptr %r18134, i32 8
	%r18136 = bitcast %Objptr %r18135 to %Objptr*
	store %Objptr %r18133, %Objptr* %r18136
	; CW64 (<Frontier>)  = 0x4D
	%r18137 = load %Pointer, %Pointer* %frontier
	%r18138 = bitcast %Pointer %r18137 to %Word64*
	store %Word64 77, %Word64* %r18138
	; RQ(93): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18139 = load %Pointer, %Pointer* %frontier
	%r18141 = ptrtoint %Pointer %r18139 to %uintptr_t
	%r18142 = add %uintptr_t %r18141, 8
	%r18140 = inttoptr %uintptr_t %r18142 to %Pointer
	store %CPointer %r18140, %CPointer* %regQ_93
	; RP(92): Objptr (opt_38)  = Cast (RQ(93): CPointer, Objptr (opt_38))
	%r18143 = load %CPointer, %CPointer* %regQ_93
	%r18144 = bitcast %CPointer %r18143 to %Objptr
	store %Objptr %r18144, %Objptr* %regP_92
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18145 = load %Pointer, %Pointer* %frontier
	%r18147 = ptrtoint %Pointer %r18145 to %uintptr_t
	%r18148 = add %uintptr_t %r18147, 24
	%r18146 = inttoptr %uintptr_t %r18148 to %Pointer
	store %Pointer %r18146, %Pointer* %frontier
	; OP (RP(92): Objptr (opt_38), 0): Objptr (opt_19)  = RP(67): Objptr (opt_19)
	%r18149 = load %Objptr, %Objptr* %regP_67
	%r18150 = load %Objptr, %Objptr* %regP_92
	%r18151 = getelementptr inbounds i8, %Objptr %r18150, i32 0
	%r18152 = bitcast %Objptr %r18151 to %Objptr*
	store %Objptr %r18149, %Objptr* %r18152
	; OP (RP(92): Objptr (opt_38), 8): Objptr (opt_38)  = RP(91): Objptr (opt_38)
	%r18153 = load %Objptr, %Objptr* %regP_91
	%r18154 = load %Objptr, %Objptr* %regP_92
	%r18155 = getelementptr inbounds i8, %Objptr %r18154, i32 8
	%r18156 = bitcast %Objptr %r18155 to %Objptr*
	store %Objptr %r18153, %Objptr* %r18156
	; CW64 (<Frontier>)  = 0x4D
	%r18157 = load %Pointer, %Pointer* %frontier
	%r18158 = bitcast %Pointer %r18157 to %Word64*
	store %Word64 77, %Word64* %r18158
	; RQ(92): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18159 = load %Pointer, %Pointer* %frontier
	%r18161 = ptrtoint %Pointer %r18159 to %uintptr_t
	%r18162 = add %uintptr_t %r18161, 8
	%r18160 = inttoptr %uintptr_t %r18162 to %Pointer
	store %CPointer %r18160, %CPointer* %regQ_92
	; RP(93): Objptr (opt_38)  = Cast (RQ(92): CPointer, Objptr (opt_38))
	%r18163 = load %CPointer, %CPointer* %regQ_92
	%r18164 = bitcast %CPointer %r18163 to %Objptr
	store %Objptr %r18164, %Objptr* %regP_93
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18165 = load %Pointer, %Pointer* %frontier
	%r18167 = ptrtoint %Pointer %r18165 to %uintptr_t
	%r18168 = add %uintptr_t %r18167, 24
	%r18166 = inttoptr %uintptr_t %r18168 to %Pointer
	store %Pointer %r18166, %Pointer* %frontier
	; OP (RP(93): Objptr (opt_38), 0): Objptr (opt_19)  = RP(66): Objptr (opt_19)
	%r18169 = load %Objptr, %Objptr* %regP_66
	%r18170 = load %Objptr, %Objptr* %regP_93
	%r18171 = getelementptr inbounds i8, %Objptr %r18170, i32 0
	%r18172 = bitcast %Objptr %r18171 to %Objptr*
	store %Objptr %r18169, %Objptr* %r18172
	; OP (RP(93): Objptr (opt_38), 8): Objptr (opt_38)  = RP(92): Objptr (opt_38)
	%r18173 = load %Objptr, %Objptr* %regP_92
	%r18174 = load %Objptr, %Objptr* %regP_93
	%r18175 = getelementptr inbounds i8, %Objptr %r18174, i32 8
	%r18176 = bitcast %Objptr %r18175 to %Objptr*
	store %Objptr %r18173, %Objptr* %r18176
	; CW64 (<Frontier>)  = 0x4D
	%r18177 = load %Pointer, %Pointer* %frontier
	%r18178 = bitcast %Pointer %r18177 to %Word64*
	store %Word64 77, %Word64* %r18178
	; RQ(91): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18179 = load %Pointer, %Pointer* %frontier
	%r18181 = ptrtoint %Pointer %r18179 to %uintptr_t
	%r18182 = add %uintptr_t %r18181, 8
	%r18180 = inttoptr %uintptr_t %r18182 to %Pointer
	store %CPointer %r18180, %CPointer* %regQ_91
	; RP(94): Objptr (opt_38)  = Cast (RQ(91): CPointer, Objptr (opt_38))
	%r18183 = load %CPointer, %CPointer* %regQ_91
	%r18184 = bitcast %CPointer %r18183 to %Objptr
	store %Objptr %r18184, %Objptr* %regP_94
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18185 = load %Pointer, %Pointer* %frontier
	%r18187 = ptrtoint %Pointer %r18185 to %uintptr_t
	%r18188 = add %uintptr_t %r18187, 24
	%r18186 = inttoptr %uintptr_t %r18188 to %Pointer
	store %Pointer %r18186, %Pointer* %frontier
	; OP (RP(94): Objptr (opt_38), 0): Objptr (opt_19)  = RP(65): Objptr (opt_19)
	%r18189 = load %Objptr, %Objptr* %regP_65
	%r18190 = load %Objptr, %Objptr* %regP_94
	%r18191 = getelementptr inbounds i8, %Objptr %r18190, i32 0
	%r18192 = bitcast %Objptr %r18191 to %Objptr*
	store %Objptr %r18189, %Objptr* %r18192
	; OP (RP(94): Objptr (opt_38), 8): Objptr (opt_38)  = RP(93): Objptr (opt_38)
	%r18193 = load %Objptr, %Objptr* %regP_93
	%r18194 = load %Objptr, %Objptr* %regP_94
	%r18195 = getelementptr inbounds i8, %Objptr %r18194, i32 8
	%r18196 = bitcast %Objptr %r18195 to %Objptr*
	store %Objptr %r18193, %Objptr* %r18196
	; CW64 (<Frontier>)  = 0x4D
	%r18197 = load %Pointer, %Pointer* %frontier
	%r18198 = bitcast %Pointer %r18197 to %Word64*
	store %Word64 77, %Word64* %r18198
	; RQ(90): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18199 = load %Pointer, %Pointer* %frontier
	%r18201 = ptrtoint %Pointer %r18199 to %uintptr_t
	%r18202 = add %uintptr_t %r18201, 8
	%r18200 = inttoptr %uintptr_t %r18202 to %Pointer
	store %CPointer %r18200, %CPointer* %regQ_90
	; RP(95): Objptr (opt_38)  = Cast (RQ(90): CPointer, Objptr (opt_38))
	%r18203 = load %CPointer, %CPointer* %regQ_90
	%r18204 = bitcast %CPointer %r18203 to %Objptr
	store %Objptr %r18204, %Objptr* %regP_95
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18205 = load %Pointer, %Pointer* %frontier
	%r18207 = ptrtoint %Pointer %r18205 to %uintptr_t
	%r18208 = add %uintptr_t %r18207, 24
	%r18206 = inttoptr %uintptr_t %r18208 to %Pointer
	store %Pointer %r18206, %Pointer* %frontier
	; OP (RP(95): Objptr (opt_38), 0): Objptr (opt_19)  = RP(64): Objptr (opt_19)
	%r18209 = load %Objptr, %Objptr* %regP_64
	%r18210 = load %Objptr, %Objptr* %regP_95
	%r18211 = getelementptr inbounds i8, %Objptr %r18210, i32 0
	%r18212 = bitcast %Objptr %r18211 to %Objptr*
	store %Objptr %r18209, %Objptr* %r18212
	; OP (RP(95): Objptr (opt_38), 8): Objptr (opt_38)  = RP(94): Objptr (opt_38)
	%r18213 = load %Objptr, %Objptr* %regP_94
	%r18214 = load %Objptr, %Objptr* %regP_95
	%r18215 = getelementptr inbounds i8, %Objptr %r18214, i32 8
	%r18216 = bitcast %Objptr %r18215 to %Objptr*
	store %Objptr %r18213, %Objptr* %r18216
	; CW64 (<Frontier>)  = 0x4D
	%r18217 = load %Pointer, %Pointer* %frontier
	%r18218 = bitcast %Pointer %r18217 to %Word64*
	store %Word64 77, %Word64* %r18218
	; RQ(89): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18219 = load %Pointer, %Pointer* %frontier
	%r18221 = ptrtoint %Pointer %r18219 to %uintptr_t
	%r18222 = add %uintptr_t %r18221, 8
	%r18220 = inttoptr %uintptr_t %r18222 to %Pointer
	store %CPointer %r18220, %CPointer* %regQ_89
	; RP(96): Objptr (opt_38)  = Cast (RQ(89): CPointer, Objptr (opt_38))
	%r18223 = load %CPointer, %CPointer* %regQ_89
	%r18224 = bitcast %CPointer %r18223 to %Objptr
	store %Objptr %r18224, %Objptr* %regP_96
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18225 = load %Pointer, %Pointer* %frontier
	%r18227 = ptrtoint %Pointer %r18225 to %uintptr_t
	%r18228 = add %uintptr_t %r18227, 24
	%r18226 = inttoptr %uintptr_t %r18228 to %Pointer
	store %Pointer %r18226, %Pointer* %frontier
	; OP (RP(96): Objptr (opt_38), 0): Objptr (opt_19)  = RP(63): Objptr (opt_19)
	%r18229 = load %Objptr, %Objptr* %regP_63
	%r18230 = load %Objptr, %Objptr* %regP_96
	%r18231 = getelementptr inbounds i8, %Objptr %r18230, i32 0
	%r18232 = bitcast %Objptr %r18231 to %Objptr*
	store %Objptr %r18229, %Objptr* %r18232
	; OP (RP(96): Objptr (opt_38), 8): Objptr (opt_38)  = RP(95): Objptr (opt_38)
	%r18233 = load %Objptr, %Objptr* %regP_95
	%r18234 = load %Objptr, %Objptr* %regP_96
	%r18235 = getelementptr inbounds i8, %Objptr %r18234, i32 8
	%r18236 = bitcast %Objptr %r18235 to %Objptr*
	store %Objptr %r18233, %Objptr* %r18236
	; CW64 (<Frontier>)  = 0x4D
	%r18237 = load %Pointer, %Pointer* %frontier
	%r18238 = bitcast %Pointer %r18237 to %Word64*
	store %Word64 77, %Word64* %r18238
	; RQ(88): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18239 = load %Pointer, %Pointer* %frontier
	%r18241 = ptrtoint %Pointer %r18239 to %uintptr_t
	%r18242 = add %uintptr_t %r18241, 8
	%r18240 = inttoptr %uintptr_t %r18242 to %Pointer
	store %CPointer %r18240, %CPointer* %regQ_88
	; RP(97): Objptr (opt_38)  = Cast (RQ(88): CPointer, Objptr (opt_38))
	%r18243 = load %CPointer, %CPointer* %regQ_88
	%r18244 = bitcast %CPointer %r18243 to %Objptr
	store %Objptr %r18244, %Objptr* %regP_97
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18245 = load %Pointer, %Pointer* %frontier
	%r18247 = ptrtoint %Pointer %r18245 to %uintptr_t
	%r18248 = add %uintptr_t %r18247, 24
	%r18246 = inttoptr %uintptr_t %r18248 to %Pointer
	store %Pointer %r18246, %Pointer* %frontier
	; OP (RP(97): Objptr (opt_38), 0): Objptr (opt_19)  = RP(62): Objptr (opt_19)
	%r18249 = load %Objptr, %Objptr* %regP_62
	%r18250 = load %Objptr, %Objptr* %regP_97
	%r18251 = getelementptr inbounds i8, %Objptr %r18250, i32 0
	%r18252 = bitcast %Objptr %r18251 to %Objptr*
	store %Objptr %r18249, %Objptr* %r18252
	; OP (RP(97): Objptr (opt_38), 8): Objptr (opt_38)  = RP(96): Objptr (opt_38)
	%r18253 = load %Objptr, %Objptr* %regP_96
	%r18254 = load %Objptr, %Objptr* %regP_97
	%r18255 = getelementptr inbounds i8, %Objptr %r18254, i32 8
	%r18256 = bitcast %Objptr %r18255 to %Objptr*
	store %Objptr %r18253, %Objptr* %r18256
	; CW64 (<Frontier>)  = 0x4D
	%r18257 = load %Pointer, %Pointer* %frontier
	%r18258 = bitcast %Pointer %r18257 to %Word64*
	store %Word64 77, %Word64* %r18258
	; RQ(87): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18259 = load %Pointer, %Pointer* %frontier
	%r18261 = ptrtoint %Pointer %r18259 to %uintptr_t
	%r18262 = add %uintptr_t %r18261, 8
	%r18260 = inttoptr %uintptr_t %r18262 to %Pointer
	store %CPointer %r18260, %CPointer* %regQ_87
	; RP(98): Objptr (opt_38)  = Cast (RQ(87): CPointer, Objptr (opt_38))
	%r18263 = load %CPointer, %CPointer* %regQ_87
	%r18264 = bitcast %CPointer %r18263 to %Objptr
	store %Objptr %r18264, %Objptr* %regP_98
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18265 = load %Pointer, %Pointer* %frontier
	%r18267 = ptrtoint %Pointer %r18265 to %uintptr_t
	%r18268 = add %uintptr_t %r18267, 24
	%r18266 = inttoptr %uintptr_t %r18268 to %Pointer
	store %Pointer %r18266, %Pointer* %frontier
	; OP (RP(98): Objptr (opt_38), 0): Objptr (opt_19)  = RP(61): Objptr (opt_19)
	%r18269 = load %Objptr, %Objptr* %regP_61
	%r18270 = load %Objptr, %Objptr* %regP_98
	%r18271 = getelementptr inbounds i8, %Objptr %r18270, i32 0
	%r18272 = bitcast %Objptr %r18271 to %Objptr*
	store %Objptr %r18269, %Objptr* %r18272
	; OP (RP(98): Objptr (opt_38), 8): Objptr (opt_38)  = RP(97): Objptr (opt_38)
	%r18273 = load %Objptr, %Objptr* %regP_97
	%r18274 = load %Objptr, %Objptr* %regP_98
	%r18275 = getelementptr inbounds i8, %Objptr %r18274, i32 8
	%r18276 = bitcast %Objptr %r18275 to %Objptr*
	store %Objptr %r18273, %Objptr* %r18276
	; CW64 (<Frontier>)  = 0x4D
	%r18277 = load %Pointer, %Pointer* %frontier
	%r18278 = bitcast %Pointer %r18277 to %Word64*
	store %Word64 77, %Word64* %r18278
	; RQ(86): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18279 = load %Pointer, %Pointer* %frontier
	%r18281 = ptrtoint %Pointer %r18279 to %uintptr_t
	%r18282 = add %uintptr_t %r18281, 8
	%r18280 = inttoptr %uintptr_t %r18282 to %Pointer
	store %CPointer %r18280, %CPointer* %regQ_86
	; RP(99): Objptr (opt_38)  = Cast (RQ(86): CPointer, Objptr (opt_38))
	%r18283 = load %CPointer, %CPointer* %regQ_86
	%r18284 = bitcast %CPointer %r18283 to %Objptr
	store %Objptr %r18284, %Objptr* %regP_99
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18285 = load %Pointer, %Pointer* %frontier
	%r18287 = ptrtoint %Pointer %r18285 to %uintptr_t
	%r18288 = add %uintptr_t %r18287, 24
	%r18286 = inttoptr %uintptr_t %r18288 to %Pointer
	store %Pointer %r18286, %Pointer* %frontier
	; OP (RP(99): Objptr (opt_38), 0): Objptr (opt_19)  = RP(60): Objptr (opt_19)
	%r18289 = load %Objptr, %Objptr* %regP_60
	%r18290 = load %Objptr, %Objptr* %regP_99
	%r18291 = getelementptr inbounds i8, %Objptr %r18290, i32 0
	%r18292 = bitcast %Objptr %r18291 to %Objptr*
	store %Objptr %r18289, %Objptr* %r18292
	; OP (RP(99): Objptr (opt_38), 8): Objptr (opt_38)  = RP(98): Objptr (opt_38)
	%r18293 = load %Objptr, %Objptr* %regP_98
	%r18294 = load %Objptr, %Objptr* %regP_99
	%r18295 = getelementptr inbounds i8, %Objptr %r18294, i32 8
	%r18296 = bitcast %Objptr %r18295 to %Objptr*
	store %Objptr %r18293, %Objptr* %r18296
	; CW64 (<Frontier>)  = 0x4D
	%r18297 = load %Pointer, %Pointer* %frontier
	%r18298 = bitcast %Pointer %r18297 to %Word64*
	store %Word64 77, %Word64* %r18298
	; RQ(85): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18299 = load %Pointer, %Pointer* %frontier
	%r18301 = ptrtoint %Pointer %r18299 to %uintptr_t
	%r18302 = add %uintptr_t %r18301, 8
	%r18300 = inttoptr %uintptr_t %r18302 to %Pointer
	store %CPointer %r18300, %CPointer* %regQ_85
	; RP(100): Objptr (opt_38)  = Cast (RQ(85): CPointer, Objptr (opt_38))
	%r18303 = load %CPointer, %CPointer* %regQ_85
	%r18304 = bitcast %CPointer %r18303 to %Objptr
	store %Objptr %r18304, %Objptr* %regP_100
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18305 = load %Pointer, %Pointer* %frontier
	%r18307 = ptrtoint %Pointer %r18305 to %uintptr_t
	%r18308 = add %uintptr_t %r18307, 24
	%r18306 = inttoptr %uintptr_t %r18308 to %Pointer
	store %Pointer %r18306, %Pointer* %frontier
	; OP (RP(100): Objptr (opt_38), 0): Objptr (opt_19)  = RP(59): Objptr (opt_19)
	%r18309 = load %Objptr, %Objptr* %regP_59
	%r18310 = load %Objptr, %Objptr* %regP_100
	%r18311 = getelementptr inbounds i8, %Objptr %r18310, i32 0
	%r18312 = bitcast %Objptr %r18311 to %Objptr*
	store %Objptr %r18309, %Objptr* %r18312
	; OP (RP(100): Objptr (opt_38), 8): Objptr (opt_38)  = RP(99): Objptr (opt_38)
	%r18313 = load %Objptr, %Objptr* %regP_99
	%r18314 = load %Objptr, %Objptr* %regP_100
	%r18315 = getelementptr inbounds i8, %Objptr %r18314, i32 8
	%r18316 = bitcast %Objptr %r18315 to %Objptr*
	store %Objptr %r18313, %Objptr* %r18316
	; CW64 (<Frontier>)  = 0x4D
	%r18317 = load %Pointer, %Pointer* %frontier
	%r18318 = bitcast %Pointer %r18317 to %Word64*
	store %Word64 77, %Word64* %r18318
	; RQ(84): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18319 = load %Pointer, %Pointer* %frontier
	%r18321 = ptrtoint %Pointer %r18319 to %uintptr_t
	%r18322 = add %uintptr_t %r18321, 8
	%r18320 = inttoptr %uintptr_t %r18322 to %Pointer
	store %CPointer %r18320, %CPointer* %regQ_84
	; RP(101): Objptr (opt_38)  = Cast (RQ(84): CPointer, Objptr (opt_38))
	%r18323 = load %CPointer, %CPointer* %regQ_84
	%r18324 = bitcast %CPointer %r18323 to %Objptr
	store %Objptr %r18324, %Objptr* %regP_101
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18325 = load %Pointer, %Pointer* %frontier
	%r18327 = ptrtoint %Pointer %r18325 to %uintptr_t
	%r18328 = add %uintptr_t %r18327, 24
	%r18326 = inttoptr %uintptr_t %r18328 to %Pointer
	store %Pointer %r18326, %Pointer* %frontier
	; OP (RP(101): Objptr (opt_38), 0): Objptr (opt_19)  = RP(58): Objptr (opt_19)
	%r18329 = load %Objptr, %Objptr* %regP_58
	%r18330 = load %Objptr, %Objptr* %regP_101
	%r18331 = getelementptr inbounds i8, %Objptr %r18330, i32 0
	%r18332 = bitcast %Objptr %r18331 to %Objptr*
	store %Objptr %r18329, %Objptr* %r18332
	; OP (RP(101): Objptr (opt_38), 8): Objptr (opt_38)  = RP(100): Objptr (opt_38)
	%r18333 = load %Objptr, %Objptr* %regP_100
	%r18334 = load %Objptr, %Objptr* %regP_101
	%r18335 = getelementptr inbounds i8, %Objptr %r18334, i32 8
	%r18336 = bitcast %Objptr %r18335 to %Objptr*
	store %Objptr %r18333, %Objptr* %r18336
	; CW64 (<Frontier>)  = 0x4D
	%r18337 = load %Pointer, %Pointer* %frontier
	%r18338 = bitcast %Pointer %r18337 to %Word64*
	store %Word64 77, %Word64* %r18338
	; RQ(83): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18339 = load %Pointer, %Pointer* %frontier
	%r18341 = ptrtoint %Pointer %r18339 to %uintptr_t
	%r18342 = add %uintptr_t %r18341, 8
	%r18340 = inttoptr %uintptr_t %r18342 to %Pointer
	store %CPointer %r18340, %CPointer* %regQ_83
	; RP(102): Objptr (opt_38)  = Cast (RQ(83): CPointer, Objptr (opt_38))
	%r18343 = load %CPointer, %CPointer* %regQ_83
	%r18344 = bitcast %CPointer %r18343 to %Objptr
	store %Objptr %r18344, %Objptr* %regP_102
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18345 = load %Pointer, %Pointer* %frontier
	%r18347 = ptrtoint %Pointer %r18345 to %uintptr_t
	%r18348 = add %uintptr_t %r18347, 24
	%r18346 = inttoptr %uintptr_t %r18348 to %Pointer
	store %Pointer %r18346, %Pointer* %frontier
	; OP (RP(102): Objptr (opt_38), 0): Objptr (opt_19)  = RP(57): Objptr (opt_19)
	%r18349 = load %Objptr, %Objptr* %regP_57
	%r18350 = load %Objptr, %Objptr* %regP_102
	%r18351 = getelementptr inbounds i8, %Objptr %r18350, i32 0
	%r18352 = bitcast %Objptr %r18351 to %Objptr*
	store %Objptr %r18349, %Objptr* %r18352
	; OP (RP(102): Objptr (opt_38), 8): Objptr (opt_38)  = RP(101): Objptr (opt_38)
	%r18353 = load %Objptr, %Objptr* %regP_101
	%r18354 = load %Objptr, %Objptr* %regP_102
	%r18355 = getelementptr inbounds i8, %Objptr %r18354, i32 8
	%r18356 = bitcast %Objptr %r18355 to %Objptr*
	store %Objptr %r18353, %Objptr* %r18356
	; CW64 (<Frontier>)  = 0x4D
	%r18357 = load %Pointer, %Pointer* %frontier
	%r18358 = bitcast %Pointer %r18357 to %Word64*
	store %Word64 77, %Word64* %r18358
	; RQ(82): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18359 = load %Pointer, %Pointer* %frontier
	%r18361 = ptrtoint %Pointer %r18359 to %uintptr_t
	%r18362 = add %uintptr_t %r18361, 8
	%r18360 = inttoptr %uintptr_t %r18362 to %Pointer
	store %CPointer %r18360, %CPointer* %regQ_82
	; RP(103): Objptr (opt_38)  = Cast (RQ(82): CPointer, Objptr (opt_38))
	%r18363 = load %CPointer, %CPointer* %regQ_82
	%r18364 = bitcast %CPointer %r18363 to %Objptr
	store %Objptr %r18364, %Objptr* %regP_103
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18365 = load %Pointer, %Pointer* %frontier
	%r18367 = ptrtoint %Pointer %r18365 to %uintptr_t
	%r18368 = add %uintptr_t %r18367, 24
	%r18366 = inttoptr %uintptr_t %r18368 to %Pointer
	store %Pointer %r18366, %Pointer* %frontier
	; OP (RP(103): Objptr (opt_38), 0): Objptr (opt_19)  = RP(56): Objptr (opt_19)
	%r18369 = load %Objptr, %Objptr* %regP_56
	%r18370 = load %Objptr, %Objptr* %regP_103
	%r18371 = getelementptr inbounds i8, %Objptr %r18370, i32 0
	%r18372 = bitcast %Objptr %r18371 to %Objptr*
	store %Objptr %r18369, %Objptr* %r18372
	; OP (RP(103): Objptr (opt_38), 8): Objptr (opt_38)  = RP(102): Objptr (opt_38)
	%r18373 = load %Objptr, %Objptr* %regP_102
	%r18374 = load %Objptr, %Objptr* %regP_103
	%r18375 = getelementptr inbounds i8, %Objptr %r18374, i32 8
	%r18376 = bitcast %Objptr %r18375 to %Objptr*
	store %Objptr %r18373, %Objptr* %r18376
	; CW64 (<Frontier>)  = 0x4D
	%r18377 = load %Pointer, %Pointer* %frontier
	%r18378 = bitcast %Pointer %r18377 to %Word64*
	store %Word64 77, %Word64* %r18378
	; RQ(81): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18379 = load %Pointer, %Pointer* %frontier
	%r18381 = ptrtoint %Pointer %r18379 to %uintptr_t
	%r18382 = add %uintptr_t %r18381, 8
	%r18380 = inttoptr %uintptr_t %r18382 to %Pointer
	store %CPointer %r18380, %CPointer* %regQ_81
	; RP(104): Objptr (opt_38)  = Cast (RQ(81): CPointer, Objptr (opt_38))
	%r18383 = load %CPointer, %CPointer* %regQ_81
	%r18384 = bitcast %CPointer %r18383 to %Objptr
	store %Objptr %r18384, %Objptr* %regP_104
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18385 = load %Pointer, %Pointer* %frontier
	%r18387 = ptrtoint %Pointer %r18385 to %uintptr_t
	%r18388 = add %uintptr_t %r18387, 24
	%r18386 = inttoptr %uintptr_t %r18388 to %Pointer
	store %Pointer %r18386, %Pointer* %frontier
	; OP (RP(104): Objptr (opt_38), 0): Objptr (opt_19)  = RP(55): Objptr (opt_19)
	%r18389 = load %Objptr, %Objptr* %regP_55
	%r18390 = load %Objptr, %Objptr* %regP_104
	%r18391 = getelementptr inbounds i8, %Objptr %r18390, i32 0
	%r18392 = bitcast %Objptr %r18391 to %Objptr*
	store %Objptr %r18389, %Objptr* %r18392
	; OP (RP(104): Objptr (opt_38), 8): Objptr (opt_38)  = RP(103): Objptr (opt_38)
	%r18393 = load %Objptr, %Objptr* %regP_103
	%r18394 = load %Objptr, %Objptr* %regP_104
	%r18395 = getelementptr inbounds i8, %Objptr %r18394, i32 8
	%r18396 = bitcast %Objptr %r18395 to %Objptr*
	store %Objptr %r18393, %Objptr* %r18396
	; CW64 (<Frontier>)  = 0x4D
	%r18397 = load %Pointer, %Pointer* %frontier
	%r18398 = bitcast %Pointer %r18397 to %Word64*
	store %Word64 77, %Word64* %r18398
	; RQ(80): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18399 = load %Pointer, %Pointer* %frontier
	%r18401 = ptrtoint %Pointer %r18399 to %uintptr_t
	%r18402 = add %uintptr_t %r18401, 8
	%r18400 = inttoptr %uintptr_t %r18402 to %Pointer
	store %CPointer %r18400, %CPointer* %regQ_80
	; RP(105): Objptr (opt_38)  = Cast (RQ(80): CPointer, Objptr (opt_38))
	%r18403 = load %CPointer, %CPointer* %regQ_80
	%r18404 = bitcast %CPointer %r18403 to %Objptr
	store %Objptr %r18404, %Objptr* %regP_105
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18405 = load %Pointer, %Pointer* %frontier
	%r18407 = ptrtoint %Pointer %r18405 to %uintptr_t
	%r18408 = add %uintptr_t %r18407, 24
	%r18406 = inttoptr %uintptr_t %r18408 to %Pointer
	store %Pointer %r18406, %Pointer* %frontier
	; OP (RP(105): Objptr (opt_38), 0): Objptr (opt_19)  = RP(54): Objptr (opt_19)
	%r18409 = load %Objptr, %Objptr* %regP_54
	%r18410 = load %Objptr, %Objptr* %regP_105
	%r18411 = getelementptr inbounds i8, %Objptr %r18410, i32 0
	%r18412 = bitcast %Objptr %r18411 to %Objptr*
	store %Objptr %r18409, %Objptr* %r18412
	; OP (RP(105): Objptr (opt_38), 8): Objptr (opt_38)  = RP(104): Objptr (opt_38)
	%r18413 = load %Objptr, %Objptr* %regP_104
	%r18414 = load %Objptr, %Objptr* %regP_105
	%r18415 = getelementptr inbounds i8, %Objptr %r18414, i32 8
	%r18416 = bitcast %Objptr %r18415 to %Objptr*
	store %Objptr %r18413, %Objptr* %r18416
	; CW64 (<Frontier>)  = 0x4D
	%r18417 = load %Pointer, %Pointer* %frontier
	%r18418 = bitcast %Pointer %r18417 to %Word64*
	store %Word64 77, %Word64* %r18418
	; RQ(79): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18419 = load %Pointer, %Pointer* %frontier
	%r18421 = ptrtoint %Pointer %r18419 to %uintptr_t
	%r18422 = add %uintptr_t %r18421, 8
	%r18420 = inttoptr %uintptr_t %r18422 to %Pointer
	store %CPointer %r18420, %CPointer* %regQ_79
	; RP(106): Objptr (opt_38)  = Cast (RQ(79): CPointer, Objptr (opt_38))
	%r18423 = load %CPointer, %CPointer* %regQ_79
	%r18424 = bitcast %CPointer %r18423 to %Objptr
	store %Objptr %r18424, %Objptr* %regP_106
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18425 = load %Pointer, %Pointer* %frontier
	%r18427 = ptrtoint %Pointer %r18425 to %uintptr_t
	%r18428 = add %uintptr_t %r18427, 24
	%r18426 = inttoptr %uintptr_t %r18428 to %Pointer
	store %Pointer %r18426, %Pointer* %frontier
	; OP (RP(106): Objptr (opt_38), 0): Objptr (opt_19)  = RP(53): Objptr (opt_19)
	%r18429 = load %Objptr, %Objptr* %regP_53
	%r18430 = load %Objptr, %Objptr* %regP_106
	%r18431 = getelementptr inbounds i8, %Objptr %r18430, i32 0
	%r18432 = bitcast %Objptr %r18431 to %Objptr*
	store %Objptr %r18429, %Objptr* %r18432
	; OP (RP(106): Objptr (opt_38), 8): Objptr (opt_38)  = RP(105): Objptr (opt_38)
	%r18433 = load %Objptr, %Objptr* %regP_105
	%r18434 = load %Objptr, %Objptr* %regP_106
	%r18435 = getelementptr inbounds i8, %Objptr %r18434, i32 8
	%r18436 = bitcast %Objptr %r18435 to %Objptr*
	store %Objptr %r18433, %Objptr* %r18436
	; CW64 (<Frontier>)  = 0x4D
	%r18437 = load %Pointer, %Pointer* %frontier
	%r18438 = bitcast %Pointer %r18437 to %Word64*
	store %Word64 77, %Word64* %r18438
	; RQ(78): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18439 = load %Pointer, %Pointer* %frontier
	%r18441 = ptrtoint %Pointer %r18439 to %uintptr_t
	%r18442 = add %uintptr_t %r18441, 8
	%r18440 = inttoptr %uintptr_t %r18442 to %Pointer
	store %CPointer %r18440, %CPointer* %regQ_78
	; RP(107): Objptr (opt_38)  = Cast (RQ(78): CPointer, Objptr (opt_38))
	%r18443 = load %CPointer, %CPointer* %regQ_78
	%r18444 = bitcast %CPointer %r18443 to %Objptr
	store %Objptr %r18444, %Objptr* %regP_107
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18445 = load %Pointer, %Pointer* %frontier
	%r18447 = ptrtoint %Pointer %r18445 to %uintptr_t
	%r18448 = add %uintptr_t %r18447, 24
	%r18446 = inttoptr %uintptr_t %r18448 to %Pointer
	store %Pointer %r18446, %Pointer* %frontier
	; OP (RP(107): Objptr (opt_38), 0): Objptr (opt_19)  = RP(52): Objptr (opt_19)
	%r18449 = load %Objptr, %Objptr* %regP_52
	%r18450 = load %Objptr, %Objptr* %regP_107
	%r18451 = getelementptr inbounds i8, %Objptr %r18450, i32 0
	%r18452 = bitcast %Objptr %r18451 to %Objptr*
	store %Objptr %r18449, %Objptr* %r18452
	; OP (RP(107): Objptr (opt_38), 8): Objptr (opt_38)  = RP(106): Objptr (opt_38)
	%r18453 = load %Objptr, %Objptr* %regP_106
	%r18454 = load %Objptr, %Objptr* %regP_107
	%r18455 = getelementptr inbounds i8, %Objptr %r18454, i32 8
	%r18456 = bitcast %Objptr %r18455 to %Objptr*
	store %Objptr %r18453, %Objptr* %r18456
	; CW64 (<Frontier>)  = 0x4D
	%r18457 = load %Pointer, %Pointer* %frontier
	%r18458 = bitcast %Pointer %r18457 to %Word64*
	store %Word64 77, %Word64* %r18458
	; RQ(77): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18459 = load %Pointer, %Pointer* %frontier
	%r18461 = ptrtoint %Pointer %r18459 to %uintptr_t
	%r18462 = add %uintptr_t %r18461, 8
	%r18460 = inttoptr %uintptr_t %r18462 to %Pointer
	store %CPointer %r18460, %CPointer* %regQ_77
	; RP(108): Objptr (opt_38)  = Cast (RQ(77): CPointer, Objptr (opt_38))
	%r18463 = load %CPointer, %CPointer* %regQ_77
	%r18464 = bitcast %CPointer %r18463 to %Objptr
	store %Objptr %r18464, %Objptr* %regP_108
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18465 = load %Pointer, %Pointer* %frontier
	%r18467 = ptrtoint %Pointer %r18465 to %uintptr_t
	%r18468 = add %uintptr_t %r18467, 24
	%r18466 = inttoptr %uintptr_t %r18468 to %Pointer
	store %Pointer %r18466, %Pointer* %frontier
	; OP (RP(108): Objptr (opt_38), 0): Objptr (opt_19)  = RP(51): Objptr (opt_19)
	%r18469 = load %Objptr, %Objptr* %regP_51
	%r18470 = load %Objptr, %Objptr* %regP_108
	%r18471 = getelementptr inbounds i8, %Objptr %r18470, i32 0
	%r18472 = bitcast %Objptr %r18471 to %Objptr*
	store %Objptr %r18469, %Objptr* %r18472
	; OP (RP(108): Objptr (opt_38), 8): Objptr (opt_38)  = RP(107): Objptr (opt_38)
	%r18473 = load %Objptr, %Objptr* %regP_107
	%r18474 = load %Objptr, %Objptr* %regP_108
	%r18475 = getelementptr inbounds i8, %Objptr %r18474, i32 8
	%r18476 = bitcast %Objptr %r18475 to %Objptr*
	store %Objptr %r18473, %Objptr* %r18476
	; CW64 (<Frontier>)  = 0x4D
	%r18477 = load %Pointer, %Pointer* %frontier
	%r18478 = bitcast %Pointer %r18477 to %Word64*
	store %Word64 77, %Word64* %r18478
	; RQ(76): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18479 = load %Pointer, %Pointer* %frontier
	%r18481 = ptrtoint %Pointer %r18479 to %uintptr_t
	%r18482 = add %uintptr_t %r18481, 8
	%r18480 = inttoptr %uintptr_t %r18482 to %Pointer
	store %CPointer %r18480, %CPointer* %regQ_76
	; RP(109): Objptr (opt_38)  = Cast (RQ(76): CPointer, Objptr (opt_38))
	%r18483 = load %CPointer, %CPointer* %regQ_76
	%r18484 = bitcast %CPointer %r18483 to %Objptr
	store %Objptr %r18484, %Objptr* %regP_109
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18485 = load %Pointer, %Pointer* %frontier
	%r18487 = ptrtoint %Pointer %r18485 to %uintptr_t
	%r18488 = add %uintptr_t %r18487, 24
	%r18486 = inttoptr %uintptr_t %r18488 to %Pointer
	store %Pointer %r18486, %Pointer* %frontier
	; OP (RP(109): Objptr (opt_38), 0): Objptr (opt_19)  = RP(50): Objptr (opt_19)
	%r18489 = load %Objptr, %Objptr* %regP_50
	%r18490 = load %Objptr, %Objptr* %regP_109
	%r18491 = getelementptr inbounds i8, %Objptr %r18490, i32 0
	%r18492 = bitcast %Objptr %r18491 to %Objptr*
	store %Objptr %r18489, %Objptr* %r18492
	; OP (RP(109): Objptr (opt_38), 8): Objptr (opt_38)  = RP(108): Objptr (opt_38)
	%r18493 = load %Objptr, %Objptr* %regP_108
	%r18494 = load %Objptr, %Objptr* %regP_109
	%r18495 = getelementptr inbounds i8, %Objptr %r18494, i32 8
	%r18496 = bitcast %Objptr %r18495 to %Objptr*
	store %Objptr %r18493, %Objptr* %r18496
	; CW64 (<Frontier>)  = 0x4D
	%r18497 = load %Pointer, %Pointer* %frontier
	%r18498 = bitcast %Pointer %r18497 to %Word64*
	store %Word64 77, %Word64* %r18498
	; RQ(75): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18499 = load %Pointer, %Pointer* %frontier
	%r18501 = ptrtoint %Pointer %r18499 to %uintptr_t
	%r18502 = add %uintptr_t %r18501, 8
	%r18500 = inttoptr %uintptr_t %r18502 to %Pointer
	store %CPointer %r18500, %CPointer* %regQ_75
	; RP(110): Objptr (opt_38)  = Cast (RQ(75): CPointer, Objptr (opt_38))
	%r18503 = load %CPointer, %CPointer* %regQ_75
	%r18504 = bitcast %CPointer %r18503 to %Objptr
	store %Objptr %r18504, %Objptr* %regP_110
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18505 = load %Pointer, %Pointer* %frontier
	%r18507 = ptrtoint %Pointer %r18505 to %uintptr_t
	%r18508 = add %uintptr_t %r18507, 24
	%r18506 = inttoptr %uintptr_t %r18508 to %Pointer
	store %Pointer %r18506, %Pointer* %frontier
	; OP (RP(110): Objptr (opt_38), 0): Objptr (opt_19)  = RP(49): Objptr (opt_19)
	%r18509 = load %Objptr, %Objptr* %regP_49
	%r18510 = load %Objptr, %Objptr* %regP_110
	%r18511 = getelementptr inbounds i8, %Objptr %r18510, i32 0
	%r18512 = bitcast %Objptr %r18511 to %Objptr*
	store %Objptr %r18509, %Objptr* %r18512
	; OP (RP(110): Objptr (opt_38), 8): Objptr (opt_38)  = RP(109): Objptr (opt_38)
	%r18513 = load %Objptr, %Objptr* %regP_109
	%r18514 = load %Objptr, %Objptr* %regP_110
	%r18515 = getelementptr inbounds i8, %Objptr %r18514, i32 8
	%r18516 = bitcast %Objptr %r18515 to %Objptr*
	store %Objptr %r18513, %Objptr* %r18516
	; CW64 (<Frontier>)  = 0x4D
	%r18517 = load %Pointer, %Pointer* %frontier
	%r18518 = bitcast %Pointer %r18517 to %Word64*
	store %Word64 77, %Word64* %r18518
	; RQ(74): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18519 = load %Pointer, %Pointer* %frontier
	%r18521 = ptrtoint %Pointer %r18519 to %uintptr_t
	%r18522 = add %uintptr_t %r18521, 8
	%r18520 = inttoptr %uintptr_t %r18522 to %Pointer
	store %CPointer %r18520, %CPointer* %regQ_74
	; RP(111): Objptr (opt_38)  = Cast (RQ(74): CPointer, Objptr (opt_38))
	%r18523 = load %CPointer, %CPointer* %regQ_74
	%r18524 = bitcast %CPointer %r18523 to %Objptr
	store %Objptr %r18524, %Objptr* %regP_111
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18525 = load %Pointer, %Pointer* %frontier
	%r18527 = ptrtoint %Pointer %r18525 to %uintptr_t
	%r18528 = add %uintptr_t %r18527, 24
	%r18526 = inttoptr %uintptr_t %r18528 to %Pointer
	store %Pointer %r18526, %Pointer* %frontier
	; OP (RP(111): Objptr (opt_38), 0): Objptr (opt_19)  = RP(48): Objptr (opt_19)
	%r18529 = load %Objptr, %Objptr* %regP_48
	%r18530 = load %Objptr, %Objptr* %regP_111
	%r18531 = getelementptr inbounds i8, %Objptr %r18530, i32 0
	%r18532 = bitcast %Objptr %r18531 to %Objptr*
	store %Objptr %r18529, %Objptr* %r18532
	; OP (RP(111): Objptr (opt_38), 8): Objptr (opt_38)  = RP(110): Objptr (opt_38)
	%r18533 = load %Objptr, %Objptr* %regP_110
	%r18534 = load %Objptr, %Objptr* %regP_111
	%r18535 = getelementptr inbounds i8, %Objptr %r18534, i32 8
	%r18536 = bitcast %Objptr %r18535 to %Objptr*
	store %Objptr %r18533, %Objptr* %r18536
	; CW64 (<Frontier>)  = 0x4D
	%r18537 = load %Pointer, %Pointer* %frontier
	%r18538 = bitcast %Pointer %r18537 to %Word64*
	store %Word64 77, %Word64* %r18538
	; RQ(73): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18539 = load %Pointer, %Pointer* %frontier
	%r18541 = ptrtoint %Pointer %r18539 to %uintptr_t
	%r18542 = add %uintptr_t %r18541, 8
	%r18540 = inttoptr %uintptr_t %r18542 to %Pointer
	store %CPointer %r18540, %CPointer* %regQ_73
	; RP(112): Objptr (opt_38)  = Cast (RQ(73): CPointer, Objptr (opt_38))
	%r18543 = load %CPointer, %CPointer* %regQ_73
	%r18544 = bitcast %CPointer %r18543 to %Objptr
	store %Objptr %r18544, %Objptr* %regP_112
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18545 = load %Pointer, %Pointer* %frontier
	%r18547 = ptrtoint %Pointer %r18545 to %uintptr_t
	%r18548 = add %uintptr_t %r18547, 24
	%r18546 = inttoptr %uintptr_t %r18548 to %Pointer
	store %Pointer %r18546, %Pointer* %frontier
	; OP (RP(112): Objptr (opt_38), 0): Objptr (opt_19)  = RP(47): Objptr (opt_19)
	%r18549 = load %Objptr, %Objptr* %regP_47
	%r18550 = load %Objptr, %Objptr* %regP_112
	%r18551 = getelementptr inbounds i8, %Objptr %r18550, i32 0
	%r18552 = bitcast %Objptr %r18551 to %Objptr*
	store %Objptr %r18549, %Objptr* %r18552
	; OP (RP(112): Objptr (opt_38), 8): Objptr (opt_38)  = RP(111): Objptr (opt_38)
	%r18553 = load %Objptr, %Objptr* %regP_111
	%r18554 = load %Objptr, %Objptr* %regP_112
	%r18555 = getelementptr inbounds i8, %Objptr %r18554, i32 8
	%r18556 = bitcast %Objptr %r18555 to %Objptr*
	store %Objptr %r18553, %Objptr* %r18556
	; CW64 (<Frontier>)  = 0x4D
	%r18557 = load %Pointer, %Pointer* %frontier
	%r18558 = bitcast %Pointer %r18557 to %Word64*
	store %Word64 77, %Word64* %r18558
	; RQ(72): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18559 = load %Pointer, %Pointer* %frontier
	%r18561 = ptrtoint %Pointer %r18559 to %uintptr_t
	%r18562 = add %uintptr_t %r18561, 8
	%r18560 = inttoptr %uintptr_t %r18562 to %Pointer
	store %CPointer %r18560, %CPointer* %regQ_72
	; RP(113): Objptr (opt_38)  = Cast (RQ(72): CPointer, Objptr (opt_38))
	%r18563 = load %CPointer, %CPointer* %regQ_72
	%r18564 = bitcast %CPointer %r18563 to %Objptr
	store %Objptr %r18564, %Objptr* %regP_113
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18565 = load %Pointer, %Pointer* %frontier
	%r18567 = ptrtoint %Pointer %r18565 to %uintptr_t
	%r18568 = add %uintptr_t %r18567, 24
	%r18566 = inttoptr %uintptr_t %r18568 to %Pointer
	store %Pointer %r18566, %Pointer* %frontier
	; OP (RP(113): Objptr (opt_38), 0): Objptr (opt_19)  = RP(46): Objptr (opt_19)
	%r18569 = load %Objptr, %Objptr* %regP_46
	%r18570 = load %Objptr, %Objptr* %regP_113
	%r18571 = getelementptr inbounds i8, %Objptr %r18570, i32 0
	%r18572 = bitcast %Objptr %r18571 to %Objptr*
	store %Objptr %r18569, %Objptr* %r18572
	; OP (RP(113): Objptr (opt_38), 8): Objptr (opt_38)  = RP(112): Objptr (opt_38)
	%r18573 = load %Objptr, %Objptr* %regP_112
	%r18574 = load %Objptr, %Objptr* %regP_113
	%r18575 = getelementptr inbounds i8, %Objptr %r18574, i32 8
	%r18576 = bitcast %Objptr %r18575 to %Objptr*
	store %Objptr %r18573, %Objptr* %r18576
	; CW64 (<Frontier>)  = 0x4D
	%r18577 = load %Pointer, %Pointer* %frontier
	%r18578 = bitcast %Pointer %r18577 to %Word64*
	store %Word64 77, %Word64* %r18578
	; RQ(71): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18579 = load %Pointer, %Pointer* %frontier
	%r18581 = ptrtoint %Pointer %r18579 to %uintptr_t
	%r18582 = add %uintptr_t %r18581, 8
	%r18580 = inttoptr %uintptr_t %r18582 to %Pointer
	store %CPointer %r18580, %CPointer* %regQ_71
	; RP(114): Objptr (opt_38)  = Cast (RQ(71): CPointer, Objptr (opt_38))
	%r18583 = load %CPointer, %CPointer* %regQ_71
	%r18584 = bitcast %CPointer %r18583 to %Objptr
	store %Objptr %r18584, %Objptr* %regP_114
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18585 = load %Pointer, %Pointer* %frontier
	%r18587 = ptrtoint %Pointer %r18585 to %uintptr_t
	%r18588 = add %uintptr_t %r18587, 24
	%r18586 = inttoptr %uintptr_t %r18588 to %Pointer
	store %Pointer %r18586, %Pointer* %frontier
	; OP (RP(114): Objptr (opt_38), 0): Objptr (opt_19)  = RP(45): Objptr (opt_19)
	%r18589 = load %Objptr, %Objptr* %regP_45
	%r18590 = load %Objptr, %Objptr* %regP_114
	%r18591 = getelementptr inbounds i8, %Objptr %r18590, i32 0
	%r18592 = bitcast %Objptr %r18591 to %Objptr*
	store %Objptr %r18589, %Objptr* %r18592
	; OP (RP(114): Objptr (opt_38), 8): Objptr (opt_38)  = RP(113): Objptr (opt_38)
	%r18593 = load %Objptr, %Objptr* %regP_113
	%r18594 = load %Objptr, %Objptr* %regP_114
	%r18595 = getelementptr inbounds i8, %Objptr %r18594, i32 8
	%r18596 = bitcast %Objptr %r18595 to %Objptr*
	store %Objptr %r18593, %Objptr* %r18596
	; CW64 (<Frontier>)  = 0x4D
	%r18597 = load %Pointer, %Pointer* %frontier
	%r18598 = bitcast %Pointer %r18597 to %Word64*
	store %Word64 77, %Word64* %r18598
	; RQ(70): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18599 = load %Pointer, %Pointer* %frontier
	%r18601 = ptrtoint %Pointer %r18599 to %uintptr_t
	%r18602 = add %uintptr_t %r18601, 8
	%r18600 = inttoptr %uintptr_t %r18602 to %Pointer
	store %CPointer %r18600, %CPointer* %regQ_70
	; RP(115): Objptr (opt_38)  = Cast (RQ(70): CPointer, Objptr (opt_38))
	%r18603 = load %CPointer, %CPointer* %regQ_70
	%r18604 = bitcast %CPointer %r18603 to %Objptr
	store %Objptr %r18604, %Objptr* %regP_115
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18605 = load %Pointer, %Pointer* %frontier
	%r18607 = ptrtoint %Pointer %r18605 to %uintptr_t
	%r18608 = add %uintptr_t %r18607, 24
	%r18606 = inttoptr %uintptr_t %r18608 to %Pointer
	store %Pointer %r18606, %Pointer* %frontier
	; OP (RP(115): Objptr (opt_38), 0): Objptr (opt_19)  = RP(44): Objptr (opt_19)
	%r18609 = load %Objptr, %Objptr* %regP_44
	%r18610 = load %Objptr, %Objptr* %regP_115
	%r18611 = getelementptr inbounds i8, %Objptr %r18610, i32 0
	%r18612 = bitcast %Objptr %r18611 to %Objptr*
	store %Objptr %r18609, %Objptr* %r18612
	; OP (RP(115): Objptr (opt_38), 8): Objptr (opt_38)  = RP(114): Objptr (opt_38)
	%r18613 = load %Objptr, %Objptr* %regP_114
	%r18614 = load %Objptr, %Objptr* %regP_115
	%r18615 = getelementptr inbounds i8, %Objptr %r18614, i32 8
	%r18616 = bitcast %Objptr %r18615 to %Objptr*
	store %Objptr %r18613, %Objptr* %r18616
	; CW64 (<Frontier>)  = 0x4D
	%r18617 = load %Pointer, %Pointer* %frontier
	%r18618 = bitcast %Pointer %r18617 to %Word64*
	store %Word64 77, %Word64* %r18618
	; RQ(69): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18619 = load %Pointer, %Pointer* %frontier
	%r18621 = ptrtoint %Pointer %r18619 to %uintptr_t
	%r18622 = add %uintptr_t %r18621, 8
	%r18620 = inttoptr %uintptr_t %r18622 to %Pointer
	store %CPointer %r18620, %CPointer* %regQ_69
	; RP(116): Objptr (opt_38)  = Cast (RQ(69): CPointer, Objptr (opt_38))
	%r18623 = load %CPointer, %CPointer* %regQ_69
	%r18624 = bitcast %CPointer %r18623 to %Objptr
	store %Objptr %r18624, %Objptr* %regP_116
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18625 = load %Pointer, %Pointer* %frontier
	%r18627 = ptrtoint %Pointer %r18625 to %uintptr_t
	%r18628 = add %uintptr_t %r18627, 24
	%r18626 = inttoptr %uintptr_t %r18628 to %Pointer
	store %Pointer %r18626, %Pointer* %frontier
	; OP (RP(116): Objptr (opt_38), 0): Objptr (opt_19)  = RP(43): Objptr (opt_19)
	%r18629 = load %Objptr, %Objptr* %regP_43
	%r18630 = load %Objptr, %Objptr* %regP_116
	%r18631 = getelementptr inbounds i8, %Objptr %r18630, i32 0
	%r18632 = bitcast %Objptr %r18631 to %Objptr*
	store %Objptr %r18629, %Objptr* %r18632
	; OP (RP(116): Objptr (opt_38), 8): Objptr (opt_38)  = RP(115): Objptr (opt_38)
	%r18633 = load %Objptr, %Objptr* %regP_115
	%r18634 = load %Objptr, %Objptr* %regP_116
	%r18635 = getelementptr inbounds i8, %Objptr %r18634, i32 8
	%r18636 = bitcast %Objptr %r18635 to %Objptr*
	store %Objptr %r18633, %Objptr* %r18636
	; CW64 (<Frontier>)  = 0x4D
	%r18637 = load %Pointer, %Pointer* %frontier
	%r18638 = bitcast %Pointer %r18637 to %Word64*
	store %Word64 77, %Word64* %r18638
	; RQ(68): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18639 = load %Pointer, %Pointer* %frontier
	%r18641 = ptrtoint %Pointer %r18639 to %uintptr_t
	%r18642 = add %uintptr_t %r18641, 8
	%r18640 = inttoptr %uintptr_t %r18642 to %Pointer
	store %CPointer %r18640, %CPointer* %regQ_68
	; RP(117): Objptr (opt_38)  = Cast (RQ(68): CPointer, Objptr (opt_38))
	%r18643 = load %CPointer, %CPointer* %regQ_68
	%r18644 = bitcast %CPointer %r18643 to %Objptr
	store %Objptr %r18644, %Objptr* %regP_117
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18645 = load %Pointer, %Pointer* %frontier
	%r18647 = ptrtoint %Pointer %r18645 to %uintptr_t
	%r18648 = add %uintptr_t %r18647, 24
	%r18646 = inttoptr %uintptr_t %r18648 to %Pointer
	store %Pointer %r18646, %Pointer* %frontier
	; OP (RP(117): Objptr (opt_38), 0): Objptr (opt_19)  = RP(42): Objptr (opt_19)
	%r18649 = load %Objptr, %Objptr* %regP_42
	%r18650 = load %Objptr, %Objptr* %regP_117
	%r18651 = getelementptr inbounds i8, %Objptr %r18650, i32 0
	%r18652 = bitcast %Objptr %r18651 to %Objptr*
	store %Objptr %r18649, %Objptr* %r18652
	; OP (RP(117): Objptr (opt_38), 8): Objptr (opt_38)  = RP(116): Objptr (opt_38)
	%r18653 = load %Objptr, %Objptr* %regP_116
	%r18654 = load %Objptr, %Objptr* %regP_117
	%r18655 = getelementptr inbounds i8, %Objptr %r18654, i32 8
	%r18656 = bitcast %Objptr %r18655 to %Objptr*
	store %Objptr %r18653, %Objptr* %r18656
	; CW64 (<Frontier>)  = 0x4D
	%r18657 = load %Pointer, %Pointer* %frontier
	%r18658 = bitcast %Pointer %r18657 to %Word64*
	store %Word64 77, %Word64* %r18658
	; RQ(67): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18659 = load %Pointer, %Pointer* %frontier
	%r18661 = ptrtoint %Pointer %r18659 to %uintptr_t
	%r18662 = add %uintptr_t %r18661, 8
	%r18660 = inttoptr %uintptr_t %r18662 to %Pointer
	store %CPointer %r18660, %CPointer* %regQ_67
	; RP(118): Objptr (opt_38)  = Cast (RQ(67): CPointer, Objptr (opt_38))
	%r18663 = load %CPointer, %CPointer* %regQ_67
	%r18664 = bitcast %CPointer %r18663 to %Objptr
	store %Objptr %r18664, %Objptr* %regP_118
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18665 = load %Pointer, %Pointer* %frontier
	%r18667 = ptrtoint %Pointer %r18665 to %uintptr_t
	%r18668 = add %uintptr_t %r18667, 24
	%r18666 = inttoptr %uintptr_t %r18668 to %Pointer
	store %Pointer %r18666, %Pointer* %frontier
	; OP (RP(118): Objptr (opt_38), 0): Objptr (opt_19)  = RP(41): Objptr (opt_19)
	%r18669 = load %Objptr, %Objptr* %regP_41
	%r18670 = load %Objptr, %Objptr* %regP_118
	%r18671 = getelementptr inbounds i8, %Objptr %r18670, i32 0
	%r18672 = bitcast %Objptr %r18671 to %Objptr*
	store %Objptr %r18669, %Objptr* %r18672
	; OP (RP(118): Objptr (opt_38), 8): Objptr (opt_38)  = RP(117): Objptr (opt_38)
	%r18673 = load %Objptr, %Objptr* %regP_117
	%r18674 = load %Objptr, %Objptr* %regP_118
	%r18675 = getelementptr inbounds i8, %Objptr %r18674, i32 8
	%r18676 = bitcast %Objptr %r18675 to %Objptr*
	store %Objptr %r18673, %Objptr* %r18676
	; CW64 (<Frontier>)  = 0x4D
	%r18677 = load %Pointer, %Pointer* %frontier
	%r18678 = bitcast %Pointer %r18677 to %Word64*
	store %Word64 77, %Word64* %r18678
	; RQ(66): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18679 = load %Pointer, %Pointer* %frontier
	%r18681 = ptrtoint %Pointer %r18679 to %uintptr_t
	%r18682 = add %uintptr_t %r18681, 8
	%r18680 = inttoptr %uintptr_t %r18682 to %Pointer
	store %CPointer %r18680, %CPointer* %regQ_66
	; RP(119): Objptr (opt_38)  = Cast (RQ(66): CPointer, Objptr (opt_38))
	%r18683 = load %CPointer, %CPointer* %regQ_66
	%r18684 = bitcast %CPointer %r18683 to %Objptr
	store %Objptr %r18684, %Objptr* %regP_119
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18685 = load %Pointer, %Pointer* %frontier
	%r18687 = ptrtoint %Pointer %r18685 to %uintptr_t
	%r18688 = add %uintptr_t %r18687, 24
	%r18686 = inttoptr %uintptr_t %r18688 to %Pointer
	store %Pointer %r18686, %Pointer* %frontier
	; OP (RP(119): Objptr (opt_38), 0): Objptr (opt_19)  = RP(40): Objptr (opt_19)
	%r18689 = load %Objptr, %Objptr* %regP_40
	%r18690 = load %Objptr, %Objptr* %regP_119
	%r18691 = getelementptr inbounds i8, %Objptr %r18690, i32 0
	%r18692 = bitcast %Objptr %r18691 to %Objptr*
	store %Objptr %r18689, %Objptr* %r18692
	; OP (RP(119): Objptr (opt_38), 8): Objptr (opt_38)  = RP(118): Objptr (opt_38)
	%r18693 = load %Objptr, %Objptr* %regP_118
	%r18694 = load %Objptr, %Objptr* %regP_119
	%r18695 = getelementptr inbounds i8, %Objptr %r18694, i32 8
	%r18696 = bitcast %Objptr %r18695 to %Objptr*
	store %Objptr %r18693, %Objptr* %r18696
	; CW64 (<Frontier>)  = 0x4D
	%r18697 = load %Pointer, %Pointer* %frontier
	%r18698 = bitcast %Pointer %r18697 to %Word64*
	store %Word64 77, %Word64* %r18698
	; RQ(65): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18699 = load %Pointer, %Pointer* %frontier
	%r18701 = ptrtoint %Pointer %r18699 to %uintptr_t
	%r18702 = add %uintptr_t %r18701, 8
	%r18700 = inttoptr %uintptr_t %r18702 to %Pointer
	store %CPointer %r18700, %CPointer* %regQ_65
	; RP(120): Objptr (opt_38)  = Cast (RQ(65): CPointer, Objptr (opt_38))
	%r18703 = load %CPointer, %CPointer* %regQ_65
	%r18704 = bitcast %CPointer %r18703 to %Objptr
	store %Objptr %r18704, %Objptr* %regP_120
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18705 = load %Pointer, %Pointer* %frontier
	%r18707 = ptrtoint %Pointer %r18705 to %uintptr_t
	%r18708 = add %uintptr_t %r18707, 24
	%r18706 = inttoptr %uintptr_t %r18708 to %Pointer
	store %Pointer %r18706, %Pointer* %frontier
	; OP (RP(120): Objptr (opt_38), 0): Objptr (opt_19)  = RP(39): Objptr (opt_19)
	%r18709 = load %Objptr, %Objptr* %regP_39
	%r18710 = load %Objptr, %Objptr* %regP_120
	%r18711 = getelementptr inbounds i8, %Objptr %r18710, i32 0
	%r18712 = bitcast %Objptr %r18711 to %Objptr*
	store %Objptr %r18709, %Objptr* %r18712
	; OP (RP(120): Objptr (opt_38), 8): Objptr (opt_38)  = RP(119): Objptr (opt_38)
	%r18713 = load %Objptr, %Objptr* %regP_119
	%r18714 = load %Objptr, %Objptr* %regP_120
	%r18715 = getelementptr inbounds i8, %Objptr %r18714, i32 8
	%r18716 = bitcast %Objptr %r18715 to %Objptr*
	store %Objptr %r18713, %Objptr* %r18716
	; CW64 (<Frontier>)  = 0x4D
	%r18717 = load %Pointer, %Pointer* %frontier
	%r18718 = bitcast %Pointer %r18717 to %Word64*
	store %Word64 77, %Word64* %r18718
	; RQ(64): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18719 = load %Pointer, %Pointer* %frontier
	%r18721 = ptrtoint %Pointer %r18719 to %uintptr_t
	%r18722 = add %uintptr_t %r18721, 8
	%r18720 = inttoptr %uintptr_t %r18722 to %Pointer
	store %CPointer %r18720, %CPointer* %regQ_64
	; RP(121): Objptr (opt_38)  = Cast (RQ(64): CPointer, Objptr (opt_38))
	%r18723 = load %CPointer, %CPointer* %regQ_64
	%r18724 = bitcast %CPointer %r18723 to %Objptr
	store %Objptr %r18724, %Objptr* %regP_121
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18725 = load %Pointer, %Pointer* %frontier
	%r18727 = ptrtoint %Pointer %r18725 to %uintptr_t
	%r18728 = add %uintptr_t %r18727, 24
	%r18726 = inttoptr %uintptr_t %r18728 to %Pointer
	store %Pointer %r18726, %Pointer* %frontier
	; OP (RP(121): Objptr (opt_38), 0): Objptr (opt_19)  = RP(38): Objptr (opt_19)
	%r18729 = load %Objptr, %Objptr* %regP_38
	%r18730 = load %Objptr, %Objptr* %regP_121
	%r18731 = getelementptr inbounds i8, %Objptr %r18730, i32 0
	%r18732 = bitcast %Objptr %r18731 to %Objptr*
	store %Objptr %r18729, %Objptr* %r18732
	; OP (RP(121): Objptr (opt_38), 8): Objptr (opt_38)  = RP(120): Objptr (opt_38)
	%r18733 = load %Objptr, %Objptr* %regP_120
	%r18734 = load %Objptr, %Objptr* %regP_121
	%r18735 = getelementptr inbounds i8, %Objptr %r18734, i32 8
	%r18736 = bitcast %Objptr %r18735 to %Objptr*
	store %Objptr %r18733, %Objptr* %r18736
	; CW64 (<Frontier>)  = 0x4D
	%r18737 = load %Pointer, %Pointer* %frontier
	%r18738 = bitcast %Pointer %r18737 to %Word64*
	store %Word64 77, %Word64* %r18738
	; RQ(63): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18739 = load %Pointer, %Pointer* %frontier
	%r18741 = ptrtoint %Pointer %r18739 to %uintptr_t
	%r18742 = add %uintptr_t %r18741, 8
	%r18740 = inttoptr %uintptr_t %r18742 to %Pointer
	store %CPointer %r18740, %CPointer* %regQ_63
	; RP(122): Objptr (opt_38)  = Cast (RQ(63): CPointer, Objptr (opt_38))
	%r18743 = load %CPointer, %CPointer* %regQ_63
	%r18744 = bitcast %CPointer %r18743 to %Objptr
	store %Objptr %r18744, %Objptr* %regP_122
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18745 = load %Pointer, %Pointer* %frontier
	%r18747 = ptrtoint %Pointer %r18745 to %uintptr_t
	%r18748 = add %uintptr_t %r18747, 24
	%r18746 = inttoptr %uintptr_t %r18748 to %Pointer
	store %Pointer %r18746, %Pointer* %frontier
	; OP (RP(122): Objptr (opt_38), 0): Objptr (opt_19)  = RP(37): Objptr (opt_19)
	%r18749 = load %Objptr, %Objptr* %regP_37
	%r18750 = load %Objptr, %Objptr* %regP_122
	%r18751 = getelementptr inbounds i8, %Objptr %r18750, i32 0
	%r18752 = bitcast %Objptr %r18751 to %Objptr*
	store %Objptr %r18749, %Objptr* %r18752
	; OP (RP(122): Objptr (opt_38), 8): Objptr (opt_38)  = RP(121): Objptr (opt_38)
	%r18753 = load %Objptr, %Objptr* %regP_121
	%r18754 = load %Objptr, %Objptr* %regP_122
	%r18755 = getelementptr inbounds i8, %Objptr %r18754, i32 8
	%r18756 = bitcast %Objptr %r18755 to %Objptr*
	store %Objptr %r18753, %Objptr* %r18756
	; CW64 (<Frontier>)  = 0x4D
	%r18757 = load %Pointer, %Pointer* %frontier
	%r18758 = bitcast %Pointer %r18757 to %Word64*
	store %Word64 77, %Word64* %r18758
	; RQ(62): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18759 = load %Pointer, %Pointer* %frontier
	%r18761 = ptrtoint %Pointer %r18759 to %uintptr_t
	%r18762 = add %uintptr_t %r18761, 8
	%r18760 = inttoptr %uintptr_t %r18762 to %Pointer
	store %CPointer %r18760, %CPointer* %regQ_62
	; RP(123): Objptr (opt_38)  = Cast (RQ(62): CPointer, Objptr (opt_38))
	%r18763 = load %CPointer, %CPointer* %regQ_62
	%r18764 = bitcast %CPointer %r18763 to %Objptr
	store %Objptr %r18764, %Objptr* %regP_123
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18765 = load %Pointer, %Pointer* %frontier
	%r18767 = ptrtoint %Pointer %r18765 to %uintptr_t
	%r18768 = add %uintptr_t %r18767, 24
	%r18766 = inttoptr %uintptr_t %r18768 to %Pointer
	store %Pointer %r18766, %Pointer* %frontier
	; OP (RP(123): Objptr (opt_38), 0): Objptr (opt_19)  = RP(36): Objptr (opt_19)
	%r18769 = load %Objptr, %Objptr* %regP_36
	%r18770 = load %Objptr, %Objptr* %regP_123
	%r18771 = getelementptr inbounds i8, %Objptr %r18770, i32 0
	%r18772 = bitcast %Objptr %r18771 to %Objptr*
	store %Objptr %r18769, %Objptr* %r18772
	; OP (RP(123): Objptr (opt_38), 8): Objptr (opt_38)  = RP(122): Objptr (opt_38)
	%r18773 = load %Objptr, %Objptr* %regP_122
	%r18774 = load %Objptr, %Objptr* %regP_123
	%r18775 = getelementptr inbounds i8, %Objptr %r18774, i32 8
	%r18776 = bitcast %Objptr %r18775 to %Objptr*
	store %Objptr %r18773, %Objptr* %r18776
	; CW64 (<Frontier>)  = 0x4D
	%r18777 = load %Pointer, %Pointer* %frontier
	%r18778 = bitcast %Pointer %r18777 to %Word64*
	store %Word64 77, %Word64* %r18778
	; RQ(61): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18779 = load %Pointer, %Pointer* %frontier
	%r18781 = ptrtoint %Pointer %r18779 to %uintptr_t
	%r18782 = add %uintptr_t %r18781, 8
	%r18780 = inttoptr %uintptr_t %r18782 to %Pointer
	store %CPointer %r18780, %CPointer* %regQ_61
	; RP(124): Objptr (opt_38)  = Cast (RQ(61): CPointer, Objptr (opt_38))
	%r18783 = load %CPointer, %CPointer* %regQ_61
	%r18784 = bitcast %CPointer %r18783 to %Objptr
	store %Objptr %r18784, %Objptr* %regP_124
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18785 = load %Pointer, %Pointer* %frontier
	%r18787 = ptrtoint %Pointer %r18785 to %uintptr_t
	%r18788 = add %uintptr_t %r18787, 24
	%r18786 = inttoptr %uintptr_t %r18788 to %Pointer
	store %Pointer %r18786, %Pointer* %frontier
	; OP (RP(124): Objptr (opt_38), 0): Objptr (opt_19)  = RP(35): Objptr (opt_19)
	%r18789 = load %Objptr, %Objptr* %regP_35
	%r18790 = load %Objptr, %Objptr* %regP_124
	%r18791 = getelementptr inbounds i8, %Objptr %r18790, i32 0
	%r18792 = bitcast %Objptr %r18791 to %Objptr*
	store %Objptr %r18789, %Objptr* %r18792
	; OP (RP(124): Objptr (opt_38), 8): Objptr (opt_38)  = RP(123): Objptr (opt_38)
	%r18793 = load %Objptr, %Objptr* %regP_123
	%r18794 = load %Objptr, %Objptr* %regP_124
	%r18795 = getelementptr inbounds i8, %Objptr %r18794, i32 8
	%r18796 = bitcast %Objptr %r18795 to %Objptr*
	store %Objptr %r18793, %Objptr* %r18796
	; CW64 (<Frontier>)  = 0x4D
	%r18797 = load %Pointer, %Pointer* %frontier
	%r18798 = bitcast %Pointer %r18797 to %Word64*
	store %Word64 77, %Word64* %r18798
	; RQ(60): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18799 = load %Pointer, %Pointer* %frontier
	%r18801 = ptrtoint %Pointer %r18799 to %uintptr_t
	%r18802 = add %uintptr_t %r18801, 8
	%r18800 = inttoptr %uintptr_t %r18802 to %Pointer
	store %CPointer %r18800, %CPointer* %regQ_60
	; RP(125): Objptr (opt_38)  = Cast (RQ(60): CPointer, Objptr (opt_38))
	%r18803 = load %CPointer, %CPointer* %regQ_60
	%r18804 = bitcast %CPointer %r18803 to %Objptr
	store %Objptr %r18804, %Objptr* %regP_125
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18805 = load %Pointer, %Pointer* %frontier
	%r18807 = ptrtoint %Pointer %r18805 to %uintptr_t
	%r18808 = add %uintptr_t %r18807, 24
	%r18806 = inttoptr %uintptr_t %r18808 to %Pointer
	store %Pointer %r18806, %Pointer* %frontier
	; OP (RP(125): Objptr (opt_38), 0): Objptr (opt_19)  = RP(34): Objptr (opt_19)
	%r18809 = load %Objptr, %Objptr* %regP_34
	%r18810 = load %Objptr, %Objptr* %regP_125
	%r18811 = getelementptr inbounds i8, %Objptr %r18810, i32 0
	%r18812 = bitcast %Objptr %r18811 to %Objptr*
	store %Objptr %r18809, %Objptr* %r18812
	; OP (RP(125): Objptr (opt_38), 8): Objptr (opt_38)  = RP(124): Objptr (opt_38)
	%r18813 = load %Objptr, %Objptr* %regP_124
	%r18814 = load %Objptr, %Objptr* %regP_125
	%r18815 = getelementptr inbounds i8, %Objptr %r18814, i32 8
	%r18816 = bitcast %Objptr %r18815 to %Objptr*
	store %Objptr %r18813, %Objptr* %r18816
	; CW64 (<Frontier>)  = 0x4D
	%r18817 = load %Pointer, %Pointer* %frontier
	%r18818 = bitcast %Pointer %r18817 to %Word64*
	store %Word64 77, %Word64* %r18818
	; RQ(59): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18819 = load %Pointer, %Pointer* %frontier
	%r18821 = ptrtoint %Pointer %r18819 to %uintptr_t
	%r18822 = add %uintptr_t %r18821, 8
	%r18820 = inttoptr %uintptr_t %r18822 to %Pointer
	store %CPointer %r18820, %CPointer* %regQ_59
	; RP(126): Objptr (opt_38)  = Cast (RQ(59): CPointer, Objptr (opt_38))
	%r18823 = load %CPointer, %CPointer* %regQ_59
	%r18824 = bitcast %CPointer %r18823 to %Objptr
	store %Objptr %r18824, %Objptr* %regP_126
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18825 = load %Pointer, %Pointer* %frontier
	%r18827 = ptrtoint %Pointer %r18825 to %uintptr_t
	%r18828 = add %uintptr_t %r18827, 24
	%r18826 = inttoptr %uintptr_t %r18828 to %Pointer
	store %Pointer %r18826, %Pointer* %frontier
	; OP (RP(126): Objptr (opt_38), 0): Objptr (opt_19)  = RP(33): Objptr (opt_19)
	%r18829 = load %Objptr, %Objptr* %regP_33
	%r18830 = load %Objptr, %Objptr* %regP_126
	%r18831 = getelementptr inbounds i8, %Objptr %r18830, i32 0
	%r18832 = bitcast %Objptr %r18831 to %Objptr*
	store %Objptr %r18829, %Objptr* %r18832
	; OP (RP(126): Objptr (opt_38), 8): Objptr (opt_38)  = RP(125): Objptr (opt_38)
	%r18833 = load %Objptr, %Objptr* %regP_125
	%r18834 = load %Objptr, %Objptr* %regP_126
	%r18835 = getelementptr inbounds i8, %Objptr %r18834, i32 8
	%r18836 = bitcast %Objptr %r18835 to %Objptr*
	store %Objptr %r18833, %Objptr* %r18836
	; CW64 (<Frontier>)  = 0x4D
	%r18837 = load %Pointer, %Pointer* %frontier
	%r18838 = bitcast %Pointer %r18837 to %Word64*
	store %Word64 77, %Word64* %r18838
	; RQ(58): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18839 = load %Pointer, %Pointer* %frontier
	%r18841 = ptrtoint %Pointer %r18839 to %uintptr_t
	%r18842 = add %uintptr_t %r18841, 8
	%r18840 = inttoptr %uintptr_t %r18842 to %Pointer
	store %CPointer %r18840, %CPointer* %regQ_58
	; RP(127): Objptr (opt_38)  = Cast (RQ(58): CPointer, Objptr (opt_38))
	%r18843 = load %CPointer, %CPointer* %regQ_58
	%r18844 = bitcast %CPointer %r18843 to %Objptr
	store %Objptr %r18844, %Objptr* %regP_127
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18845 = load %Pointer, %Pointer* %frontier
	%r18847 = ptrtoint %Pointer %r18845 to %uintptr_t
	%r18848 = add %uintptr_t %r18847, 24
	%r18846 = inttoptr %uintptr_t %r18848 to %Pointer
	store %Pointer %r18846, %Pointer* %frontier
	; OP (RP(127): Objptr (opt_38), 0): Objptr (opt_19)  = RP(32): Objptr (opt_19)
	%r18849 = load %Objptr, %Objptr* %regP_32
	%r18850 = load %Objptr, %Objptr* %regP_127
	%r18851 = getelementptr inbounds i8, %Objptr %r18850, i32 0
	%r18852 = bitcast %Objptr %r18851 to %Objptr*
	store %Objptr %r18849, %Objptr* %r18852
	; OP (RP(127): Objptr (opt_38), 8): Objptr (opt_38)  = RP(126): Objptr (opt_38)
	%r18853 = load %Objptr, %Objptr* %regP_126
	%r18854 = load %Objptr, %Objptr* %regP_127
	%r18855 = getelementptr inbounds i8, %Objptr %r18854, i32 8
	%r18856 = bitcast %Objptr %r18855 to %Objptr*
	store %Objptr %r18853, %Objptr* %r18856
	; CW64 (<Frontier>)  = 0x4D
	%r18857 = load %Pointer, %Pointer* %frontier
	%r18858 = bitcast %Pointer %r18857 to %Word64*
	store %Word64 77, %Word64* %r18858
	; RQ(57): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18859 = load %Pointer, %Pointer* %frontier
	%r18861 = ptrtoint %Pointer %r18859 to %uintptr_t
	%r18862 = add %uintptr_t %r18861, 8
	%r18860 = inttoptr %uintptr_t %r18862 to %Pointer
	store %CPointer %r18860, %CPointer* %regQ_57
	; RP(128): Objptr (opt_38)  = Cast (RQ(57): CPointer, Objptr (opt_38))
	%r18863 = load %CPointer, %CPointer* %regQ_57
	%r18864 = bitcast %CPointer %r18863 to %Objptr
	store %Objptr %r18864, %Objptr* %regP_128
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18865 = load %Pointer, %Pointer* %frontier
	%r18867 = ptrtoint %Pointer %r18865 to %uintptr_t
	%r18868 = add %uintptr_t %r18867, 24
	%r18866 = inttoptr %uintptr_t %r18868 to %Pointer
	store %Pointer %r18866, %Pointer* %frontier
	; OP (RP(128): Objptr (opt_38), 0): Objptr (opt_19)  = RP(31): Objptr (opt_19)
	%r18869 = load %Objptr, %Objptr* %regP_31
	%r18870 = load %Objptr, %Objptr* %regP_128
	%r18871 = getelementptr inbounds i8, %Objptr %r18870, i32 0
	%r18872 = bitcast %Objptr %r18871 to %Objptr*
	store %Objptr %r18869, %Objptr* %r18872
	; OP (RP(128): Objptr (opt_38), 8): Objptr (opt_38)  = RP(127): Objptr (opt_38)
	%r18873 = load %Objptr, %Objptr* %regP_127
	%r18874 = load %Objptr, %Objptr* %regP_128
	%r18875 = getelementptr inbounds i8, %Objptr %r18874, i32 8
	%r18876 = bitcast %Objptr %r18875 to %Objptr*
	store %Objptr %r18873, %Objptr* %r18876
	; CW64 (<Frontier>)  = 0x4D
	%r18877 = load %Pointer, %Pointer* %frontier
	%r18878 = bitcast %Pointer %r18877 to %Word64*
	store %Word64 77, %Word64* %r18878
	; RQ(56): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18879 = load %Pointer, %Pointer* %frontier
	%r18881 = ptrtoint %Pointer %r18879 to %uintptr_t
	%r18882 = add %uintptr_t %r18881, 8
	%r18880 = inttoptr %uintptr_t %r18882 to %Pointer
	store %CPointer %r18880, %CPointer* %regQ_56
	; RP(129): Objptr (opt_38)  = Cast (RQ(56): CPointer, Objptr (opt_38))
	%r18883 = load %CPointer, %CPointer* %regQ_56
	%r18884 = bitcast %CPointer %r18883 to %Objptr
	store %Objptr %r18884, %Objptr* %regP_129
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18885 = load %Pointer, %Pointer* %frontier
	%r18887 = ptrtoint %Pointer %r18885 to %uintptr_t
	%r18888 = add %uintptr_t %r18887, 24
	%r18886 = inttoptr %uintptr_t %r18888 to %Pointer
	store %Pointer %r18886, %Pointer* %frontier
	; OP (RP(129): Objptr (opt_38), 0): Objptr (opt_19)  = RP(30): Objptr (opt_19)
	%r18889 = load %Objptr, %Objptr* %regP_30
	%r18890 = load %Objptr, %Objptr* %regP_129
	%r18891 = getelementptr inbounds i8, %Objptr %r18890, i32 0
	%r18892 = bitcast %Objptr %r18891 to %Objptr*
	store %Objptr %r18889, %Objptr* %r18892
	; OP (RP(129): Objptr (opt_38), 8): Objptr (opt_38)  = RP(128): Objptr (opt_38)
	%r18893 = load %Objptr, %Objptr* %regP_128
	%r18894 = load %Objptr, %Objptr* %regP_129
	%r18895 = getelementptr inbounds i8, %Objptr %r18894, i32 8
	%r18896 = bitcast %Objptr %r18895 to %Objptr*
	store %Objptr %r18893, %Objptr* %r18896
	; CW64 (<Frontier>)  = 0x4D
	%r18897 = load %Pointer, %Pointer* %frontier
	%r18898 = bitcast %Pointer %r18897 to %Word64*
	store %Word64 77, %Word64* %r18898
	; RQ(55): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18899 = load %Pointer, %Pointer* %frontier
	%r18901 = ptrtoint %Pointer %r18899 to %uintptr_t
	%r18902 = add %uintptr_t %r18901, 8
	%r18900 = inttoptr %uintptr_t %r18902 to %Pointer
	store %CPointer %r18900, %CPointer* %regQ_55
	; RP(130): Objptr (opt_38)  = Cast (RQ(55): CPointer, Objptr (opt_38))
	%r18903 = load %CPointer, %CPointer* %regQ_55
	%r18904 = bitcast %CPointer %r18903 to %Objptr
	store %Objptr %r18904, %Objptr* %regP_130
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18905 = load %Pointer, %Pointer* %frontier
	%r18907 = ptrtoint %Pointer %r18905 to %uintptr_t
	%r18908 = add %uintptr_t %r18907, 24
	%r18906 = inttoptr %uintptr_t %r18908 to %Pointer
	store %Pointer %r18906, %Pointer* %frontier
	; OP (RP(130): Objptr (opt_38), 0): Objptr (opt_19)  = RP(29): Objptr (opt_19)
	%r18909 = load %Objptr, %Objptr* %regP_29
	%r18910 = load %Objptr, %Objptr* %regP_130
	%r18911 = getelementptr inbounds i8, %Objptr %r18910, i32 0
	%r18912 = bitcast %Objptr %r18911 to %Objptr*
	store %Objptr %r18909, %Objptr* %r18912
	; OP (RP(130): Objptr (opt_38), 8): Objptr (opt_38)  = RP(129): Objptr (opt_38)
	%r18913 = load %Objptr, %Objptr* %regP_129
	%r18914 = load %Objptr, %Objptr* %regP_130
	%r18915 = getelementptr inbounds i8, %Objptr %r18914, i32 8
	%r18916 = bitcast %Objptr %r18915 to %Objptr*
	store %Objptr %r18913, %Objptr* %r18916
	; CW64 (<Frontier>)  = 0x4D
	%r18917 = load %Pointer, %Pointer* %frontier
	%r18918 = bitcast %Pointer %r18917 to %Word64*
	store %Word64 77, %Word64* %r18918
	; RQ(54): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18919 = load %Pointer, %Pointer* %frontier
	%r18921 = ptrtoint %Pointer %r18919 to %uintptr_t
	%r18922 = add %uintptr_t %r18921, 8
	%r18920 = inttoptr %uintptr_t %r18922 to %Pointer
	store %CPointer %r18920, %CPointer* %regQ_54
	; RP(131): Objptr (opt_38)  = Cast (RQ(54): CPointer, Objptr (opt_38))
	%r18923 = load %CPointer, %CPointer* %regQ_54
	%r18924 = bitcast %CPointer %r18923 to %Objptr
	store %Objptr %r18924, %Objptr* %regP_131
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18925 = load %Pointer, %Pointer* %frontier
	%r18927 = ptrtoint %Pointer %r18925 to %uintptr_t
	%r18928 = add %uintptr_t %r18927, 24
	%r18926 = inttoptr %uintptr_t %r18928 to %Pointer
	store %Pointer %r18926, %Pointer* %frontier
	; OP (RP(131): Objptr (opt_38), 0): Objptr (opt_19)  = RP(28): Objptr (opt_19)
	%r18929 = load %Objptr, %Objptr* %regP_28
	%r18930 = load %Objptr, %Objptr* %regP_131
	%r18931 = getelementptr inbounds i8, %Objptr %r18930, i32 0
	%r18932 = bitcast %Objptr %r18931 to %Objptr*
	store %Objptr %r18929, %Objptr* %r18932
	; OP (RP(131): Objptr (opt_38), 8): Objptr (opt_38)  = RP(130): Objptr (opt_38)
	%r18933 = load %Objptr, %Objptr* %regP_130
	%r18934 = load %Objptr, %Objptr* %regP_131
	%r18935 = getelementptr inbounds i8, %Objptr %r18934, i32 8
	%r18936 = bitcast %Objptr %r18935 to %Objptr*
	store %Objptr %r18933, %Objptr* %r18936
	; CW64 (<Frontier>)  = 0x4D
	%r18937 = load %Pointer, %Pointer* %frontier
	%r18938 = bitcast %Pointer %r18937 to %Word64*
	store %Word64 77, %Word64* %r18938
	; RQ(53): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18939 = load %Pointer, %Pointer* %frontier
	%r18941 = ptrtoint %Pointer %r18939 to %uintptr_t
	%r18942 = add %uintptr_t %r18941, 8
	%r18940 = inttoptr %uintptr_t %r18942 to %Pointer
	store %CPointer %r18940, %CPointer* %regQ_53
	; RP(132): Objptr (opt_38)  = Cast (RQ(53): CPointer, Objptr (opt_38))
	%r18943 = load %CPointer, %CPointer* %regQ_53
	%r18944 = bitcast %CPointer %r18943 to %Objptr
	store %Objptr %r18944, %Objptr* %regP_132
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18945 = load %Pointer, %Pointer* %frontier
	%r18947 = ptrtoint %Pointer %r18945 to %uintptr_t
	%r18948 = add %uintptr_t %r18947, 24
	%r18946 = inttoptr %uintptr_t %r18948 to %Pointer
	store %Pointer %r18946, %Pointer* %frontier
	; OP (RP(132): Objptr (opt_38), 0): Objptr (opt_19)  = RP(27): Objptr (opt_19)
	%r18949 = load %Objptr, %Objptr* %regP_27
	%r18950 = load %Objptr, %Objptr* %regP_132
	%r18951 = getelementptr inbounds i8, %Objptr %r18950, i32 0
	%r18952 = bitcast %Objptr %r18951 to %Objptr*
	store %Objptr %r18949, %Objptr* %r18952
	; OP (RP(132): Objptr (opt_38), 8): Objptr (opt_38)  = RP(131): Objptr (opt_38)
	%r18953 = load %Objptr, %Objptr* %regP_131
	%r18954 = load %Objptr, %Objptr* %regP_132
	%r18955 = getelementptr inbounds i8, %Objptr %r18954, i32 8
	%r18956 = bitcast %Objptr %r18955 to %Objptr*
	store %Objptr %r18953, %Objptr* %r18956
	; CW64 (<Frontier>)  = 0x4D
	%r18957 = load %Pointer, %Pointer* %frontier
	%r18958 = bitcast %Pointer %r18957 to %Word64*
	store %Word64 77, %Word64* %r18958
	; RQ(52): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18959 = load %Pointer, %Pointer* %frontier
	%r18961 = ptrtoint %Pointer %r18959 to %uintptr_t
	%r18962 = add %uintptr_t %r18961, 8
	%r18960 = inttoptr %uintptr_t %r18962 to %Pointer
	store %CPointer %r18960, %CPointer* %regQ_52
	; RP(133): Objptr (opt_38)  = Cast (RQ(52): CPointer, Objptr (opt_38))
	%r18963 = load %CPointer, %CPointer* %regQ_52
	%r18964 = bitcast %CPointer %r18963 to %Objptr
	store %Objptr %r18964, %Objptr* %regP_133
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18965 = load %Pointer, %Pointer* %frontier
	%r18967 = ptrtoint %Pointer %r18965 to %uintptr_t
	%r18968 = add %uintptr_t %r18967, 24
	%r18966 = inttoptr %uintptr_t %r18968 to %Pointer
	store %Pointer %r18966, %Pointer* %frontier
	; OP (RP(133): Objptr (opt_38), 0): Objptr (opt_19)  = RP(26): Objptr (opt_19)
	%r18969 = load %Objptr, %Objptr* %regP_26
	%r18970 = load %Objptr, %Objptr* %regP_133
	%r18971 = getelementptr inbounds i8, %Objptr %r18970, i32 0
	%r18972 = bitcast %Objptr %r18971 to %Objptr*
	store %Objptr %r18969, %Objptr* %r18972
	; OP (RP(133): Objptr (opt_38), 8): Objptr (opt_38)  = RP(132): Objptr (opt_38)
	%r18973 = load %Objptr, %Objptr* %regP_132
	%r18974 = load %Objptr, %Objptr* %regP_133
	%r18975 = getelementptr inbounds i8, %Objptr %r18974, i32 8
	%r18976 = bitcast %Objptr %r18975 to %Objptr*
	store %Objptr %r18973, %Objptr* %r18976
	; CW64 (<Frontier>)  = 0x4D
	%r18977 = load %Pointer, %Pointer* %frontier
	%r18978 = bitcast %Pointer %r18977 to %Word64*
	store %Word64 77, %Word64* %r18978
	; RQ(51): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18979 = load %Pointer, %Pointer* %frontier
	%r18981 = ptrtoint %Pointer %r18979 to %uintptr_t
	%r18982 = add %uintptr_t %r18981, 8
	%r18980 = inttoptr %uintptr_t %r18982 to %Pointer
	store %CPointer %r18980, %CPointer* %regQ_51
	; RP(134): Objptr (opt_38)  = Cast (RQ(51): CPointer, Objptr (opt_38))
	%r18983 = load %CPointer, %CPointer* %regQ_51
	%r18984 = bitcast %CPointer %r18983 to %Objptr
	store %Objptr %r18984, %Objptr* %regP_134
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r18985 = load %Pointer, %Pointer* %frontier
	%r18987 = ptrtoint %Pointer %r18985 to %uintptr_t
	%r18988 = add %uintptr_t %r18987, 24
	%r18986 = inttoptr %uintptr_t %r18988 to %Pointer
	store %Pointer %r18986, %Pointer* %frontier
	; OP (RP(134): Objptr (opt_38), 0): Objptr (opt_19)  = RP(25): Objptr (opt_19)
	%r18989 = load %Objptr, %Objptr* %regP_25
	%r18990 = load %Objptr, %Objptr* %regP_134
	%r18991 = getelementptr inbounds i8, %Objptr %r18990, i32 0
	%r18992 = bitcast %Objptr %r18991 to %Objptr*
	store %Objptr %r18989, %Objptr* %r18992
	; OP (RP(134): Objptr (opt_38), 8): Objptr (opt_38)  = RP(133): Objptr (opt_38)
	%r18993 = load %Objptr, %Objptr* %regP_133
	%r18994 = load %Objptr, %Objptr* %regP_134
	%r18995 = getelementptr inbounds i8, %Objptr %r18994, i32 8
	%r18996 = bitcast %Objptr %r18995 to %Objptr*
	store %Objptr %r18993, %Objptr* %r18996
	; CW64 (<Frontier>)  = 0x4D
	%r18997 = load %Pointer, %Pointer* %frontier
	%r18998 = bitcast %Pointer %r18997 to %Word64*
	store %Word64 77, %Word64* %r18998
	; RQ(50): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r18999 = load %Pointer, %Pointer* %frontier
	%r19001 = ptrtoint %Pointer %r18999 to %uintptr_t
	%r19002 = add %uintptr_t %r19001, 8
	%r19000 = inttoptr %uintptr_t %r19002 to %Pointer
	store %CPointer %r19000, %CPointer* %regQ_50
	; RP(135): Objptr (opt_38)  = Cast (RQ(50): CPointer, Objptr (opt_38))
	%r19003 = load %CPointer, %CPointer* %regQ_50
	%r19004 = bitcast %CPointer %r19003 to %Objptr
	store %Objptr %r19004, %Objptr* %regP_135
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19005 = load %Pointer, %Pointer* %frontier
	%r19007 = ptrtoint %Pointer %r19005 to %uintptr_t
	%r19008 = add %uintptr_t %r19007, 24
	%r19006 = inttoptr %uintptr_t %r19008 to %Pointer
	store %Pointer %r19006, %Pointer* %frontier
	; OP (RP(135): Objptr (opt_38), 0): Objptr (opt_19)  = RP(24): Objptr (opt_19)
	%r19009 = load %Objptr, %Objptr* %regP_24
	%r19010 = load %Objptr, %Objptr* %regP_135
	%r19011 = getelementptr inbounds i8, %Objptr %r19010, i32 0
	%r19012 = bitcast %Objptr %r19011 to %Objptr*
	store %Objptr %r19009, %Objptr* %r19012
	; OP (RP(135): Objptr (opt_38), 8): Objptr (opt_38)  = RP(134): Objptr (opt_38)
	%r19013 = load %Objptr, %Objptr* %regP_134
	%r19014 = load %Objptr, %Objptr* %regP_135
	%r19015 = getelementptr inbounds i8, %Objptr %r19014, i32 8
	%r19016 = bitcast %Objptr %r19015 to %Objptr*
	store %Objptr %r19013, %Objptr* %r19016
	; CW64 (<Frontier>)  = 0x4D
	%r19017 = load %Pointer, %Pointer* %frontier
	%r19018 = bitcast %Pointer %r19017 to %Word64*
	store %Word64 77, %Word64* %r19018
	; RQ(49): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19019 = load %Pointer, %Pointer* %frontier
	%r19021 = ptrtoint %Pointer %r19019 to %uintptr_t
	%r19022 = add %uintptr_t %r19021, 8
	%r19020 = inttoptr %uintptr_t %r19022 to %Pointer
	store %CPointer %r19020, %CPointer* %regQ_49
	; RP(136): Objptr (opt_38)  = Cast (RQ(49): CPointer, Objptr (opt_38))
	%r19023 = load %CPointer, %CPointer* %regQ_49
	%r19024 = bitcast %CPointer %r19023 to %Objptr
	store %Objptr %r19024, %Objptr* %regP_136
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19025 = load %Pointer, %Pointer* %frontier
	%r19027 = ptrtoint %Pointer %r19025 to %uintptr_t
	%r19028 = add %uintptr_t %r19027, 24
	%r19026 = inttoptr %uintptr_t %r19028 to %Pointer
	store %Pointer %r19026, %Pointer* %frontier
	; OP (RP(136): Objptr (opt_38), 0): Objptr (opt_19)  = RP(23): Objptr (opt_19)
	%r19029 = load %Objptr, %Objptr* %regP_23
	%r19030 = load %Objptr, %Objptr* %regP_136
	%r19031 = getelementptr inbounds i8, %Objptr %r19030, i32 0
	%r19032 = bitcast %Objptr %r19031 to %Objptr*
	store %Objptr %r19029, %Objptr* %r19032
	; OP (RP(136): Objptr (opt_38), 8): Objptr (opt_38)  = RP(135): Objptr (opt_38)
	%r19033 = load %Objptr, %Objptr* %regP_135
	%r19034 = load %Objptr, %Objptr* %regP_136
	%r19035 = getelementptr inbounds i8, %Objptr %r19034, i32 8
	%r19036 = bitcast %Objptr %r19035 to %Objptr*
	store %Objptr %r19033, %Objptr* %r19036
	; CW64 (<Frontier>)  = 0x4D
	%r19037 = load %Pointer, %Pointer* %frontier
	%r19038 = bitcast %Pointer %r19037 to %Word64*
	store %Word64 77, %Word64* %r19038
	; RQ(48): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19039 = load %Pointer, %Pointer* %frontier
	%r19041 = ptrtoint %Pointer %r19039 to %uintptr_t
	%r19042 = add %uintptr_t %r19041, 8
	%r19040 = inttoptr %uintptr_t %r19042 to %Pointer
	store %CPointer %r19040, %CPointer* %regQ_48
	; RP(137): Objptr (opt_38)  = Cast (RQ(48): CPointer, Objptr (opt_38))
	%r19043 = load %CPointer, %CPointer* %regQ_48
	%r19044 = bitcast %CPointer %r19043 to %Objptr
	store %Objptr %r19044, %Objptr* %regP_137
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19045 = load %Pointer, %Pointer* %frontier
	%r19047 = ptrtoint %Pointer %r19045 to %uintptr_t
	%r19048 = add %uintptr_t %r19047, 24
	%r19046 = inttoptr %uintptr_t %r19048 to %Pointer
	store %Pointer %r19046, %Pointer* %frontier
	; OP (RP(137): Objptr (opt_38), 0): Objptr (opt_19)  = RP(22): Objptr (opt_19)
	%r19049 = load %Objptr, %Objptr* %regP_22
	%r19050 = load %Objptr, %Objptr* %regP_137
	%r19051 = getelementptr inbounds i8, %Objptr %r19050, i32 0
	%r19052 = bitcast %Objptr %r19051 to %Objptr*
	store %Objptr %r19049, %Objptr* %r19052
	; OP (RP(137): Objptr (opt_38), 8): Objptr (opt_38)  = RP(136): Objptr (opt_38)
	%r19053 = load %Objptr, %Objptr* %regP_136
	%r19054 = load %Objptr, %Objptr* %regP_137
	%r19055 = getelementptr inbounds i8, %Objptr %r19054, i32 8
	%r19056 = bitcast %Objptr %r19055 to %Objptr*
	store %Objptr %r19053, %Objptr* %r19056
	; CW64 (<Frontier>)  = 0x4D
	%r19057 = load %Pointer, %Pointer* %frontier
	%r19058 = bitcast %Pointer %r19057 to %Word64*
	store %Word64 77, %Word64* %r19058
	; RQ(47): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19059 = load %Pointer, %Pointer* %frontier
	%r19061 = ptrtoint %Pointer %r19059 to %uintptr_t
	%r19062 = add %uintptr_t %r19061, 8
	%r19060 = inttoptr %uintptr_t %r19062 to %Pointer
	store %CPointer %r19060, %CPointer* %regQ_47
	; RP(138): Objptr (opt_38)  = Cast (RQ(47): CPointer, Objptr (opt_38))
	%r19063 = load %CPointer, %CPointer* %regQ_47
	%r19064 = bitcast %CPointer %r19063 to %Objptr
	store %Objptr %r19064, %Objptr* %regP_138
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19065 = load %Pointer, %Pointer* %frontier
	%r19067 = ptrtoint %Pointer %r19065 to %uintptr_t
	%r19068 = add %uintptr_t %r19067, 24
	%r19066 = inttoptr %uintptr_t %r19068 to %Pointer
	store %Pointer %r19066, %Pointer* %frontier
	; OP (RP(138): Objptr (opt_38), 0): Objptr (opt_19)  = RP(21): Objptr (opt_19)
	%r19069 = load %Objptr, %Objptr* %regP_21
	%r19070 = load %Objptr, %Objptr* %regP_138
	%r19071 = getelementptr inbounds i8, %Objptr %r19070, i32 0
	%r19072 = bitcast %Objptr %r19071 to %Objptr*
	store %Objptr %r19069, %Objptr* %r19072
	; OP (RP(138): Objptr (opt_38), 8): Objptr (opt_38)  = RP(137): Objptr (opt_38)
	%r19073 = load %Objptr, %Objptr* %regP_137
	%r19074 = load %Objptr, %Objptr* %regP_138
	%r19075 = getelementptr inbounds i8, %Objptr %r19074, i32 8
	%r19076 = bitcast %Objptr %r19075 to %Objptr*
	store %Objptr %r19073, %Objptr* %r19076
	; CW64 (<Frontier>)  = 0x4D
	%r19077 = load %Pointer, %Pointer* %frontier
	%r19078 = bitcast %Pointer %r19077 to %Word64*
	store %Word64 77, %Word64* %r19078
	; RQ(46): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19079 = load %Pointer, %Pointer* %frontier
	%r19081 = ptrtoint %Pointer %r19079 to %uintptr_t
	%r19082 = add %uintptr_t %r19081, 8
	%r19080 = inttoptr %uintptr_t %r19082 to %Pointer
	store %CPointer %r19080, %CPointer* %regQ_46
	; RP(139): Objptr (opt_38)  = Cast (RQ(46): CPointer, Objptr (opt_38))
	%r19083 = load %CPointer, %CPointer* %regQ_46
	%r19084 = bitcast %CPointer %r19083 to %Objptr
	store %Objptr %r19084, %Objptr* %regP_139
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19085 = load %Pointer, %Pointer* %frontier
	%r19087 = ptrtoint %Pointer %r19085 to %uintptr_t
	%r19088 = add %uintptr_t %r19087, 24
	%r19086 = inttoptr %uintptr_t %r19088 to %Pointer
	store %Pointer %r19086, %Pointer* %frontier
	; OP (RP(139): Objptr (opt_38), 0): Objptr (opt_19)  = RP(20): Objptr (opt_19)
	%r19089 = load %Objptr, %Objptr* %regP_20
	%r19090 = load %Objptr, %Objptr* %regP_139
	%r19091 = getelementptr inbounds i8, %Objptr %r19090, i32 0
	%r19092 = bitcast %Objptr %r19091 to %Objptr*
	store %Objptr %r19089, %Objptr* %r19092
	; OP (RP(139): Objptr (opt_38), 8): Objptr (opt_38)  = RP(138): Objptr (opt_38)
	%r19093 = load %Objptr, %Objptr* %regP_138
	%r19094 = load %Objptr, %Objptr* %regP_139
	%r19095 = getelementptr inbounds i8, %Objptr %r19094, i32 8
	%r19096 = bitcast %Objptr %r19095 to %Objptr*
	store %Objptr %r19093, %Objptr* %r19096
	; CW64 (<Frontier>)  = 0x4D
	%r19097 = load %Pointer, %Pointer* %frontier
	%r19098 = bitcast %Pointer %r19097 to %Word64*
	store %Word64 77, %Word64* %r19098
	; RQ(45): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19099 = load %Pointer, %Pointer* %frontier
	%r19101 = ptrtoint %Pointer %r19099 to %uintptr_t
	%r19102 = add %uintptr_t %r19101, 8
	%r19100 = inttoptr %uintptr_t %r19102 to %Pointer
	store %CPointer %r19100, %CPointer* %regQ_45
	; RP(140): Objptr (opt_38)  = Cast (RQ(45): CPointer, Objptr (opt_38))
	%r19103 = load %CPointer, %CPointer* %regQ_45
	%r19104 = bitcast %CPointer %r19103 to %Objptr
	store %Objptr %r19104, %Objptr* %regP_140
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19105 = load %Pointer, %Pointer* %frontier
	%r19107 = ptrtoint %Pointer %r19105 to %uintptr_t
	%r19108 = add %uintptr_t %r19107, 24
	%r19106 = inttoptr %uintptr_t %r19108 to %Pointer
	store %Pointer %r19106, %Pointer* %frontier
	; OP (RP(140): Objptr (opt_38), 0): Objptr (opt_19)  = RP(19): Objptr (opt_19)
	%r19109 = load %Objptr, %Objptr* %regP_19
	%r19110 = load %Objptr, %Objptr* %regP_140
	%r19111 = getelementptr inbounds i8, %Objptr %r19110, i32 0
	%r19112 = bitcast %Objptr %r19111 to %Objptr*
	store %Objptr %r19109, %Objptr* %r19112
	; OP (RP(140): Objptr (opt_38), 8): Objptr (opt_38)  = RP(139): Objptr (opt_38)
	%r19113 = load %Objptr, %Objptr* %regP_139
	%r19114 = load %Objptr, %Objptr* %regP_140
	%r19115 = getelementptr inbounds i8, %Objptr %r19114, i32 8
	%r19116 = bitcast %Objptr %r19115 to %Objptr*
	store %Objptr %r19113, %Objptr* %r19116
	; CW64 (<Frontier>)  = 0x4D
	%r19117 = load %Pointer, %Pointer* %frontier
	%r19118 = bitcast %Pointer %r19117 to %Word64*
	store %Word64 77, %Word64* %r19118
	; RQ(44): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19119 = load %Pointer, %Pointer* %frontier
	%r19121 = ptrtoint %Pointer %r19119 to %uintptr_t
	%r19122 = add %uintptr_t %r19121, 8
	%r19120 = inttoptr %uintptr_t %r19122 to %Pointer
	store %CPointer %r19120, %CPointer* %regQ_44
	; RP(141): Objptr (opt_38)  = Cast (RQ(44): CPointer, Objptr (opt_38))
	%r19123 = load %CPointer, %CPointer* %regQ_44
	%r19124 = bitcast %CPointer %r19123 to %Objptr
	store %Objptr %r19124, %Objptr* %regP_141
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19125 = load %Pointer, %Pointer* %frontier
	%r19127 = ptrtoint %Pointer %r19125 to %uintptr_t
	%r19128 = add %uintptr_t %r19127, 24
	%r19126 = inttoptr %uintptr_t %r19128 to %Pointer
	store %Pointer %r19126, %Pointer* %frontier
	; OP (RP(141): Objptr (opt_38), 0): Objptr (opt_19)  = RP(18): Objptr (opt_19)
	%r19129 = load %Objptr, %Objptr* %regP_18
	%r19130 = load %Objptr, %Objptr* %regP_141
	%r19131 = getelementptr inbounds i8, %Objptr %r19130, i32 0
	%r19132 = bitcast %Objptr %r19131 to %Objptr*
	store %Objptr %r19129, %Objptr* %r19132
	; OP (RP(141): Objptr (opt_38), 8): Objptr (opt_38)  = RP(140): Objptr (opt_38)
	%r19133 = load %Objptr, %Objptr* %regP_140
	%r19134 = load %Objptr, %Objptr* %regP_141
	%r19135 = getelementptr inbounds i8, %Objptr %r19134, i32 8
	%r19136 = bitcast %Objptr %r19135 to %Objptr*
	store %Objptr %r19133, %Objptr* %r19136
	; CW64 (<Frontier>)  = 0x4D
	%r19137 = load %Pointer, %Pointer* %frontier
	%r19138 = bitcast %Pointer %r19137 to %Word64*
	store %Word64 77, %Word64* %r19138
	; RQ(43): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19139 = load %Pointer, %Pointer* %frontier
	%r19141 = ptrtoint %Pointer %r19139 to %uintptr_t
	%r19142 = add %uintptr_t %r19141, 8
	%r19140 = inttoptr %uintptr_t %r19142 to %Pointer
	store %CPointer %r19140, %CPointer* %regQ_43
	; RP(142): Objptr (opt_38)  = Cast (RQ(43): CPointer, Objptr (opt_38))
	%r19143 = load %CPointer, %CPointer* %regQ_43
	%r19144 = bitcast %CPointer %r19143 to %Objptr
	store %Objptr %r19144, %Objptr* %regP_142
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19145 = load %Pointer, %Pointer* %frontier
	%r19147 = ptrtoint %Pointer %r19145 to %uintptr_t
	%r19148 = add %uintptr_t %r19147, 24
	%r19146 = inttoptr %uintptr_t %r19148 to %Pointer
	store %Pointer %r19146, %Pointer* %frontier
	; OP (RP(142): Objptr (opt_38), 0): Objptr (opt_19)  = RP(17): Objptr (opt_19)
	%r19149 = load %Objptr, %Objptr* %regP_17
	%r19150 = load %Objptr, %Objptr* %regP_142
	%r19151 = getelementptr inbounds i8, %Objptr %r19150, i32 0
	%r19152 = bitcast %Objptr %r19151 to %Objptr*
	store %Objptr %r19149, %Objptr* %r19152
	; OP (RP(142): Objptr (opt_38), 8): Objptr (opt_38)  = RP(141): Objptr (opt_38)
	%r19153 = load %Objptr, %Objptr* %regP_141
	%r19154 = load %Objptr, %Objptr* %regP_142
	%r19155 = getelementptr inbounds i8, %Objptr %r19154, i32 8
	%r19156 = bitcast %Objptr %r19155 to %Objptr*
	store %Objptr %r19153, %Objptr* %r19156
	; CW64 (<Frontier>)  = 0x4D
	%r19157 = load %Pointer, %Pointer* %frontier
	%r19158 = bitcast %Pointer %r19157 to %Word64*
	store %Word64 77, %Word64* %r19158
	; RQ(42): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19159 = load %Pointer, %Pointer* %frontier
	%r19161 = ptrtoint %Pointer %r19159 to %uintptr_t
	%r19162 = add %uintptr_t %r19161, 8
	%r19160 = inttoptr %uintptr_t %r19162 to %Pointer
	store %CPointer %r19160, %CPointer* %regQ_42
	; RP(143): Objptr (opt_38)  = Cast (RQ(42): CPointer, Objptr (opt_38))
	%r19163 = load %CPointer, %CPointer* %regQ_42
	%r19164 = bitcast %CPointer %r19163 to %Objptr
	store %Objptr %r19164, %Objptr* %regP_143
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19165 = load %Pointer, %Pointer* %frontier
	%r19167 = ptrtoint %Pointer %r19165 to %uintptr_t
	%r19168 = add %uintptr_t %r19167, 24
	%r19166 = inttoptr %uintptr_t %r19168 to %Pointer
	store %Pointer %r19166, %Pointer* %frontier
	; OP (RP(143): Objptr (opt_38), 0): Objptr (opt_19)  = RP(16): Objptr (opt_19)
	%r19169 = load %Objptr, %Objptr* %regP_16
	%r19170 = load %Objptr, %Objptr* %regP_143
	%r19171 = getelementptr inbounds i8, %Objptr %r19170, i32 0
	%r19172 = bitcast %Objptr %r19171 to %Objptr*
	store %Objptr %r19169, %Objptr* %r19172
	; OP (RP(143): Objptr (opt_38), 8): Objptr (opt_38)  = RP(142): Objptr (opt_38)
	%r19173 = load %Objptr, %Objptr* %regP_142
	%r19174 = load %Objptr, %Objptr* %regP_143
	%r19175 = getelementptr inbounds i8, %Objptr %r19174, i32 8
	%r19176 = bitcast %Objptr %r19175 to %Objptr*
	store %Objptr %r19173, %Objptr* %r19176
	; CW64 (<Frontier>)  = 0x4D
	%r19177 = load %Pointer, %Pointer* %frontier
	%r19178 = bitcast %Pointer %r19177 to %Word64*
	store %Word64 77, %Word64* %r19178
	; RQ(41): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19179 = load %Pointer, %Pointer* %frontier
	%r19181 = ptrtoint %Pointer %r19179 to %uintptr_t
	%r19182 = add %uintptr_t %r19181, 8
	%r19180 = inttoptr %uintptr_t %r19182 to %Pointer
	store %CPointer %r19180, %CPointer* %regQ_41
	; RP(144): Objptr (opt_38)  = Cast (RQ(41): CPointer, Objptr (opt_38))
	%r19183 = load %CPointer, %CPointer* %regQ_41
	%r19184 = bitcast %CPointer %r19183 to %Objptr
	store %Objptr %r19184, %Objptr* %regP_144
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19185 = load %Pointer, %Pointer* %frontier
	%r19187 = ptrtoint %Pointer %r19185 to %uintptr_t
	%r19188 = add %uintptr_t %r19187, 24
	%r19186 = inttoptr %uintptr_t %r19188 to %Pointer
	store %Pointer %r19186, %Pointer* %frontier
	; OP (RP(144): Objptr (opt_38), 0): Objptr (opt_19)  = RP(15): Objptr (opt_19)
	%r19189 = load %Objptr, %Objptr* %regP_15
	%r19190 = load %Objptr, %Objptr* %regP_144
	%r19191 = getelementptr inbounds i8, %Objptr %r19190, i32 0
	%r19192 = bitcast %Objptr %r19191 to %Objptr*
	store %Objptr %r19189, %Objptr* %r19192
	; OP (RP(144): Objptr (opt_38), 8): Objptr (opt_38)  = RP(143): Objptr (opt_38)
	%r19193 = load %Objptr, %Objptr* %regP_143
	%r19194 = load %Objptr, %Objptr* %regP_144
	%r19195 = getelementptr inbounds i8, %Objptr %r19194, i32 8
	%r19196 = bitcast %Objptr %r19195 to %Objptr*
	store %Objptr %r19193, %Objptr* %r19196
	; CW64 (<Frontier>)  = 0x4D
	%r19197 = load %Pointer, %Pointer* %frontier
	%r19198 = bitcast %Pointer %r19197 to %Word64*
	store %Word64 77, %Word64* %r19198
	; RQ(40): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19199 = load %Pointer, %Pointer* %frontier
	%r19201 = ptrtoint %Pointer %r19199 to %uintptr_t
	%r19202 = add %uintptr_t %r19201, 8
	%r19200 = inttoptr %uintptr_t %r19202 to %Pointer
	store %CPointer %r19200, %CPointer* %regQ_40
	; RP(145): Objptr (opt_38)  = Cast (RQ(40): CPointer, Objptr (opt_38))
	%r19203 = load %CPointer, %CPointer* %regQ_40
	%r19204 = bitcast %CPointer %r19203 to %Objptr
	store %Objptr %r19204, %Objptr* %regP_145
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19205 = load %Pointer, %Pointer* %frontier
	%r19207 = ptrtoint %Pointer %r19205 to %uintptr_t
	%r19208 = add %uintptr_t %r19207, 24
	%r19206 = inttoptr %uintptr_t %r19208 to %Pointer
	store %Pointer %r19206, %Pointer* %frontier
	; OP (RP(145): Objptr (opt_38), 0): Objptr (opt_19)  = RP(14): Objptr (opt_19)
	%r19209 = load %Objptr, %Objptr* %regP_14
	%r19210 = load %Objptr, %Objptr* %regP_145
	%r19211 = getelementptr inbounds i8, %Objptr %r19210, i32 0
	%r19212 = bitcast %Objptr %r19211 to %Objptr*
	store %Objptr %r19209, %Objptr* %r19212
	; OP (RP(145): Objptr (opt_38), 8): Objptr (opt_38)  = RP(144): Objptr (opt_38)
	%r19213 = load %Objptr, %Objptr* %regP_144
	%r19214 = load %Objptr, %Objptr* %regP_145
	%r19215 = getelementptr inbounds i8, %Objptr %r19214, i32 8
	%r19216 = bitcast %Objptr %r19215 to %Objptr*
	store %Objptr %r19213, %Objptr* %r19216
	; CW64 (<Frontier>)  = 0x4D
	%r19217 = load %Pointer, %Pointer* %frontier
	%r19218 = bitcast %Pointer %r19217 to %Word64*
	store %Word64 77, %Word64* %r19218
	; RQ(39): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19219 = load %Pointer, %Pointer* %frontier
	%r19221 = ptrtoint %Pointer %r19219 to %uintptr_t
	%r19222 = add %uintptr_t %r19221, 8
	%r19220 = inttoptr %uintptr_t %r19222 to %Pointer
	store %CPointer %r19220, %CPointer* %regQ_39
	; RP(146): Objptr (opt_38)  = Cast (RQ(39): CPointer, Objptr (opt_38))
	%r19223 = load %CPointer, %CPointer* %regQ_39
	%r19224 = bitcast %CPointer %r19223 to %Objptr
	store %Objptr %r19224, %Objptr* %regP_146
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19225 = load %Pointer, %Pointer* %frontier
	%r19227 = ptrtoint %Pointer %r19225 to %uintptr_t
	%r19228 = add %uintptr_t %r19227, 24
	%r19226 = inttoptr %uintptr_t %r19228 to %Pointer
	store %Pointer %r19226, %Pointer* %frontier
	; OP (RP(146): Objptr (opt_38), 0): Objptr (opt_19)  = RP(13): Objptr (opt_19)
	%r19229 = load %Objptr, %Objptr* %regP_13
	%r19230 = load %Objptr, %Objptr* %regP_146
	%r19231 = getelementptr inbounds i8, %Objptr %r19230, i32 0
	%r19232 = bitcast %Objptr %r19231 to %Objptr*
	store %Objptr %r19229, %Objptr* %r19232
	; OP (RP(146): Objptr (opt_38), 8): Objptr (opt_38)  = RP(145): Objptr (opt_38)
	%r19233 = load %Objptr, %Objptr* %regP_145
	%r19234 = load %Objptr, %Objptr* %regP_146
	%r19235 = getelementptr inbounds i8, %Objptr %r19234, i32 8
	%r19236 = bitcast %Objptr %r19235 to %Objptr*
	store %Objptr %r19233, %Objptr* %r19236
	; CW64 (<Frontier>)  = 0x4D
	%r19237 = load %Pointer, %Pointer* %frontier
	%r19238 = bitcast %Pointer %r19237 to %Word64*
	store %Word64 77, %Word64* %r19238
	; RQ(38): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19239 = load %Pointer, %Pointer* %frontier
	%r19241 = ptrtoint %Pointer %r19239 to %uintptr_t
	%r19242 = add %uintptr_t %r19241, 8
	%r19240 = inttoptr %uintptr_t %r19242 to %Pointer
	store %CPointer %r19240, %CPointer* %regQ_38
	; RP(147): Objptr (opt_38)  = Cast (RQ(38): CPointer, Objptr (opt_38))
	%r19243 = load %CPointer, %CPointer* %regQ_38
	%r19244 = bitcast %CPointer %r19243 to %Objptr
	store %Objptr %r19244, %Objptr* %regP_147
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19245 = load %Pointer, %Pointer* %frontier
	%r19247 = ptrtoint %Pointer %r19245 to %uintptr_t
	%r19248 = add %uintptr_t %r19247, 24
	%r19246 = inttoptr %uintptr_t %r19248 to %Pointer
	store %Pointer %r19246, %Pointer* %frontier
	; OP (RP(147): Objptr (opt_38), 0): Objptr (opt_19)  = RP(12): Objptr (opt_19)
	%r19249 = load %Objptr, %Objptr* %regP_12
	%r19250 = load %Objptr, %Objptr* %regP_147
	%r19251 = getelementptr inbounds i8, %Objptr %r19250, i32 0
	%r19252 = bitcast %Objptr %r19251 to %Objptr*
	store %Objptr %r19249, %Objptr* %r19252
	; OP (RP(147): Objptr (opt_38), 8): Objptr (opt_38)  = RP(146): Objptr (opt_38)
	%r19253 = load %Objptr, %Objptr* %regP_146
	%r19254 = load %Objptr, %Objptr* %regP_147
	%r19255 = getelementptr inbounds i8, %Objptr %r19254, i32 8
	%r19256 = bitcast %Objptr %r19255 to %Objptr*
	store %Objptr %r19253, %Objptr* %r19256
	; CW64 (<Frontier>)  = 0x4D
	%r19257 = load %Pointer, %Pointer* %frontier
	%r19258 = bitcast %Pointer %r19257 to %Word64*
	store %Word64 77, %Word64* %r19258
	; RQ(37): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19259 = load %Pointer, %Pointer* %frontier
	%r19261 = ptrtoint %Pointer %r19259 to %uintptr_t
	%r19262 = add %uintptr_t %r19261, 8
	%r19260 = inttoptr %uintptr_t %r19262 to %Pointer
	store %CPointer %r19260, %CPointer* %regQ_37
	; RP(148): Objptr (opt_38)  = Cast (RQ(37): CPointer, Objptr (opt_38))
	%r19263 = load %CPointer, %CPointer* %regQ_37
	%r19264 = bitcast %CPointer %r19263 to %Objptr
	store %Objptr %r19264, %Objptr* %regP_148
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19265 = load %Pointer, %Pointer* %frontier
	%r19267 = ptrtoint %Pointer %r19265 to %uintptr_t
	%r19268 = add %uintptr_t %r19267, 24
	%r19266 = inttoptr %uintptr_t %r19268 to %Pointer
	store %Pointer %r19266, %Pointer* %frontier
	; OP (RP(148): Objptr (opt_38), 0): Objptr (opt_19)  = RP(11): Objptr (opt_19)
	%r19269 = load %Objptr, %Objptr* %regP_11
	%r19270 = load %Objptr, %Objptr* %regP_148
	%r19271 = getelementptr inbounds i8, %Objptr %r19270, i32 0
	%r19272 = bitcast %Objptr %r19271 to %Objptr*
	store %Objptr %r19269, %Objptr* %r19272
	; OP (RP(148): Objptr (opt_38), 8): Objptr (opt_38)  = RP(147): Objptr (opt_38)
	%r19273 = load %Objptr, %Objptr* %regP_147
	%r19274 = load %Objptr, %Objptr* %regP_148
	%r19275 = getelementptr inbounds i8, %Objptr %r19274, i32 8
	%r19276 = bitcast %Objptr %r19275 to %Objptr*
	store %Objptr %r19273, %Objptr* %r19276
	; CW64 (<Frontier>)  = 0x4D
	%r19277 = load %Pointer, %Pointer* %frontier
	%r19278 = bitcast %Pointer %r19277 to %Word64*
	store %Word64 77, %Word64* %r19278
	; RQ(36): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19279 = load %Pointer, %Pointer* %frontier
	%r19281 = ptrtoint %Pointer %r19279 to %uintptr_t
	%r19282 = add %uintptr_t %r19281, 8
	%r19280 = inttoptr %uintptr_t %r19282 to %Pointer
	store %CPointer %r19280, %CPointer* %regQ_36
	; RP(149): Objptr (opt_38)  = Cast (RQ(36): CPointer, Objptr (opt_38))
	%r19283 = load %CPointer, %CPointer* %regQ_36
	%r19284 = bitcast %CPointer %r19283 to %Objptr
	store %Objptr %r19284, %Objptr* %regP_149
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19285 = load %Pointer, %Pointer* %frontier
	%r19287 = ptrtoint %Pointer %r19285 to %uintptr_t
	%r19288 = add %uintptr_t %r19287, 24
	%r19286 = inttoptr %uintptr_t %r19288 to %Pointer
	store %Pointer %r19286, %Pointer* %frontier
	; OP (RP(149): Objptr (opt_38), 0): Objptr (opt_19)  = RP(10): Objptr (opt_19)
	%r19289 = load %Objptr, %Objptr* %regP_10
	%r19290 = load %Objptr, %Objptr* %regP_149
	%r19291 = getelementptr inbounds i8, %Objptr %r19290, i32 0
	%r19292 = bitcast %Objptr %r19291 to %Objptr*
	store %Objptr %r19289, %Objptr* %r19292
	; OP (RP(149): Objptr (opt_38), 8): Objptr (opt_38)  = RP(148): Objptr (opt_38)
	%r19293 = load %Objptr, %Objptr* %regP_148
	%r19294 = load %Objptr, %Objptr* %regP_149
	%r19295 = getelementptr inbounds i8, %Objptr %r19294, i32 8
	%r19296 = bitcast %Objptr %r19295 to %Objptr*
	store %Objptr %r19293, %Objptr* %r19296
	; CW64 (<Frontier>)  = 0x4D
	%r19297 = load %Pointer, %Pointer* %frontier
	%r19298 = bitcast %Pointer %r19297 to %Word64*
	store %Word64 77, %Word64* %r19298
	; RQ(35): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19299 = load %Pointer, %Pointer* %frontier
	%r19301 = ptrtoint %Pointer %r19299 to %uintptr_t
	%r19302 = add %uintptr_t %r19301, 8
	%r19300 = inttoptr %uintptr_t %r19302 to %Pointer
	store %CPointer %r19300, %CPointer* %regQ_35
	; RP(150): Objptr (opt_38)  = Cast (RQ(35): CPointer, Objptr (opt_38))
	%r19303 = load %CPointer, %CPointer* %regQ_35
	%r19304 = bitcast %CPointer %r19303 to %Objptr
	store %Objptr %r19304, %Objptr* %regP_150
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19305 = load %Pointer, %Pointer* %frontier
	%r19307 = ptrtoint %Pointer %r19305 to %uintptr_t
	%r19308 = add %uintptr_t %r19307, 24
	%r19306 = inttoptr %uintptr_t %r19308 to %Pointer
	store %Pointer %r19306, %Pointer* %frontier
	; OP (RP(150): Objptr (opt_38), 0): Objptr (opt_19)  = RP(9): Objptr (opt_19)
	%r19309 = load %Objptr, %Objptr* %regP_9
	%r19310 = load %Objptr, %Objptr* %regP_150
	%r19311 = getelementptr inbounds i8, %Objptr %r19310, i32 0
	%r19312 = bitcast %Objptr %r19311 to %Objptr*
	store %Objptr %r19309, %Objptr* %r19312
	; OP (RP(150): Objptr (opt_38), 8): Objptr (opt_38)  = RP(149): Objptr (opt_38)
	%r19313 = load %Objptr, %Objptr* %regP_149
	%r19314 = load %Objptr, %Objptr* %regP_150
	%r19315 = getelementptr inbounds i8, %Objptr %r19314, i32 8
	%r19316 = bitcast %Objptr %r19315 to %Objptr*
	store %Objptr %r19313, %Objptr* %r19316
	; CW64 (<Frontier>)  = 0x4D
	%r19317 = load %Pointer, %Pointer* %frontier
	%r19318 = bitcast %Pointer %r19317 to %Word64*
	store %Word64 77, %Word64* %r19318
	; RQ(34): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19319 = load %Pointer, %Pointer* %frontier
	%r19321 = ptrtoint %Pointer %r19319 to %uintptr_t
	%r19322 = add %uintptr_t %r19321, 8
	%r19320 = inttoptr %uintptr_t %r19322 to %Pointer
	store %CPointer %r19320, %CPointer* %regQ_34
	; RP(151): Objptr (opt_38)  = Cast (RQ(34): CPointer, Objptr (opt_38))
	%r19323 = load %CPointer, %CPointer* %regQ_34
	%r19324 = bitcast %CPointer %r19323 to %Objptr
	store %Objptr %r19324, %Objptr* %regP_151
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19325 = load %Pointer, %Pointer* %frontier
	%r19327 = ptrtoint %Pointer %r19325 to %uintptr_t
	%r19328 = add %uintptr_t %r19327, 24
	%r19326 = inttoptr %uintptr_t %r19328 to %Pointer
	store %Pointer %r19326, %Pointer* %frontier
	; OP (RP(151): Objptr (opt_38), 0): Objptr (opt_19)  = RP(8): Objptr (opt_19)
	%r19329 = load %Objptr, %Objptr* %regP_8
	%r19330 = load %Objptr, %Objptr* %regP_151
	%r19331 = getelementptr inbounds i8, %Objptr %r19330, i32 0
	%r19332 = bitcast %Objptr %r19331 to %Objptr*
	store %Objptr %r19329, %Objptr* %r19332
	; OP (RP(151): Objptr (opt_38), 8): Objptr (opt_38)  = RP(150): Objptr (opt_38)
	%r19333 = load %Objptr, %Objptr* %regP_150
	%r19334 = load %Objptr, %Objptr* %regP_151
	%r19335 = getelementptr inbounds i8, %Objptr %r19334, i32 8
	%r19336 = bitcast %Objptr %r19335 to %Objptr*
	store %Objptr %r19333, %Objptr* %r19336
	; CW64 (<Frontier>)  = 0x4D
	%r19337 = load %Pointer, %Pointer* %frontier
	%r19338 = bitcast %Pointer %r19337 to %Word64*
	store %Word64 77, %Word64* %r19338
	; RQ(33): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19339 = load %Pointer, %Pointer* %frontier
	%r19341 = ptrtoint %Pointer %r19339 to %uintptr_t
	%r19342 = add %uintptr_t %r19341, 8
	%r19340 = inttoptr %uintptr_t %r19342 to %Pointer
	store %CPointer %r19340, %CPointer* %regQ_33
	; RP(152): Objptr (opt_38)  = Cast (RQ(33): CPointer, Objptr (opt_38))
	%r19343 = load %CPointer, %CPointer* %regQ_33
	%r19344 = bitcast %CPointer %r19343 to %Objptr
	store %Objptr %r19344, %Objptr* %regP_152
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19345 = load %Pointer, %Pointer* %frontier
	%r19347 = ptrtoint %Pointer %r19345 to %uintptr_t
	%r19348 = add %uintptr_t %r19347, 24
	%r19346 = inttoptr %uintptr_t %r19348 to %Pointer
	store %Pointer %r19346, %Pointer* %frontier
	; OP (RP(152): Objptr (opt_38), 0): Objptr (opt_19)  = RP(7): Objptr (opt_19)
	%r19349 = load %Objptr, %Objptr* %regP_7
	%r19350 = load %Objptr, %Objptr* %regP_152
	%r19351 = getelementptr inbounds i8, %Objptr %r19350, i32 0
	%r19352 = bitcast %Objptr %r19351 to %Objptr*
	store %Objptr %r19349, %Objptr* %r19352
	; OP (RP(152): Objptr (opt_38), 8): Objptr (opt_38)  = RP(151): Objptr (opt_38)
	%r19353 = load %Objptr, %Objptr* %regP_151
	%r19354 = load %Objptr, %Objptr* %regP_152
	%r19355 = getelementptr inbounds i8, %Objptr %r19354, i32 8
	%r19356 = bitcast %Objptr %r19355 to %Objptr*
	store %Objptr %r19353, %Objptr* %r19356
	; CW64 (<Frontier>)  = 0x4D
	%r19357 = load %Pointer, %Pointer* %frontier
	%r19358 = bitcast %Pointer %r19357 to %Word64*
	store %Word64 77, %Word64* %r19358
	; RQ(32): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19359 = load %Pointer, %Pointer* %frontier
	%r19361 = ptrtoint %Pointer %r19359 to %uintptr_t
	%r19362 = add %uintptr_t %r19361, 8
	%r19360 = inttoptr %uintptr_t %r19362 to %Pointer
	store %CPointer %r19360, %CPointer* %regQ_32
	; RP(153): Objptr (opt_38)  = Cast (RQ(32): CPointer, Objptr (opt_38))
	%r19363 = load %CPointer, %CPointer* %regQ_32
	%r19364 = bitcast %CPointer %r19363 to %Objptr
	store %Objptr %r19364, %Objptr* %regP_153
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19365 = load %Pointer, %Pointer* %frontier
	%r19367 = ptrtoint %Pointer %r19365 to %uintptr_t
	%r19368 = add %uintptr_t %r19367, 24
	%r19366 = inttoptr %uintptr_t %r19368 to %Pointer
	store %Pointer %r19366, %Pointer* %frontier
	; OP (RP(153): Objptr (opt_38), 0): Objptr (opt_19)  = RP(6): Objptr (opt_19)
	%r19369 = load %Objptr, %Objptr* %regP_6
	%r19370 = load %Objptr, %Objptr* %regP_153
	%r19371 = getelementptr inbounds i8, %Objptr %r19370, i32 0
	%r19372 = bitcast %Objptr %r19371 to %Objptr*
	store %Objptr %r19369, %Objptr* %r19372
	; OP (RP(153): Objptr (opt_38), 8): Objptr (opt_38)  = RP(152): Objptr (opt_38)
	%r19373 = load %Objptr, %Objptr* %regP_152
	%r19374 = load %Objptr, %Objptr* %regP_153
	%r19375 = getelementptr inbounds i8, %Objptr %r19374, i32 8
	%r19376 = bitcast %Objptr %r19375 to %Objptr*
	store %Objptr %r19373, %Objptr* %r19376
	; CW64 (<Frontier>)  = 0x4D
	%r19377 = load %Pointer, %Pointer* %frontier
	%r19378 = bitcast %Pointer %r19377 to %Word64*
	store %Word64 77, %Word64* %r19378
	; RQ(31): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19379 = load %Pointer, %Pointer* %frontier
	%r19381 = ptrtoint %Pointer %r19379 to %uintptr_t
	%r19382 = add %uintptr_t %r19381, 8
	%r19380 = inttoptr %uintptr_t %r19382 to %Pointer
	store %CPointer %r19380, %CPointer* %regQ_31
	; RP(154): Objptr (opt_38)  = Cast (RQ(31): CPointer, Objptr (opt_38))
	%r19383 = load %CPointer, %CPointer* %regQ_31
	%r19384 = bitcast %CPointer %r19383 to %Objptr
	store %Objptr %r19384, %Objptr* %regP_154
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19385 = load %Pointer, %Pointer* %frontier
	%r19387 = ptrtoint %Pointer %r19385 to %uintptr_t
	%r19388 = add %uintptr_t %r19387, 24
	%r19386 = inttoptr %uintptr_t %r19388 to %Pointer
	store %Pointer %r19386, %Pointer* %frontier
	; OP (RP(154): Objptr (opt_38), 0): Objptr (opt_19)  = RP(5): Objptr (opt_19)
	%r19389 = load %Objptr, %Objptr* %regP_5
	%r19390 = load %Objptr, %Objptr* %regP_154
	%r19391 = getelementptr inbounds i8, %Objptr %r19390, i32 0
	%r19392 = bitcast %Objptr %r19391 to %Objptr*
	store %Objptr %r19389, %Objptr* %r19392
	; OP (RP(154): Objptr (opt_38), 8): Objptr (opt_38)  = RP(153): Objptr (opt_38)
	%r19393 = load %Objptr, %Objptr* %regP_153
	%r19394 = load %Objptr, %Objptr* %regP_154
	%r19395 = getelementptr inbounds i8, %Objptr %r19394, i32 8
	%r19396 = bitcast %Objptr %r19395 to %Objptr*
	store %Objptr %r19393, %Objptr* %r19396
	; CW64 (<Frontier>)  = 0x4D
	%r19397 = load %Pointer, %Pointer* %frontier
	%r19398 = bitcast %Pointer %r19397 to %Word64*
	store %Word64 77, %Word64* %r19398
	; RQ(30): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19399 = load %Pointer, %Pointer* %frontier
	%r19401 = ptrtoint %Pointer %r19399 to %uintptr_t
	%r19402 = add %uintptr_t %r19401, 8
	%r19400 = inttoptr %uintptr_t %r19402 to %Pointer
	store %CPointer %r19400, %CPointer* %regQ_30
	; RP(155): Objptr (opt_38)  = Cast (RQ(30): CPointer, Objptr (opt_38))
	%r19403 = load %CPointer, %CPointer* %regQ_30
	%r19404 = bitcast %CPointer %r19403 to %Objptr
	store %Objptr %r19404, %Objptr* %regP_155
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19405 = load %Pointer, %Pointer* %frontier
	%r19407 = ptrtoint %Pointer %r19405 to %uintptr_t
	%r19408 = add %uintptr_t %r19407, 24
	%r19406 = inttoptr %uintptr_t %r19408 to %Pointer
	store %Pointer %r19406, %Pointer* %frontier
	; OP (RP(155): Objptr (opt_38), 0): Objptr (opt_19)  = RP(4): Objptr (opt_19)
	%r19409 = load %Objptr, %Objptr* %regP_4
	%r19410 = load %Objptr, %Objptr* %regP_155
	%r19411 = getelementptr inbounds i8, %Objptr %r19410, i32 0
	%r19412 = bitcast %Objptr %r19411 to %Objptr*
	store %Objptr %r19409, %Objptr* %r19412
	; OP (RP(155): Objptr (opt_38), 8): Objptr (opt_38)  = RP(154): Objptr (opt_38)
	%r19413 = load %Objptr, %Objptr* %regP_154
	%r19414 = load %Objptr, %Objptr* %regP_155
	%r19415 = getelementptr inbounds i8, %Objptr %r19414, i32 8
	%r19416 = bitcast %Objptr %r19415 to %Objptr*
	store %Objptr %r19413, %Objptr* %r19416
	; CW64 (<Frontier>)  = 0x4D
	%r19417 = load %Pointer, %Pointer* %frontier
	%r19418 = bitcast %Pointer %r19417 to %Word64*
	store %Word64 77, %Word64* %r19418
	; RQ(29): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19419 = load %Pointer, %Pointer* %frontier
	%r19421 = ptrtoint %Pointer %r19419 to %uintptr_t
	%r19422 = add %uintptr_t %r19421, 8
	%r19420 = inttoptr %uintptr_t %r19422 to %Pointer
	store %CPointer %r19420, %CPointer* %regQ_29
	; RP(156): Objptr (opt_38)  = Cast (RQ(29): CPointer, Objptr (opt_38))
	%r19423 = load %CPointer, %CPointer* %regQ_29
	%r19424 = bitcast %CPointer %r19423 to %Objptr
	store %Objptr %r19424, %Objptr* %regP_156
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19425 = load %Pointer, %Pointer* %frontier
	%r19427 = ptrtoint %Pointer %r19425 to %uintptr_t
	%r19428 = add %uintptr_t %r19427, 24
	%r19426 = inttoptr %uintptr_t %r19428 to %Pointer
	store %Pointer %r19426, %Pointer* %frontier
	; OP (RP(156): Objptr (opt_38), 0): Objptr (opt_19)  = RP(3): Objptr (opt_19)
	%r19429 = load %Objptr, %Objptr* %regP_3
	%r19430 = load %Objptr, %Objptr* %regP_156
	%r19431 = getelementptr inbounds i8, %Objptr %r19430, i32 0
	%r19432 = bitcast %Objptr %r19431 to %Objptr*
	store %Objptr %r19429, %Objptr* %r19432
	; OP (RP(156): Objptr (opt_38), 8): Objptr (opt_38)  = RP(155): Objptr (opt_38)
	%r19433 = load %Objptr, %Objptr* %regP_155
	%r19434 = load %Objptr, %Objptr* %regP_156
	%r19435 = getelementptr inbounds i8, %Objptr %r19434, i32 8
	%r19436 = bitcast %Objptr %r19435 to %Objptr*
	store %Objptr %r19433, %Objptr* %r19436
	; CW64 (<Frontier>)  = 0x4D
	%r19437 = load %Pointer, %Pointer* %frontier
	%r19438 = bitcast %Pointer %r19437 to %Word64*
	store %Word64 77, %Word64* %r19438
	; RQ(28): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19439 = load %Pointer, %Pointer* %frontier
	%r19441 = ptrtoint %Pointer %r19439 to %uintptr_t
	%r19442 = add %uintptr_t %r19441, 8
	%r19440 = inttoptr %uintptr_t %r19442 to %Pointer
	store %CPointer %r19440, %CPointer* %regQ_28
	; glob {index = 3, isRoot = true, ty = Objptr (opt_38)}  = Cast (RQ(28): CPointer, Objptr (opt_38))
	%r19443 = load %CPointer, %CPointer* %regQ_28
	%r19444 = bitcast %CPointer %r19443 to %Objptr
	%r19445 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 3
	store %Objptr %r19444, %Objptr* %r19445
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19446 = load %Pointer, %Pointer* %frontier
	%r19448 = ptrtoint %Pointer %r19446 to %uintptr_t
	%r19449 = add %uintptr_t %r19448, 24
	%r19447 = inttoptr %uintptr_t %r19449 to %Pointer
	store %Pointer %r19447, %Pointer* %frontier
	; OP (glob {index = 3, isRoot = true, ty = Objptr (opt_38)}, 0): Objptr (opt_19)  = RP(2): Objptr (opt_19)
	%r19450 = load %Objptr, %Objptr* %regP_2
	%r19451 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 3
	%r19452 = load %Objptr, %Objptr* %r19451
	%r19453 = getelementptr inbounds i8, %Objptr %r19452, i32 0
	%r19454 = bitcast %Objptr %r19453 to %Objptr*
	store %Objptr %r19450, %Objptr* %r19454
	; OP (glob {index = 3, isRoot = true, ty = Objptr (opt_38)}, 8): Objptr (opt_38)  = RP(156): Objptr (opt_38)
	%r19455 = load %Objptr, %Objptr* %regP_156
	%r19456 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 3
	%r19457 = load %Objptr, %Objptr* %r19456
	%r19458 = getelementptr inbounds i8, %Objptr %r19457, i32 8
	%r19459 = bitcast %Objptr %r19458 to %Objptr*
	store %Objptr %r19455, %Objptr* %r19459
	; CW64 (<Frontier>)  = 0x57
	%r19460 = load %Pointer, %Pointer* %frontier
	%r19461 = bitcast %Pointer %r19460 to %Word64*
	store %Word64 87, %Word64* %r19461
	; RQ(27): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19462 = load %Pointer, %Pointer* %frontier
	%r19464 = ptrtoint %Pointer %r19462 to %uintptr_t
	%r19465 = add %uintptr_t %r19464, 8
	%r19463 = inttoptr %uintptr_t %r19465 to %Pointer
	store %CPointer %r19463, %CPointer* %regQ_27
	; glob {index = 4, isRoot = true, ty = Objptr (opt_43)}  = Cast (RQ(27): CPointer, Objptr (opt_43))
	%r19466 = load %CPointer, %CPointer* %regQ_27
	%r19467 = bitcast %CPointer %r19466 to %Objptr
	%r19468 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 4
	store %Objptr %r19467, %Objptr* %r19468
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19469 = load %Pointer, %Pointer* %frontier
	%r19471 = ptrtoint %Pointer %r19469 to %uintptr_t
	%r19472 = add %uintptr_t %r19471, 24
	%r19470 = inttoptr %uintptr_t %r19472 to %Pointer
	store %Pointer %r19470, %Pointer* %frontier
	; OP (glob {index = 4, isRoot = true, ty = Objptr (opt_43)}, 0): Objptr (opt_3)  = glob {index = 102, isRoot = true, ty = Objptr (opt_3)}
	%r19473 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 102
	%r19474 = load %Objptr, %Objptr* %r19473
	%r19475 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 4
	%r19476 = load %Objptr, %Objptr* %r19475
	%r19477 = getelementptr inbounds i8, %Objptr %r19476, i32 0
	%r19478 = bitcast %Objptr %r19477 to %Objptr*
	store %Objptr %r19474, %Objptr* %r19478
	; OP (glob {index = 4, isRoot = true, ty = Objptr (opt_43)}, 8): Objptr (opt_43)  = Cast (0x1, Objptr (opt_43))
	%r19479 = inttoptr %Word64 1 to %Objptr
	%r19480 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 4
	%r19481 = load %Objptr, %Objptr* %r19480
	%r19482 = getelementptr inbounds i8, %Objptr %r19481, i32 8
	%r19483 = bitcast %Objptr %r19482 to %Objptr*
	store %Objptr %r19479, %Objptr* %r19483
	; CW64 (<Frontier>)  = 0x41
	%r19484 = load %Pointer, %Pointer* %frontier
	%r19485 = bitcast %Pointer %r19484 to %Word64*
	store %Word64 65, %Word64* %r19485
	; RQ(26): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19486 = load %Pointer, %Pointer* %frontier
	%r19488 = ptrtoint %Pointer %r19486 to %uintptr_t
	%r19489 = add %uintptr_t %r19488, 8
	%r19487 = inttoptr %uintptr_t %r19489 to %Pointer
	store %CPointer %r19487, %CPointer* %regQ_26
	; glob {index = 5, isRoot = true, ty = Objptr (opt_32)}  = Cast (RQ(26): CPointer, Objptr (opt_32))
	%r19490 = load %CPointer, %CPointer* %regQ_26
	%r19491 = bitcast %CPointer %r19490 to %Objptr
	%r19492 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 5
	store %Objptr %r19491, %Objptr* %r19492
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19493 = load %Pointer, %Pointer* %frontier
	%r19495 = ptrtoint %Pointer %r19493 to %uintptr_t
	%r19496 = add %uintptr_t %r19495, 16
	%r19494 = inttoptr %uintptr_t %r19496 to %Pointer
	store %Pointer %r19494, %Pointer* %frontier
	; OP (glob {index = 5, isRoot = true, ty = Objptr (opt_32)}, 0): Objptr (opt_3)  = glob {index = 103, isRoot = true, ty = Objptr (opt_3)}
	%r19497 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 103
	%r19498 = load %Objptr, %Objptr* %r19497
	%r19499 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 5
	%r19500 = load %Objptr, %Objptr* %r19499
	%r19501 = getelementptr inbounds i8, %Objptr %r19500, i32 0
	%r19502 = bitcast %Objptr %r19501 to %Objptr*
	store %Objptr %r19498, %Objptr* %r19502
	; CW64 (<Frontier>)  = 0x41
	%r19503 = load %Pointer, %Pointer* %frontier
	%r19504 = bitcast %Pointer %r19503 to %Word64*
	store %Word64 65, %Word64* %r19504
	; RQ(25): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19505 = load %Pointer, %Pointer* %frontier
	%r19507 = ptrtoint %Pointer %r19505 to %uintptr_t
	%r19508 = add %uintptr_t %r19507, 8
	%r19506 = inttoptr %uintptr_t %r19508 to %Pointer
	store %CPointer %r19506, %CPointer* %regQ_25
	; glob {index = 6, isRoot = true, ty = Objptr (opt_32)}  = Cast (RQ(25): CPointer, Objptr (opt_32))
	%r19509 = load %CPointer, %CPointer* %regQ_25
	%r19510 = bitcast %CPointer %r19509 to %Objptr
	%r19511 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 6
	store %Objptr %r19510, %Objptr* %r19511
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19512 = load %Pointer, %Pointer* %frontier
	%r19514 = ptrtoint %Pointer %r19512 to %uintptr_t
	%r19515 = add %uintptr_t %r19514, 16
	%r19513 = inttoptr %uintptr_t %r19515 to %Pointer
	store %Pointer %r19513, %Pointer* %frontier
	; OP (glob {index = 6, isRoot = true, ty = Objptr (opt_32)}, 0): Objptr (opt_3)  = glob {index = 104, isRoot = true, ty = Objptr (opt_3)}
	%r19516 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 104
	%r19517 = load %Objptr, %Objptr* %r19516
	%r19518 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 6
	%r19519 = load %Objptr, %Objptr* %r19518
	%r19520 = getelementptr inbounds i8, %Objptr %r19519, i32 0
	%r19521 = bitcast %Objptr %r19520 to %Objptr*
	store %Objptr %r19517, %Objptr* %r19521
	; CW64 (<Frontier>)  = 0x2B
	%r19522 = load %Pointer, %Pointer* %frontier
	%r19523 = bitcast %Pointer %r19522 to %Word64*
	store %Word64 43, %Word64* %r19523
	; RQ(24): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19524 = load %Pointer, %Pointer* %frontier
	%r19526 = ptrtoint %Pointer %r19524 to %uintptr_t
	%r19527 = add %uintptr_t %r19526, 8
	%r19525 = inttoptr %uintptr_t %r19527 to %Pointer
	store %CPointer %r19525, %CPointer* %regQ_24
	; glob {index = 7, isRoot = true, ty = Objptr (opt_21)}  = Cast (RQ(24): CPointer, Objptr (opt_21))
	%r19528 = load %CPointer, %CPointer* %regQ_24
	%r19529 = bitcast %CPointer %r19528 to %Objptr
	%r19530 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 7
	store %Objptr %r19529, %Objptr* %r19530
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19531 = load %Pointer, %Pointer* %frontier
	%r19533 = ptrtoint %Pointer %r19531 to %uintptr_t
	%r19534 = add %uintptr_t %r19533, 24
	%r19532 = inttoptr %uintptr_t %r19534 to %Pointer
	store %Pointer %r19532, %Pointer* %frontier
	; OW32 (glob {index = 7, isRoot = true, ty = Objptr (opt_21)}, 0): Word32  = 0x0
	%r19535 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 7
	%r19536 = load %Objptr, %Objptr* %r19535
	%r19537 = getelementptr inbounds i8, %Objptr %r19536, i32 0
	%r19538 = bitcast %Objptr %r19537 to %Word32*
	store %Word32 0, %Word32* %r19538
	; OW32 (glob {index = 7, isRoot = true, ty = Objptr (opt_21)}, 4): Word32  = 0x30
	%r19539 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 7
	%r19540 = load %Objptr, %Objptr* %r19539
	%r19541 = getelementptr inbounds i8, %Objptr %r19540, i32 4
	%r19542 = bitcast %Objptr %r19541 to %Word32*
	store %Word32 48, %Word32* %r19542
	; OW32 (glob {index = 7, isRoot = true, ty = Objptr (opt_21)}, 8): [Word8, Word8, Bits16]  = Cast (0x3930, [Word8, Word8, Bits16])
	%r19543 = bitcast %Word32 14640 to %Word32
	%r19544 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 7
	%r19545 = load %Objptr, %Objptr* %r19544
	%r19546 = getelementptr inbounds i8, %Objptr %r19545, i32 8
	%r19547 = bitcast %Objptr %r19546 to %Word32*
	store %Word32 %r19543, %Word32* %r19547
	; CW64 (<Frontier>)  = 0x2B
	%r19548 = load %Pointer, %Pointer* %frontier
	%r19549 = bitcast %Pointer %r19548 to %Word64*
	store %Word64 43, %Word64* %r19549
	; RQ(23): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19550 = load %Pointer, %Pointer* %frontier
	%r19552 = ptrtoint %Pointer %r19550 to %uintptr_t
	%r19553 = add %uintptr_t %r19552, 8
	%r19551 = inttoptr %uintptr_t %r19553 to %Pointer
	store %CPointer %r19551, %CPointer* %regQ_23
	; RP(157): Objptr (opt_21)  = Cast (RQ(23): CPointer, Objptr (opt_21))
	%r19554 = load %CPointer, %CPointer* %regQ_23
	%r19555 = bitcast %CPointer %r19554 to %Objptr
	store %Objptr %r19555, %Objptr* %regP_157
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19556 = load %Pointer, %Pointer* %frontier
	%r19558 = ptrtoint %Pointer %r19556 to %uintptr_t
	%r19559 = add %uintptr_t %r19558, 24
	%r19557 = inttoptr %uintptr_t %r19559 to %Pointer
	store %Pointer %r19557, %Pointer* %frontier
	; OW32 (RP(157): Objptr (opt_21), 0): Word32  = 0xA
	%r19560 = load %Objptr, %Objptr* %regP_157
	%r19561 = getelementptr inbounds i8, %Objptr %r19560, i32 0
	%r19562 = bitcast %Objptr %r19561 to %Word32*
	store %Word32 10, %Word32* %r19562
	; OW32 (RP(157): Objptr (opt_21), 4): Word32  = 0x61
	%r19563 = load %Objptr, %Objptr* %regP_157
	%r19564 = getelementptr inbounds i8, %Objptr %r19563, i32 4
	%r19565 = bitcast %Objptr %r19564 to %Word32*
	store %Word32 97, %Word32* %r19565
	; OW32 (RP(157): Objptr (opt_21), 8): [Word8, Word8, Bits16]  = Cast (0x6661, [Word8, Word8, Bits16])
	%r19566 = bitcast %Word32 26209 to %Word32
	%r19567 = load %Objptr, %Objptr* %regP_157
	%r19568 = getelementptr inbounds i8, %Objptr %r19567, i32 8
	%r19569 = bitcast %Objptr %r19568 to %Word32*
	store %Word32 %r19566, %Word32* %r19569
	; CW64 (<Frontier>)  = 0x2B
	%r19570 = load %Pointer, %Pointer* %frontier
	%r19571 = bitcast %Pointer %r19570 to %Word64*
	store %Word64 43, %Word64* %r19571
	; RQ(22): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19572 = load %Pointer, %Pointer* %frontier
	%r19574 = ptrtoint %Pointer %r19572 to %uintptr_t
	%r19575 = add %uintptr_t %r19574, 8
	%r19573 = inttoptr %uintptr_t %r19575 to %Pointer
	store %CPointer %r19573, %CPointer* %regQ_22
	; RP(158): Objptr (opt_21)  = Cast (RQ(22): CPointer, Objptr (opt_21))
	%r19576 = load %CPointer, %CPointer* %regQ_22
	%r19577 = bitcast %CPointer %r19576 to %Objptr
	store %Objptr %r19577, %Objptr* %regP_158
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19578 = load %Pointer, %Pointer* %frontier
	%r19580 = ptrtoint %Pointer %r19578 to %uintptr_t
	%r19581 = add %uintptr_t %r19580, 24
	%r19579 = inttoptr %uintptr_t %r19581 to %Pointer
	store %Pointer %r19579, %Pointer* %frontier
	; OW32 (RP(158): Objptr (opt_21), 0): Word32  = 0xA
	%r19582 = load %Objptr, %Objptr* %regP_158
	%r19583 = getelementptr inbounds i8, %Objptr %r19582, i32 0
	%r19584 = bitcast %Objptr %r19583 to %Word32*
	store %Word32 10, %Word32* %r19584
	; OW32 (RP(158): Objptr (opt_21), 4): Word32  = 0x41
	%r19585 = load %Objptr, %Objptr* %regP_158
	%r19586 = getelementptr inbounds i8, %Objptr %r19585, i32 4
	%r19587 = bitcast %Objptr %r19586 to %Word32*
	store %Word32 65, %Word32* %r19587
	; OW32 (RP(158): Objptr (opt_21), 8): [Word8, Word8, Bits16]  = Cast (0x4641, [Word8, Word8, Bits16])
	%r19588 = bitcast %Word32 17985 to %Word32
	%r19589 = load %Objptr, %Objptr* %regP_158
	%r19590 = getelementptr inbounds i8, %Objptr %r19589, i32 8
	%r19591 = bitcast %Objptr %r19590 to %Word32*
	store %Word32 %r19588, %Word32* %r19591
	; CW64 (<Frontier>)  = 0x49
	%r19592 = load %Pointer, %Pointer* %frontier
	%r19593 = bitcast %Pointer %r19592 to %Word64*
	store %Word64 73, %Word64* %r19593
	; RQ(21): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19594 = load %Pointer, %Pointer* %frontier
	%r19596 = ptrtoint %Pointer %r19594 to %uintptr_t
	%r19597 = add %uintptr_t %r19596, 8
	%r19595 = inttoptr %uintptr_t %r19597 to %Pointer
	store %CPointer %r19595, %CPointer* %regQ_21
	; RP(159): Objptr (opt_36)  = Cast (RQ(21): CPointer, Objptr (opt_36))
	%r19598 = load %CPointer, %CPointer* %regQ_21
	%r19599 = bitcast %CPointer %r19598 to %Objptr
	store %Objptr %r19599, %Objptr* %regP_159
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19600 = load %Pointer, %Pointer* %frontier
	%r19602 = ptrtoint %Pointer %r19600 to %uintptr_t
	%r19603 = add %uintptr_t %r19602, 24
	%r19601 = inttoptr %uintptr_t %r19603 to %Pointer
	store %Pointer %r19601, %Pointer* %frontier
	; OP (RP(159): Objptr (opt_36), 0): Objptr (opt_21)  = RP(158): Objptr (opt_21)
	%r19604 = load %Objptr, %Objptr* %regP_158
	%r19605 = load %Objptr, %Objptr* %regP_159
	%r19606 = getelementptr inbounds i8, %Objptr %r19605, i32 0
	%r19607 = bitcast %Objptr %r19606 to %Objptr*
	store %Objptr %r19604, %Objptr* %r19607
	; OP (RP(159): Objptr (opt_36), 8): Objptr (opt_36)  = Cast (0x1, Objptr (opt_36))
	%r19608 = inttoptr %Word64 1 to %Objptr
	%r19609 = load %Objptr, %Objptr* %regP_159
	%r19610 = getelementptr inbounds i8, %Objptr %r19609, i32 8
	%r19611 = bitcast %Objptr %r19610 to %Objptr*
	store %Objptr %r19608, %Objptr* %r19611
	; CW64 (<Frontier>)  = 0x49
	%r19612 = load %Pointer, %Pointer* %frontier
	%r19613 = bitcast %Pointer %r19612 to %Word64*
	store %Word64 73, %Word64* %r19613
	; RQ(20): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19614 = load %Pointer, %Pointer* %frontier
	%r19616 = ptrtoint %Pointer %r19614 to %uintptr_t
	%r19617 = add %uintptr_t %r19616, 8
	%r19615 = inttoptr %uintptr_t %r19617 to %Pointer
	store %CPointer %r19615, %CPointer* %regQ_20
	; glob {index = 8, isRoot = true, ty = Objptr (opt_36)}  = Cast (RQ(20): CPointer, Objptr (opt_36))
	%r19618 = load %CPointer, %CPointer* %regQ_20
	%r19619 = bitcast %CPointer %r19618 to %Objptr
	%r19620 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 8
	store %Objptr %r19619, %Objptr* %r19620
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19621 = load %Pointer, %Pointer* %frontier
	%r19623 = ptrtoint %Pointer %r19621 to %uintptr_t
	%r19624 = add %uintptr_t %r19623, 24
	%r19622 = inttoptr %uintptr_t %r19624 to %Pointer
	store %Pointer %r19622, %Pointer* %frontier
	; OP (glob {index = 8, isRoot = true, ty = Objptr (opt_36)}, 0): Objptr (opt_21)  = RP(157): Objptr (opt_21)
	%r19625 = load %Objptr, %Objptr* %regP_157
	%r19626 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 8
	%r19627 = load %Objptr, %Objptr* %r19626
	%r19628 = getelementptr inbounds i8, %Objptr %r19627, i32 0
	%r19629 = bitcast %Objptr %r19628 to %Objptr*
	store %Objptr %r19625, %Objptr* %r19629
	; OP (glob {index = 8, isRoot = true, ty = Objptr (opt_36)}, 8): Objptr (opt_36)  = RP(159): Objptr (opt_36)
	%r19630 = load %Objptr, %Objptr* %regP_159
	%r19631 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 8
	%r19632 = load %Objptr, %Objptr* %r19631
	%r19633 = getelementptr inbounds i8, %Objptr %r19632, i32 8
	%r19634 = bitcast %Objptr %r19633 to %Objptr*
	store %Objptr %r19630, %Objptr* %r19634
	; CW64 (<Frontier>)  = 0x3F
	%r19635 = load %Pointer, %Pointer* %frontier
	%r19636 = bitcast %Pointer %r19635 to %Word64*
	store %Word64 63, %Word64* %r19636
	; RQ(19): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19637 = load %Pointer, %Pointer* %frontier
	%r19639 = ptrtoint %Pointer %r19637 to %uintptr_t
	%r19640 = add %uintptr_t %r19639, 8
	%r19638 = inttoptr %uintptr_t %r19640 to %Pointer
	store %CPointer %r19638, %CPointer* %regQ_19
	; glob {index = 9, isRoot = true, ty = Objptr (opt_31)}  = Cast (RQ(19): CPointer, Objptr (opt_31))
	%r19641 = load %CPointer, %CPointer* %regQ_19
	%r19642 = bitcast %CPointer %r19641 to %Objptr
	%r19643 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 9
	store %Objptr %r19642, %Objptr* %r19643
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19644 = load %Pointer, %Pointer* %frontier
	%r19646 = ptrtoint %Pointer %r19644 to %uintptr_t
	%r19647 = add %uintptr_t %r19646, 16
	%r19645 = inttoptr %uintptr_t %r19647 to %Pointer
	store %Pointer %r19645, %Pointer* %frontier
	; OP (glob {index = 9, isRoot = true, ty = Objptr (opt_31)}, 0): Objptr (opt_3)  = glob {index = 105, isRoot = true, ty = Objptr (opt_3)}
	%r19648 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 105
	%r19649 = load %Objptr, %Objptr* %r19648
	%r19650 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 9
	%r19651 = load %Objptr, %Objptr* %r19650
	%r19652 = getelementptr inbounds i8, %Objptr %r19651, i32 0
	%r19653 = bitcast %Objptr %r19652 to %Objptr*
	store %Objptr %r19649, %Objptr* %r19653
	; CW64 (<Frontier>)  = 0x41
	%r19654 = load %Pointer, %Pointer* %frontier
	%r19655 = bitcast %Pointer %r19654 to %Word64*
	store %Word64 65, %Word64* %r19655
	; RQ(18): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19656 = load %Pointer, %Pointer* %frontier
	%r19658 = ptrtoint %Pointer %r19656 to %uintptr_t
	%r19659 = add %uintptr_t %r19658, 8
	%r19657 = inttoptr %uintptr_t %r19659 to %Pointer
	store %CPointer %r19657, %CPointer* %regQ_18
	; glob {index = 10, isRoot = true, ty = Objptr (opt_32)}  = Cast (RQ(18): CPointer, Objptr (opt_32))
	%r19660 = load %CPointer, %CPointer* %regQ_18
	%r19661 = bitcast %CPointer %r19660 to %Objptr
	%r19662 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 10
	store %Objptr %r19661, %Objptr* %r19662
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19663 = load %Pointer, %Pointer* %frontier
	%r19665 = ptrtoint %Pointer %r19663 to %uintptr_t
	%r19666 = add %uintptr_t %r19665, 16
	%r19664 = inttoptr %uintptr_t %r19666 to %Pointer
	store %Pointer %r19664, %Pointer* %frontier
	; OP (glob {index = 10, isRoot = true, ty = Objptr (opt_32)}, 0): Objptr (opt_3)  = glob {index = 106, isRoot = true, ty = Objptr (opt_3)}
	%r19667 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 106
	%r19668 = load %Objptr, %Objptr* %r19667
	%r19669 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 10
	%r19670 = load %Objptr, %Objptr* %r19669
	%r19671 = getelementptr inbounds i8, %Objptr %r19670, i32 0
	%r19672 = bitcast %Objptr %r19671 to %Objptr*
	store %Objptr %r19668, %Objptr* %r19672
	; CW64 (<Frontier>)  = 0x15
	%r19673 = load %Pointer, %Pointer* %frontier
	%r19674 = bitcast %Pointer %r19673 to %Word64*
	store %Word64 21, %Word64* %r19674
	; RQ(17): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19675 = load %Pointer, %Pointer* %frontier
	%r19677 = ptrtoint %Pointer %r19675 to %uintptr_t
	%r19678 = add %uintptr_t %r19677, 8
	%r19676 = inttoptr %uintptr_t %r19678 to %Pointer
	store %CPointer %r19676, %CPointer* %regQ_17
	; glob {index = 11, isRoot = true, ty = Objptr (opt_10)}  = Cast (RQ(17): CPointer, Objptr (opt_10))
	%r19679 = load %CPointer, %CPointer* %regQ_17
	%r19680 = bitcast %CPointer %r19679 to %Objptr
	%r19681 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 11
	store %Objptr %r19680, %Objptr* %r19681
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19682 = load %Pointer, %Pointer* %frontier
	%r19684 = ptrtoint %Pointer %r19682 to %uintptr_t
	%r19685 = add %uintptr_t %r19684, 16
	%r19683 = inttoptr %uintptr_t %r19685 to %Pointer
	store %Pointer %r19683, %Pointer* %frontier
	; OW32 (glob {index = 11, isRoot = true, ty = Objptr (opt_10)}, 0): Word32  = 0x0
	%r19686 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 11
	%r19687 = load %Objptr, %Objptr* %r19686
	%r19688 = getelementptr inbounds i8, %Objptr %r19687, i32 0
	%r19689 = bitcast %Objptr %r19688 to %Word32*
	store %Word32 0, %Word32* %r19689
	; CW64 (<Frontier>)  = 0x41
	%r19690 = load %Pointer, %Pointer* %frontier
	%r19691 = bitcast %Pointer %r19690 to %Word64*
	store %Word64 65, %Word64* %r19691
	; RQ(16): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19692 = load %Pointer, %Pointer* %frontier
	%r19694 = ptrtoint %Pointer %r19692 to %uintptr_t
	%r19695 = add %uintptr_t %r19694, 8
	%r19693 = inttoptr %uintptr_t %r19695 to %Pointer
	store %CPointer %r19693, %CPointer* %regQ_16
	; glob {index = 12, isRoot = true, ty = Objptr (opt_32)}  = Cast (RQ(16): CPointer, Objptr (opt_32))
	%r19696 = load %CPointer, %CPointer* %regQ_16
	%r19697 = bitcast %CPointer %r19696 to %Objptr
	%r19698 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 12
	store %Objptr %r19697, %Objptr* %r19698
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19699 = load %Pointer, %Pointer* %frontier
	%r19701 = ptrtoint %Pointer %r19699 to %uintptr_t
	%r19702 = add %uintptr_t %r19701, 16
	%r19700 = inttoptr %uintptr_t %r19702 to %Pointer
	store %Pointer %r19700, %Pointer* %frontier
	; OP (glob {index = 12, isRoot = true, ty = Objptr (opt_32)}, 0): Objptr (opt_3)  = glob {index = 107, isRoot = true, ty = Objptr (opt_3)}
	%r19703 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 107
	%r19704 = load %Objptr, %Objptr* %r19703
	%r19705 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 12
	%r19706 = load %Objptr, %Objptr* %r19705
	%r19707 = getelementptr inbounds i8, %Objptr %r19706, i32 0
	%r19708 = bitcast %Objptr %r19707 to %Objptr*
	store %Objptr %r19704, %Objptr* %r19708
	; CW64 (<Frontier>)  = 0x41
	%r19709 = load %Pointer, %Pointer* %frontier
	%r19710 = bitcast %Pointer %r19709 to %Word64*
	store %Word64 65, %Word64* %r19710
	; RQ(15): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19711 = load %Pointer, %Pointer* %frontier
	%r19713 = ptrtoint %Pointer %r19711 to %uintptr_t
	%r19714 = add %uintptr_t %r19713, 8
	%r19712 = inttoptr %uintptr_t %r19714 to %Pointer
	store %CPointer %r19712, %CPointer* %regQ_15
	; glob {index = 13, isRoot = true, ty = Objptr (opt_32)}  = Cast (RQ(15): CPointer, Objptr (opt_32))
	%r19715 = load %CPointer, %CPointer* %regQ_15
	%r19716 = bitcast %CPointer %r19715 to %Objptr
	%r19717 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 13
	store %Objptr %r19716, %Objptr* %r19717
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19718 = load %Pointer, %Pointer* %frontier
	%r19720 = ptrtoint %Pointer %r19718 to %uintptr_t
	%r19721 = add %uintptr_t %r19720, 16
	%r19719 = inttoptr %uintptr_t %r19721 to %Pointer
	store %Pointer %r19719, %Pointer* %frontier
	; OP (glob {index = 13, isRoot = true, ty = Objptr (opt_32)}, 0): Objptr (opt_3)  = glob {index = 108, isRoot = true, ty = Objptr (opt_3)}
	%r19722 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 108
	%r19723 = load %Objptr, %Objptr* %r19722
	%r19724 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 13
	%r19725 = load %Objptr, %Objptr* %r19724
	%r19726 = getelementptr inbounds i8, %Objptr %r19725, i32 0
	%r19727 = bitcast %Objptr %r19726 to %Objptr*
	store %Objptr %r19723, %Objptr* %r19727
	; CW64 (<Frontier>)  = 0x15
	%r19728 = load %Pointer, %Pointer* %frontier
	%r19729 = bitcast %Pointer %r19728 to %Word64*
	store %Word64 21, %Word64* %r19729
	; RQ(14): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19730 = load %Pointer, %Pointer* %frontier
	%r19732 = ptrtoint %Pointer %r19730 to %uintptr_t
	%r19733 = add %uintptr_t %r19732, 8
	%r19731 = inttoptr %uintptr_t %r19733 to %Pointer
	store %CPointer %r19731, %CPointer* %regQ_14
	; glob {index = 14, isRoot = true, ty = Objptr (opt_10)}  = Cast (RQ(14): CPointer, Objptr (opt_10))
	%r19734 = load %CPointer, %CPointer* %regQ_14
	%r19735 = bitcast %CPointer %r19734 to %Objptr
	%r19736 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 14
	store %Objptr %r19735, %Objptr* %r19736
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19737 = load %Pointer, %Pointer* %frontier
	%r19739 = ptrtoint %Pointer %r19737 to %uintptr_t
	%r19740 = add %uintptr_t %r19739, 16
	%r19738 = inttoptr %uintptr_t %r19740 to %Pointer
	store %Pointer %r19738, %Pointer* %frontier
	; OW32 (glob {index = 14, isRoot = true, ty = Objptr (opt_10)}, 0): Word32  = 0x0
	%r19741 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 14
	%r19742 = load %Objptr, %Objptr* %r19741
	%r19743 = getelementptr inbounds i8, %Objptr %r19742, i32 0
	%r19744 = bitcast %Objptr %r19743 to %Word32*
	store %Word32 0, %Word32* %r19744
	; CW64 (<Frontier>)  = 0x57
	%r19745 = load %Pointer, %Pointer* %frontier
	%r19746 = bitcast %Pointer %r19745 to %Word64*
	store %Word64 87, %Word64* %r19746
	; RQ(13): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19747 = load %Pointer, %Pointer* %frontier
	%r19749 = ptrtoint %Pointer %r19747 to %uintptr_t
	%r19750 = add %uintptr_t %r19749, 8
	%r19748 = inttoptr %uintptr_t %r19750 to %Pointer
	store %CPointer %r19748, %CPointer* %regQ_13
	; RP(160): Objptr (opt_43)  = Cast (RQ(13): CPointer, Objptr (opt_43))
	%r19751 = load %CPointer, %CPointer* %regQ_13
	%r19752 = bitcast %CPointer %r19751 to %Objptr
	store %Objptr %r19752, %Objptr* %regP_160
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19753 = load %Pointer, %Pointer* %frontier
	%r19755 = ptrtoint %Pointer %r19753 to %uintptr_t
	%r19756 = add %uintptr_t %r19755, 24
	%r19754 = inttoptr %uintptr_t %r19756 to %Pointer
	store %Pointer %r19754, %Pointer* %frontier
	; OP (RP(160): Objptr (opt_43), 0): Objptr (opt_3)  = glob {index = 109, isRoot = true, ty = Objptr (opt_3)}
	%r19757 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 109
	%r19758 = load %Objptr, %Objptr* %r19757
	%r19759 = load %Objptr, %Objptr* %regP_160
	%r19760 = getelementptr inbounds i8, %Objptr %r19759, i32 0
	%r19761 = bitcast %Objptr %r19760 to %Objptr*
	store %Objptr %r19758, %Objptr* %r19761
	; OP (RP(160): Objptr (opt_43), 8): Objptr (opt_43)  = Cast (0x1, Objptr (opt_43))
	%r19762 = inttoptr %Word64 1 to %Objptr
	%r19763 = load %Objptr, %Objptr* %regP_160
	%r19764 = getelementptr inbounds i8, %Objptr %r19763, i32 8
	%r19765 = bitcast %Objptr %r19764 to %Objptr*
	store %Objptr %r19762, %Objptr* %r19765
	; CW64 (<Frontier>)  = 0x57
	%r19766 = load %Pointer, %Pointer* %frontier
	%r19767 = bitcast %Pointer %r19766 to %Word64*
	store %Word64 87, %Word64* %r19767
	; RQ(12): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19768 = load %Pointer, %Pointer* %frontier
	%r19770 = ptrtoint %Pointer %r19768 to %uintptr_t
	%r19771 = add %uintptr_t %r19770, 8
	%r19769 = inttoptr %uintptr_t %r19771 to %Pointer
	store %CPointer %r19769, %CPointer* %regQ_12
	; glob {index = 15, isRoot = true, ty = Objptr (opt_43)}  = Cast (RQ(12): CPointer, Objptr (opt_43))
	%r19772 = load %CPointer, %CPointer* %regQ_12
	%r19773 = bitcast %CPointer %r19772 to %Objptr
	%r19774 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 15
	store %Objptr %r19773, %Objptr* %r19774
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19775 = load %Pointer, %Pointer* %frontier
	%r19777 = ptrtoint %Pointer %r19775 to %uintptr_t
	%r19778 = add %uintptr_t %r19777, 24
	%r19776 = inttoptr %uintptr_t %r19778 to %Pointer
	store %Pointer %r19776, %Pointer* %frontier
	; OP (glob {index = 15, isRoot = true, ty = Objptr (opt_43)}, 0): Objptr (opt_3)  = glob {index = 110, isRoot = true, ty = Objptr (opt_3)}
	%r19779 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 110
	%r19780 = load %Objptr, %Objptr* %r19779
	%r19781 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 15
	%r19782 = load %Objptr, %Objptr* %r19781
	%r19783 = getelementptr inbounds i8, %Objptr %r19782, i32 0
	%r19784 = bitcast %Objptr %r19783 to %Objptr*
	store %Objptr %r19780, %Objptr* %r19784
	; OP (glob {index = 15, isRoot = true, ty = Objptr (opt_43)}, 8): Objptr (opt_43)  = RP(160): Objptr (opt_43)
	%r19785 = load %Objptr, %Objptr* %regP_160
	%r19786 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 15
	%r19787 = load %Objptr, %Objptr* %r19786
	%r19788 = getelementptr inbounds i8, %Objptr %r19787, i32 8
	%r19789 = bitcast %Objptr %r19788 to %Objptr*
	store %Objptr %r19785, %Objptr* %r19789
	; CW64 (<Frontier>)  = 0x41
	%r19790 = load %Pointer, %Pointer* %frontier
	%r19791 = bitcast %Pointer %r19790 to %Word64*
	store %Word64 65, %Word64* %r19791
	; RQ(11): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19792 = load %Pointer, %Pointer* %frontier
	%r19794 = ptrtoint %Pointer %r19792 to %uintptr_t
	%r19795 = add %uintptr_t %r19794, 8
	%r19793 = inttoptr %uintptr_t %r19795 to %Pointer
	store %CPointer %r19793, %CPointer* %regQ_11
	; RP(161): Objptr (opt_32)  = Cast (RQ(11): CPointer, Objptr (opt_32))
	%r19796 = load %CPointer, %CPointer* %regQ_11
	%r19797 = bitcast %CPointer %r19796 to %Objptr
	store %Objptr %r19797, %Objptr* %regP_161
	; <Frontier>  = CPointer_add (<Frontier>, 0x10)
	%r19798 = load %Pointer, %Pointer* %frontier
	%r19800 = ptrtoint %Pointer %r19798 to %uintptr_t
	%r19801 = add %uintptr_t %r19800, 16
	%r19799 = inttoptr %uintptr_t %r19801 to %Pointer
	store %Pointer %r19799, %Pointer* %frontier
	; OP (RP(161): Objptr (opt_32), 0): Objptr (opt_3)  = glob {index = 111, isRoot = true, ty = Objptr (opt_3)}
	%r19802 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 111
	%r19803 = load %Objptr, %Objptr* %r19802
	%r19804 = load %Objptr, %Objptr* %regP_161
	%r19805 = getelementptr inbounds i8, %Objptr %r19804, i32 0
	%r19806 = bitcast %Objptr %r19805 to %Objptr*
	store %Objptr %r19803, %Objptr* %r19806
	; CW64 (<Frontier>)  = 0x57
	%r19807 = load %Pointer, %Pointer* %frontier
	%r19808 = bitcast %Pointer %r19807 to %Word64*
	store %Word64 87, %Word64* %r19808
	; RQ(10): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19809 = load %Pointer, %Pointer* %frontier
	%r19811 = ptrtoint %Pointer %r19809 to %uintptr_t
	%r19812 = add %uintptr_t %r19811, 8
	%r19810 = inttoptr %uintptr_t %r19812 to %Pointer
	store %CPointer %r19810, %CPointer* %regQ_10
	; glob {index = 16, isRoot = true, ty = Objptr (opt_43)}  = Cast (RQ(10): CPointer, Objptr (opt_43))
	%r19813 = load %CPointer, %CPointer* %regQ_10
	%r19814 = bitcast %CPointer %r19813 to %Objptr
	%r19815 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 16
	store %Objptr %r19814, %Objptr* %r19815
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19816 = load %Pointer, %Pointer* %frontier
	%r19818 = ptrtoint %Pointer %r19816 to %uintptr_t
	%r19819 = add %uintptr_t %r19818, 24
	%r19817 = inttoptr %uintptr_t %r19819 to %Pointer
	store %Pointer %r19817, %Pointer* %frontier
	; OP (glob {index = 16, isRoot = true, ty = Objptr (opt_43)}, 0): Objptr (opt_3)  = glob {index = 112, isRoot = true, ty = Objptr (opt_3)}
	%r19820 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 112
	%r19821 = load %Objptr, %Objptr* %r19820
	%r19822 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 16
	%r19823 = load %Objptr, %Objptr* %r19822
	%r19824 = getelementptr inbounds i8, %Objptr %r19823, i32 0
	%r19825 = bitcast %Objptr %r19824 to %Objptr*
	store %Objptr %r19821, %Objptr* %r19825
	; OP (glob {index = 16, isRoot = true, ty = Objptr (opt_43)}, 8): Objptr (opt_43)  = Cast (0x1, Objptr (opt_43))
	%r19826 = inttoptr %Word64 1 to %Objptr
	%r19827 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 16
	%r19828 = load %Objptr, %Objptr* %r19827
	%r19829 = getelementptr inbounds i8, %Objptr %r19828, i32 8
	%r19830 = bitcast %Objptr %r19829 to %Objptr*
	store %Objptr %r19826, %Objptr* %r19830
	; CW64 (<Frontier>)  = 0x55
	%r19831 = load %Pointer, %Pointer* %frontier
	%r19832 = bitcast %Pointer %r19831 to %Word64*
	store %Word64 85, %Word64* %r19832
	; RQ(9): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19833 = load %Pointer, %Pointer* %frontier
	%r19835 = ptrtoint %Pointer %r19833 to %uintptr_t
	%r19836 = add %uintptr_t %r19835, 8
	%r19834 = inttoptr %uintptr_t %r19836 to %Pointer
	store %CPointer %r19834, %CPointer* %regQ_9
	; RP(162): Objptr (opt_42)  = Cast (RQ(9): CPointer, Objptr (opt_42))
	%r19837 = load %CPointer, %CPointer* %regQ_9
	%r19838 = bitcast %CPointer %r19837 to %Objptr
	store %Objptr %r19838, %Objptr* %regP_162
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19839 = load %Pointer, %Pointer* %frontier
	%r19841 = ptrtoint %Pointer %r19839 to %uintptr_t
	%r19842 = add %uintptr_t %r19841, 24
	%r19840 = inttoptr %uintptr_t %r19842 to %Pointer
	store %Pointer %r19840, %Pointer* %frontier
	; OR64 (RP(162): Objptr (opt_42), 0): Real64  = glob {index = 0, isRoot = true, ty = Real64}
	%r19843 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 0
	%r19844 = load %Real64, %Real64* %r19843
	%r19845 = load %Objptr, %Objptr* %regP_162
	%r19846 = getelementptr inbounds i8, %Objptr %r19845, i32 0
	%r19847 = bitcast %Objptr %r19846 to %Real64*
	store %Real64 %r19844, %Real64* %r19847
	; OP (RP(162): Objptr (opt_42), 8): Objptr (opt_42)  = Cast (0x1, Objptr (opt_42))
	%r19848 = inttoptr %Word64 1 to %Objptr
	%r19849 = load %Objptr, %Objptr* %regP_162
	%r19850 = getelementptr inbounds i8, %Objptr %r19849, i32 8
	%r19851 = bitcast %Objptr %r19850 to %Objptr*
	store %Objptr %r19848, %Objptr* %r19851
	; CW64 (<Frontier>)  = 0x55
	%r19852 = load %Pointer, %Pointer* %frontier
	%r19853 = bitcast %Pointer %r19852 to %Word64*
	store %Word64 85, %Word64* %r19853
	; RQ(8): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19854 = load %Pointer, %Pointer* %frontier
	%r19856 = ptrtoint %Pointer %r19854 to %uintptr_t
	%r19857 = add %uintptr_t %r19856, 8
	%r19855 = inttoptr %uintptr_t %r19857 to %Pointer
	store %CPointer %r19855, %CPointer* %regQ_8
	; RP(163): Objptr (opt_42)  = Cast (RQ(8): CPointer, Objptr (opt_42))
	%r19858 = load %CPointer, %CPointer* %regQ_8
	%r19859 = bitcast %CPointer %r19858 to %Objptr
	store %Objptr %r19859, %Objptr* %regP_163
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19860 = load %Pointer, %Pointer* %frontier
	%r19862 = ptrtoint %Pointer %r19860 to %uintptr_t
	%r19863 = add %uintptr_t %r19862, 24
	%r19861 = inttoptr %uintptr_t %r19863 to %Pointer
	store %Pointer %r19861, %Pointer* %frontier
	; OR64 (RP(163): Objptr (opt_42), 0): Real64  = glob {index = 1, isRoot = true, ty = Real64}
	%r19864 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 1
	%r19865 = load %Real64, %Real64* %r19864
	%r19866 = load %Objptr, %Objptr* %regP_163
	%r19867 = getelementptr inbounds i8, %Objptr %r19866, i32 0
	%r19868 = bitcast %Objptr %r19867 to %Real64*
	store %Real64 %r19865, %Real64* %r19868
	; OP (RP(163): Objptr (opt_42), 8): Objptr (opt_42)  = RP(162): Objptr (opt_42)
	%r19869 = load %Objptr, %Objptr* %regP_162
	%r19870 = load %Objptr, %Objptr* %regP_163
	%r19871 = getelementptr inbounds i8, %Objptr %r19870, i32 8
	%r19872 = bitcast %Objptr %r19871 to %Objptr*
	store %Objptr %r19869, %Objptr* %r19872
	; CW64 (<Frontier>)  = 0x55
	%r19873 = load %Pointer, %Pointer* %frontier
	%r19874 = bitcast %Pointer %r19873 to %Word64*
	store %Word64 85, %Word64* %r19874
	; RQ(7): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19875 = load %Pointer, %Pointer* %frontier
	%r19877 = ptrtoint %Pointer %r19875 to %uintptr_t
	%r19878 = add %uintptr_t %r19877, 8
	%r19876 = inttoptr %uintptr_t %r19878 to %Pointer
	store %CPointer %r19876, %CPointer* %regQ_7
	; RP(164): Objptr (opt_42)  = Cast (RQ(7): CPointer, Objptr (opt_42))
	%r19879 = load %CPointer, %CPointer* %regQ_7
	%r19880 = bitcast %CPointer %r19879 to %Objptr
	store %Objptr %r19880, %Objptr* %regP_164
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19881 = load %Pointer, %Pointer* %frontier
	%r19883 = ptrtoint %Pointer %r19881 to %uintptr_t
	%r19884 = add %uintptr_t %r19883, 24
	%r19882 = inttoptr %uintptr_t %r19884 to %Pointer
	store %Pointer %r19882, %Pointer* %frontier
	; OR64 (RP(164): Objptr (opt_42), 0): Real64  = glob {index = 2, isRoot = true, ty = Real64}
	%r19885 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 2
	%r19886 = load %Real64, %Real64* %r19885
	%r19887 = load %Objptr, %Objptr* %regP_164
	%r19888 = getelementptr inbounds i8, %Objptr %r19887, i32 0
	%r19889 = bitcast %Objptr %r19888 to %Real64*
	store %Real64 %r19886, %Real64* %r19889
	; OP (RP(164): Objptr (opt_42), 8): Objptr (opt_42)  = RP(163): Objptr (opt_42)
	%r19890 = load %Objptr, %Objptr* %regP_163
	%r19891 = load %Objptr, %Objptr* %regP_164
	%r19892 = getelementptr inbounds i8, %Objptr %r19891, i32 8
	%r19893 = bitcast %Objptr %r19892 to %Objptr*
	store %Objptr %r19890, %Objptr* %r19893
	; CW64 (<Frontier>)  = 0x55
	%r19894 = load %Pointer, %Pointer* %frontier
	%r19895 = bitcast %Pointer %r19894 to %Word64*
	store %Word64 85, %Word64* %r19895
	; RQ(6): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19896 = load %Pointer, %Pointer* %frontier
	%r19898 = ptrtoint %Pointer %r19896 to %uintptr_t
	%r19899 = add %uintptr_t %r19898, 8
	%r19897 = inttoptr %uintptr_t %r19899 to %Pointer
	store %CPointer %r19897, %CPointer* %regQ_6
	; glob {index = 17, isRoot = true, ty = Objptr (opt_42)}  = Cast (RQ(6): CPointer, Objptr (opt_42))
	%r19900 = load %CPointer, %CPointer* %regQ_6
	%r19901 = bitcast %CPointer %r19900 to %Objptr
	%r19902 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 17
	store %Objptr %r19901, %Objptr* %r19902
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19903 = load %Pointer, %Pointer* %frontier
	%r19905 = ptrtoint %Pointer %r19903 to %uintptr_t
	%r19906 = add %uintptr_t %r19905, 24
	%r19904 = inttoptr %uintptr_t %r19906 to %Pointer
	store %Pointer %r19904, %Pointer* %frontier
	; OR64 (glob {index = 17, isRoot = true, ty = Objptr (opt_42)}, 0): Real64  = glob {index = 3, isRoot = true, ty = Real64}
	%r19907 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 3
	%r19908 = load %Real64, %Real64* %r19907
	%r19909 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 17
	%r19910 = load %Objptr, %Objptr* %r19909
	%r19911 = getelementptr inbounds i8, %Objptr %r19910, i32 0
	%r19912 = bitcast %Objptr %r19911 to %Real64*
	store %Real64 %r19908, %Real64* %r19912
	; OP (glob {index = 17, isRoot = true, ty = Objptr (opt_42)}, 8): Objptr (opt_42)  = RP(164): Objptr (opt_42)
	%r19913 = load %Objptr, %Objptr* %regP_164
	%r19914 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 17
	%r19915 = load %Objptr, %Objptr* %r19914
	%r19916 = getelementptr inbounds i8, %Objptr %r19915, i32 8
	%r19917 = bitcast %Objptr %r19916 to %Objptr*
	store %Objptr %r19913, %Objptr* %r19917
	; CW64 (<Frontier>)  = 0x55
	%r19918 = load %Pointer, %Pointer* %frontier
	%r19919 = bitcast %Pointer %r19918 to %Word64*
	store %Word64 85, %Word64* %r19919
	; RQ(5): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19920 = load %Pointer, %Pointer* %frontier
	%r19922 = ptrtoint %Pointer %r19920 to %uintptr_t
	%r19923 = add %uintptr_t %r19922, 8
	%r19921 = inttoptr %uintptr_t %r19923 to %Pointer
	store %CPointer %r19921, %CPointer* %regQ_5
	; glob {index = 18, isRoot = true, ty = Objptr (opt_42)}  = Cast (RQ(5): CPointer, Objptr (opt_42))
	%r19924 = load %CPointer, %CPointer* %regQ_5
	%r19925 = bitcast %CPointer %r19924 to %Objptr
	%r19926 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 18
	store %Objptr %r19925, %Objptr* %r19926
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19927 = load %Pointer, %Pointer* %frontier
	%r19929 = ptrtoint %Pointer %r19927 to %uintptr_t
	%r19930 = add %uintptr_t %r19929, 24
	%r19928 = inttoptr %uintptr_t %r19930 to %Pointer
	store %Pointer %r19928, %Pointer* %frontier
	; OR64 (glob {index = 18, isRoot = true, ty = Objptr (opt_42)}, 0): Real64  = glob {index = 4, isRoot = true, ty = Real64}
	%r19931 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 4
	%r19932 = load %Real64, %Real64* %r19931
	%r19933 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 18
	%r19934 = load %Objptr, %Objptr* %r19933
	%r19935 = getelementptr inbounds i8, %Objptr %r19934, i32 0
	%r19936 = bitcast %Objptr %r19935 to %Real64*
	store %Real64 %r19932, %Real64* %r19936
	; OP (glob {index = 18, isRoot = true, ty = Objptr (opt_42)}, 8): Objptr (opt_42)  = glob {index = 17, isRoot = true, ty = Objptr (opt_42)}
	%r19937 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 17
	%r19938 = load %Objptr, %Objptr* %r19937
	%r19939 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 18
	%r19940 = load %Objptr, %Objptr* %r19939
	%r19941 = getelementptr inbounds i8, %Objptr %r19940, i32 8
	%r19942 = bitcast %Objptr %r19941 to %Objptr*
	store %Objptr %r19938, %Objptr* %r19942
	; CW64 (<Frontier>)  = 0x55
	%r19943 = load %Pointer, %Pointer* %frontier
	%r19944 = bitcast %Pointer %r19943 to %Word64*
	store %Word64 85, %Word64* %r19944
	; RQ(4): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19945 = load %Pointer, %Pointer* %frontier
	%r19947 = ptrtoint %Pointer %r19945 to %uintptr_t
	%r19948 = add %uintptr_t %r19947, 8
	%r19946 = inttoptr %uintptr_t %r19948 to %Pointer
	store %CPointer %r19946, %CPointer* %regQ_4
	; RP(165): Objptr (opt_42)  = Cast (RQ(4): CPointer, Objptr (opt_42))
	%r19949 = load %CPointer, %CPointer* %regQ_4
	%r19950 = bitcast %CPointer %r19949 to %Objptr
	store %Objptr %r19950, %Objptr* %regP_165
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19951 = load %Pointer, %Pointer* %frontier
	%r19953 = ptrtoint %Pointer %r19951 to %uintptr_t
	%r19954 = add %uintptr_t %r19953, 24
	%r19952 = inttoptr %uintptr_t %r19954 to %Pointer
	store %Pointer %r19952, %Pointer* %frontier
	; OR64 (RP(165): Objptr (opt_42), 0): Real64  = glob {index = 4, isRoot = true, ty = Real64}
	%r19955 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 4
	%r19956 = load %Real64, %Real64* %r19955
	%r19957 = load %Objptr, %Objptr* %regP_165
	%r19958 = getelementptr inbounds i8, %Objptr %r19957, i32 0
	%r19959 = bitcast %Objptr %r19958 to %Real64*
	store %Real64 %r19956, %Real64* %r19959
	; OP (RP(165): Objptr (opt_42), 8): Objptr (opt_42)  = Cast (0x1, Objptr (opt_42))
	%r19960 = inttoptr %Word64 1 to %Objptr
	%r19961 = load %Objptr, %Objptr* %regP_165
	%r19962 = getelementptr inbounds i8, %Objptr %r19961, i32 8
	%r19963 = bitcast %Objptr %r19962 to %Objptr*
	store %Objptr %r19960, %Objptr* %r19963
	; CW64 (<Frontier>)  = 0x55
	%r19964 = load %Pointer, %Pointer* %frontier
	%r19965 = bitcast %Pointer %r19964 to %Word64*
	store %Word64 85, %Word64* %r19965
	; RQ(3): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19966 = load %Pointer, %Pointer* %frontier
	%r19968 = ptrtoint %Pointer %r19966 to %uintptr_t
	%r19969 = add %uintptr_t %r19968, 8
	%r19967 = inttoptr %uintptr_t %r19969 to %Pointer
	store %CPointer %r19967, %CPointer* %regQ_3
	; RP(166): Objptr (opt_42)  = Cast (RQ(3): CPointer, Objptr (opt_42))
	%r19970 = load %CPointer, %CPointer* %regQ_3
	%r19971 = bitcast %CPointer %r19970 to %Objptr
	store %Objptr %r19971, %Objptr* %regP_166
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19972 = load %Pointer, %Pointer* %frontier
	%r19974 = ptrtoint %Pointer %r19972 to %uintptr_t
	%r19975 = add %uintptr_t %r19974, 24
	%r19973 = inttoptr %uintptr_t %r19975 to %Pointer
	store %Pointer %r19973, %Pointer* %frontier
	; OR64 (RP(166): Objptr (opt_42), 0): Real64  = glob {index = 3, isRoot = true, ty = Real64}
	%r19976 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 3
	%r19977 = load %Real64, %Real64* %r19976
	%r19978 = load %Objptr, %Objptr* %regP_166
	%r19979 = getelementptr inbounds i8, %Objptr %r19978, i32 0
	%r19980 = bitcast %Objptr %r19979 to %Real64*
	store %Real64 %r19977, %Real64* %r19980
	; OP (RP(166): Objptr (opt_42), 8): Objptr (opt_42)  = RP(165): Objptr (opt_42)
	%r19981 = load %Objptr, %Objptr* %regP_165
	%r19982 = load %Objptr, %Objptr* %regP_166
	%r19983 = getelementptr inbounds i8, %Objptr %r19982, i32 8
	%r19984 = bitcast %Objptr %r19983 to %Objptr*
	store %Objptr %r19981, %Objptr* %r19984
	; CW64 (<Frontier>)  = 0x55
	%r19985 = load %Pointer, %Pointer* %frontier
	%r19986 = bitcast %Pointer %r19985 to %Word64*
	store %Word64 85, %Word64* %r19986
	; RQ(2): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r19987 = load %Pointer, %Pointer* %frontier
	%r19989 = ptrtoint %Pointer %r19987 to %uintptr_t
	%r19990 = add %uintptr_t %r19989, 8
	%r19988 = inttoptr %uintptr_t %r19990 to %Pointer
	store %CPointer %r19988, %CPointer* %regQ_2
	; RP(167): Objptr (opt_42)  = Cast (RQ(2): CPointer, Objptr (opt_42))
	%r19991 = load %CPointer, %CPointer* %regQ_2
	%r19992 = bitcast %CPointer %r19991 to %Objptr
	store %Objptr %r19992, %Objptr* %regP_167
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r19993 = load %Pointer, %Pointer* %frontier
	%r19995 = ptrtoint %Pointer %r19993 to %uintptr_t
	%r19996 = add %uintptr_t %r19995, 24
	%r19994 = inttoptr %uintptr_t %r19996 to %Pointer
	store %Pointer %r19994, %Pointer* %frontier
	; OR64 (RP(167): Objptr (opt_42), 0): Real64  = glob {index = 2, isRoot = true, ty = Real64}
	%r19997 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 2
	%r19998 = load %Real64, %Real64* %r19997
	%r19999 = load %Objptr, %Objptr* %regP_167
	%r20000 = getelementptr inbounds i8, %Objptr %r19999, i32 0
	%r20001 = bitcast %Objptr %r20000 to %Real64*
	store %Real64 %r19998, %Real64* %r20001
	; OP (RP(167): Objptr (opt_42), 8): Objptr (opt_42)  = RP(166): Objptr (opt_42)
	%r20002 = load %Objptr, %Objptr* %regP_166
	%r20003 = load %Objptr, %Objptr* %regP_167
	%r20004 = getelementptr inbounds i8, %Objptr %r20003, i32 8
	%r20005 = bitcast %Objptr %r20004 to %Objptr*
	store %Objptr %r20002, %Objptr* %r20005
	; CW64 (<Frontier>)  = 0x55
	%r20006 = load %Pointer, %Pointer* %frontier
	%r20007 = bitcast %Pointer %r20006 to %Word64*
	store %Word64 85, %Word64* %r20007
	; RQ(1): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r20008 = load %Pointer, %Pointer* %frontier
	%r20010 = ptrtoint %Pointer %r20008 to %uintptr_t
	%r20011 = add %uintptr_t %r20010, 8
	%r20009 = inttoptr %uintptr_t %r20011 to %Pointer
	store %CPointer %r20009, %CPointer* %regQ_1
	; glob {index = 19, isRoot = true, ty = Objptr (opt_42)}  = Cast (RQ(1): CPointer, Objptr (opt_42))
	%r20012 = load %CPointer, %CPointer* %regQ_1
	%r20013 = bitcast %CPointer %r20012 to %Objptr
	%r20014 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 19
	store %Objptr %r20013, %Objptr* %r20014
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r20015 = load %Pointer, %Pointer* %frontier
	%r20017 = ptrtoint %Pointer %r20015 to %uintptr_t
	%r20018 = add %uintptr_t %r20017, 24
	%r20016 = inttoptr %uintptr_t %r20018 to %Pointer
	store %Pointer %r20016, %Pointer* %frontier
	; OR64 (glob {index = 19, isRoot = true, ty = Objptr (opt_42)}, 0): Real64  = glob {index = 1, isRoot = true, ty = Real64}
	%r20019 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 1
	%r20020 = load %Real64, %Real64* %r20019
	%r20021 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 19
	%r20022 = load %Objptr, %Objptr* %r20021
	%r20023 = getelementptr inbounds i8, %Objptr %r20022, i32 0
	%r20024 = bitcast %Objptr %r20023 to %Real64*
	store %Real64 %r20020, %Real64* %r20024
	; OP (glob {index = 19, isRoot = true, ty = Objptr (opt_42)}, 8): Objptr (opt_42)  = RP(167): Objptr (opt_42)
	%r20025 = load %Objptr, %Objptr* %regP_167
	%r20026 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 19
	%r20027 = load %Objptr, %Objptr* %r20026
	%r20028 = getelementptr inbounds i8, %Objptr %r20027, i32 8
	%r20029 = bitcast %Objptr %r20028 to %Objptr*
	store %Objptr %r20025, %Objptr* %r20029
	; CW64 (<Frontier>)  = 0x55
	%r20030 = load %Pointer, %Pointer* %frontier
	%r20031 = bitcast %Pointer %r20030 to %Word64*
	store %Word64 85, %Word64* %r20031
	; RQ(0): CPointer  = CPointer_add (<Frontier>, 0x8)
	%r20032 = load %Pointer, %Pointer* %frontier
	%r20034 = ptrtoint %Pointer %r20032 to %uintptr_t
	%r20035 = add %uintptr_t %r20034, 8
	%r20033 = inttoptr %uintptr_t %r20035 to %Pointer
	store %CPointer %r20033, %CPointer* %regQ_0
	; glob {index = 20, isRoot = true, ty = Objptr (opt_42)}  = Cast (RQ(0): CPointer, Objptr (opt_42))
	%r20036 = load %CPointer, %CPointer* %regQ_0
	%r20037 = bitcast %CPointer %r20036 to %Objptr
	%r20038 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 20
	store %Objptr %r20037, %Objptr* %r20038
	; <Frontier>  = CPointer_add (<Frontier>, 0x18)
	%r20039 = load %Pointer, %Pointer* %frontier
	%r20041 = ptrtoint %Pointer %r20039 to %uintptr_t
	%r20042 = add %uintptr_t %r20041, 24
	%r20040 = inttoptr %uintptr_t %r20042 to %Pointer
	store %Pointer %r20040, %Pointer* %frontier
	; OR64 (glob {index = 20, isRoot = true, ty = Objptr (opt_42)}, 0): Real64  = glob {index = 0, isRoot = true, ty = Real64}
	%r20043 = getelementptr inbounds [6 x %Real64], [6 x %Real64]* @globalReal64, i32 0, i32 0
	%r20044 = load %Real64, %Real64* %r20043
	%r20045 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 20
	%r20046 = load %Objptr, %Objptr* %r20045
	%r20047 = getelementptr inbounds i8, %Objptr %r20046, i32 0
	%r20048 = bitcast %Objptr %r20047 to %Real64*
	store %Real64 %r20044, %Real64* %r20048
	; OP (glob {index = 20, isRoot = true, ty = Objptr (opt_42)}, 8): Objptr (opt_42)  = glob {index = 19, isRoot = true, ty = Objptr (opt_42)}
	%r20049 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 19
	%r20050 = load %Objptr, %Objptr* %r20049
	%r20051 = getelementptr inbounds [153 x %Objptr], [153 x %Objptr]* @globalObjptr, i32 0, i32 20
	%r20052 = load %Objptr, %Objptr* %r20051
	%r20053 = getelementptr inbounds i8, %Objptr %r20052, i32 8
	%r20054 = bitcast %Objptr %r20053 to %Objptr*
	store %Objptr %r20050, %Objptr* %r20054
	; CCall {args = (<GCState>, 0x0, 0x0, 0x2D), frameInfo = Some {frameLayoutsIndex = 0}, func = {args = (GCState, Word64, Word64, Word64), convention = cdecl, kind = Runtime {bytesNeeded = None, ensuresBytesFree = true, mayGC = true, maySwitchThreads = false, modifiesFrontier = true, readsStackTop = true, writesStackTop = true}, prototype = {args = (CPointer, Word64, Int64, Word64), res = Some Objptr}, return = Objptr (opt_22), symbolScope = private, target = GC_arrayAllocate}, return = Some L_3}
	; GetOperands
	%r20055 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20056 = load %Pointer, %Pointer* %stackTop
	%r20057 = getelementptr inbounds i8, %Pointer %r20056, i32 0
	%r20058 = bitcast %Pointer %r20057 to %uintptr_t*
	store %uintptr_t 0, %uintptr_t* %r20058
	; Push(8)
	%r20059 = load %Pointer, %Pointer* %stackTop
	%r20060 = getelementptr inbounds i8, %Pointer %r20059, i32 8
	store %Pointer %r20060, %Pointer* %stackTop
	; FlushFrontier
	%r20061 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20062 = getelementptr inbounds i8, %Pointer %r20061, i32 0
	%r20063 = bitcast %Pointer %r20062 to %Pointer*
	%r20064 = load %Pointer, %Pointer* %frontier
	store %Pointer %r20064, %Pointer* %r20063
	; FlushStackTop
	%r20065 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20066 = getelementptr inbounds i8, %Pointer %r20065, i32 16
	%r20067 = bitcast %Pointer %r20066 to %Pointer*
	%r20068 = load %Pointer, %Pointer* %stackTop
	store %Pointer %r20068, %Pointer* %r20067
	; Call
	%r20069 = call %Objptr @GC_arrayAllocate(%Pointer %r20055, %Word64 0, %Word64 0, %Word64 45)
	store %Objptr %r20069, %Objptr* @CReturnP
	; CacheFrontier
	%r20070 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20071 = getelementptr inbounds i8, %Pointer %r20070, i32 0
	%r20072 = bitcast %Pointer %r20071 to %Pointer*
	%r20073 = load %Pointer, %Pointer* %r20072
	store %Pointer %r20073, %Pointer* %frontier
	; CacheStackTop
	%r20074 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20075 = getelementptr inbounds i8, %Pointer %r20074, i32 16
	%r20076 = bitcast %Pointer %r20075 to %Pointer*
	%r20077 = load %Pointer, %Pointer* %r20076
	store %Pointer %r20077, %Pointer* %stackTop
	br label %L_3

L_1:
	; RW64(0): Word64  = CPointer_diff (OQ (<GCState>, 1104): CPointer, <Frontier>)
	%r20078 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20079 = getelementptr inbounds i8, %Pointer %r20078, i32 1104
	%r20080 = bitcast %Pointer %r20079 to %CPointer*
	%r20081 = load %CPointer, %CPointer* %r20080
	%r20082 = load %Pointer, %Pointer* %frontier
	%r20084 = ptrtoint %Pointer %r20081 to %uintptr_t
	%r20085 = ptrtoint %Pointer %r20082 to %uintptr_t
	%r20083 = sub %uintptr_t %r20084, %r20085
	store %Word64 %r20083, %Word64* %regW64_0
	; RW32(0): Word32  = WordU64_lt (RW64(0): Word64, 0x1170)
	%r20086 = load %Word64, %Word64* %regW64_0
	%r20088 = icmp ult %Word64 %r20086, 4464
	%r20087 = zext i1 %r20088 to %Word32
	store %Word32 %r20087, %Word32* %regW32_0
	; switch {test = RW32(0): Word32, default = None, cases = ((0x0, L_2), (0x1, L_6))}
	%r20089 = load %Word32, %Word32* %regW32_0
	%r20090 = trunc %Word32 %r20089 to i1
	br i1 %r20090, label %L_6, label %L_2

L_0:
	; RW32(0): Word32  = CPointer_lt (OQ (<GCState>, 24): CPointer, <StackTop>)
	%r20091 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20092 = getelementptr inbounds i8, %Pointer %r20091, i32 24
	%r20093 = bitcast %Pointer %r20092 to %CPointer*
	%r20094 = load %CPointer, %CPointer* %r20093
	%r20095 = load %Pointer, %Pointer* %stackTop
	%r20097 = icmp ult %Pointer %r20094, %r20095
	%r20096 = zext i1 %r20097 to %Word32
	store %Word32 %r20096, %Word32* %regW32_0
	; switch {test = RW32(0): Word32, default = None, cases = ((0x0, L_1), (0x1, L_6))}
	%r20098 = load %Word32, %Word32* %regW32_0
	%r20099 = trunc %Word32 %r20098 to i1
	br i1 %r20099, label %L_6, label %L_1

F_0:
	; Goto L_0
	br label %L_0

default:
	%r20100 = load %uintptr_t, %uintptr_t* %l_nextFun
	store %uintptr_t %r20100, %uintptr_t* @nextFun
	%r20101 = getelementptr inbounds [0 x void (%struct.cont*)*], [0 x void (%struct.cont*)*]* @nextChunks, i32 0, %uintptr_t %r20100
	%r20102 = load void (%struct.cont*)*, void (%struct.cont*)** %r20101
	%r20103 = bitcast void (%struct.cont*)* %r20102 to i8*
	%r20104 = getelementptr inbounds %struct.cont, %struct.cont* %cont, i32 0, i32 0
	store i8* %r20103, i8** %r20104
	br label %leaveChunk
leaveChunk:
	; FlushFrontier
	%r20105 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20106 = getelementptr inbounds i8, %Pointer %r20105, i32 0
	%r20107 = bitcast %Pointer %r20106 to %Pointer*
	%r20108 = load %Pointer, %Pointer* %frontier
	store %Pointer %r20108, %Pointer* %r20107
	; FlushStackTop
	%r20109 = bitcast %struct.GC_state* @gcState to %Pointer
	%r20110 = getelementptr inbounds i8, %Pointer %r20109, i32 16
	%r20111 = bitcast %Pointer %r20110 to %Pointer*
	%r20112 = load %Pointer, %Pointer* %stackTop
	store %Pointer %r20112, %Pointer* %r20111
	%r20113 = load %struct.cont, %struct.cont* %cont
	ret %struct.cont %r20113
}

declare %Objptr @GC_arrayAllocate(%Pointer, %Word64, %Word64, %Word64)
declare %struct.cont @Chunk1()
declare void @GC_collect(%Pointer, %Word64, %Word32)
